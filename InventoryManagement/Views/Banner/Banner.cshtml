
@model InventoryManagement.Models.M_Banner

@{
    ViewBag.Title = "Banner";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script>
    $(document).ready(function () {
        $(".preloader").hide();
    });


   
    function SaveBanner(action) {
        debugger;
        Wait();
        $(".preloader").show();
        var BannerCatId = $("#Banner_BannerCatId").val();
       // var Bannername = $("#Banner_BannerName").val();
        $('#btnsave').prop('disabled', true);
        if (BannerCatId == "") {
            PopUp("Please Select the Banner Category");
            return;
        }
        //var imgPath = $("#Banner_ImagePath").val();
        var FileUpload1 = $("#Banner_ImagePath");

        var fileUpload2 = $("#FileUpload").get(0);
        var files = fileUpload2.files;
        var fileData = new FormData();

        for (var i = 0; i < files.length; i++) {
            fileData.append(files[i].name, files[i]);
        }
        fileData.append('BannerCatId', $('#Banner_BannerCatId').val());
        //fileData.append('Bannername', $('#Banner_BannerName').val());
        fileData.append('BannerId', $('#hdnBannerId').val());


        $.ajax({
            type: "POST",
            url: '@Url.Action("SaveBanner")',
            dataType: "json",
            contentType: false,
            processData: false,
            data: fileData,
            success: function (data) {
                if (data.save == "S") {
                    PopUp("Saved Successfully")
                    window.location.reload();
                    return;
                }
               // Stop();
                $(".preloader").hide();
            },
            error: function (xhr, status, error) {
                PopUp(status);
            }
          
        });
        $('#btnsave').prop('disabled', false);
        Stop();

         $(".preloader").hide();
    }
   


    function ShowUpd(obj, BannerId, CompanyId, CompanyName, BannerName, ImagePath) {
        debugger;
        $('#btnupd').show();
        $('#btnsave').hide();
        $('#hdnBannerId').val(BannerId);
        $('#Banner_BannerName').val(BannerName);
        $('#Banner_CompanyId').val(CompanyId);
        $('#Banner_ImagePath').val(ImagePath);

    }


    function Refresh() {
        location.reload();
    }


    function DeleteRow(obj, BannerId, BannerDetailId, BannerName, ImagePath) {
        debugger;
        Wait();
        $(".preloader").show();
        var tr = $(obj).parents('tr:first');
        var r = confirm("Are you sure you want to delete ?");
        if (r == true)
        {
            $.ajax({
                type: "POST",
                url: '@Url.Action("DeleteBannerLstRow")',
                datatype: "Json",
                data: { BannerId: BannerId, BannerDetailId: BannerDetailId, BannerName: BannerName, ImagePath: ImagePath },
                success: function (data) {
                    debugger;
                    if (data.del == "D") {
                        PopUp("Delete Sucessfully!");
                        window.location.reload();
                        return;
                    }
                    Stop();
                    $(".preloader").hide();

                }

            });
            Stop();
            $(".preloader").hide();
        }
        Stop();
        $(".preloader").hide();
       
    }


    function BannerCatChange() {
        debugger;
        var BannerCatId = $("#Banner_BannerCatId").val();
        $('#FileUpload').val('');
        $.ajax({
            type: "POST",
            url: '@Url.Action("getBannerSize")',
            datatype: "Json",
            data: { BannerCatId: BannerCatId },
            success: function (data) {
                debugger;
                $("#spnImgSize").text(data.objl[0].Size);
                $("#hdnimgSize").val(data.objl[0].Size);
              
            }

        });

    }



</script>


<script>
    function GetFileSize() {
        debugger;
        var fi = document.getElementById('FileUpload');
        var fileName = fi.value;// GET THE FILE INPUT.
        var ext = fileName.substr(fileName.lastIndexOf('.') + 1).toLowerCase();
        if ( ext != "jpg" ) {
            PopUp("File extention Should be Jpg");
            $('#FileUpload').val('');
        }``
        var imgSize = $("#hdnimgSize").val();
        var BannerCatId = $("#Banner_BannerCatId").val();
        var _URL = window.URL || window.webkitURL;
        var file = fi.files[0];
        img = new Image();
        img.src = _URL.createObjectURL(file)
        //img.onload = () => {
        img.onload = function () {
            debugger;
            //alert(img.width + " " + img.height);
            if (img.width === 1920 && img.height === 650 && BannerCatId == "1")
            {
                //PopUp(`Nice, image is the right size. It can be uploaded`)
                
                
            }
           
            else if (img.width === 570 && img.height === 225 && BannerCatId == "2")
            {
            }
            else if (img.width === 570 && img.height === 180 && BannerCatId == "3")
            {
            }
            else if (img.width === 570 && img.height === 435 && BannerCatId == "4")
            {
            }
            else if (img.width === 270 && img.height === 455 && BannerCatId == "5")
            { }
            else {
                PopUp(`Sorry, this image doesn't look like the size we wanted. It's ${img.width} x ${img.height} but  require` + imgSize + `.`);
                $('#FileUpload').val('');
            }
        }

       
       
        //var _URL = window.URL || window.webkitURL;
        //var file =fi.files[0];
        //img = new Image();
        //var imgwidth = 0;
        //var imgheight = 0;
        //var maxwidth = 1920;
        //var maxheight = 65;
        //img.src = _URL.createObjectURL(file);
        //img.onload = function () {
        //    imgwidth = this.width;
        //    imgheight = this.height;
        //    alert(this.width + " " + this.height);
        //    //$("#width").text(imgwidth);
        //    //$("#height").text(imgheight);
        //}

        //if (this.width === maxwidth && this.height === maxheight)
        //{
        //   // PopUp("Image size must be " + maxwidth + "X" + maxheight);
        //   // $('#FileUpload').val('');
        //}
        //else {
        //    PopUp("Image size must be " + maxwidth + "X" + maxheight);
        //     $('#FileUpload').val('');
        //}

        //if ((file = fi.files[0])) {
        //    img = new Image();
        //    var objectUrl = _URL.createObjectURL(file);
        //    img.onload = function () {
        //        alert(this.width + " " + this.height);
        //        var width = this.width;
        //        var height = this.height;
        //        _URL.revokeObjectURL(objectUrl);
        //    };
        //    img.src = objectUrl;
        //}
      
        // VALIDATE OR CHECK IF ANY FILE IS SELECTED.
        //if (fi.files.length > 0) {
        //    // RUN A LOOP TO CHECK EACH SELECTED FILE.
        //    for (var i = 0; i <= fi.files.length - 1; i++) {

        //        var fsize = fi.files.item(i).size;
        //        var filekb = Math.round((fsize / 1024));
        //        var sizeLimit = 500;
        //        if (filekb >= sizeLimit)
        //        {
        //            PopUp("FileSize Should be less then 500kb");
        //            $('#FileUpload').val('');
        //            return true;
        //        }


        //        // THE SIZE OF THE FILE.
        //       // document.getElementById('fp').innerHTML =
        //            //document.getElementById('fp').innerHTML + '<br /> ' +
        //                //'<b>' + Math.round((fsize / 1024)) + '</b> KB';
        //    }
        //}
    }
</script>





@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "bannerform" }))
{
    <div class="text-center white-bg ">
        <div class="col-sm-12 " style="color:orange">
            <h2><b>Banner Master </b></h2>
        </div>
    </div>


    <div class="wrapper wrapper-content">
        <form class="form-horizontal" method="post">
            <div class="row">
                <div class="col-sm-12">
                    <div class="ibox float-e-margins">

                        <br />
                        <div class="ibox-title">
                            <h5>Enter Banner Detail</h5>
                            @*<div class="ibox-tools">
                                    <a class="collapse-link">
                                        <i class="fa fa-chevron-up"></i>
                                    </a>
                                </div>*@
                        </div>
                        <br />
                        <div class="ibox-content">
                            <div class="row">
                                <div class="form-group">
                                    <div class="col-sm-12">
                                        <div class="col-sm-1">
                                                <label class="control-label legendLabel">
                                                   Banner Category:
                                                </label>
                                            </div>
                                            <div class="col-sm-2">
                                                @Html.DropDownListFor(x => x.Banner.BannerCatId, new SelectList(Model.GetBannerCatList as System.Collections.IEnumerable, "BannerCatId", "BannerCatName"), "--Select--", new { @class = "form-control", @required = "required", @onchange="BannerCatChange();" })
                                                @Html.ValidationMessageFor(x => x.Banner.BannerCatId, "", new { @class = "validation_error" })

                                            </div>
                                        @*<div class="col-sm-1">
                                            <label class="control-label legendLabel">
                                                Banner Name:
                                            </label>
                                        </div>*@
                                        @*<div class="col-sm-2">
                                            @Html.TextBoxFor(x => x.Banner.BannerName, new { @class = "form-control", @placeholder = "Banner Name", @required = "required", @maxlength = "100" })
                                            @Html.ValidationMessageFor(m => m.Banner.BannerName, "", new { @class = "validation_error" })

                                        </div>*@
                                        <div class="col-sm-1">
                                            <label class="control-label legendLabel">
                                                Image:
                                            </label>
                                        </div>
                                        <div class="col-sm-3">
                                            @*@*<input type="file" id="FileUpload" multiple="true" />*@
                                            @Html.TextBoxFor(x => x.Banner.ImagePath, "", new { @type = "file",@id="FileUpload" , @accept = "image/*", @multiple = "multiple", @required = "required" ,@onchange="GetFileSize();" })
                                            @Html.ValidationMessageFor(x => x.Banner.ImagePath, "", new { @class = "text-danger" })

                                            <input type="hidden" id="hdnBannerId" />
                                            <input type="hidden" id="hdnimgSize" />
                                            <label id="lblImgSize" style="color:red" ><span style="color:red" id="spnImgSize">@*&nbsp;(Image Size Limit:)*@</span></label>

                                        </div>
                                        <div class="col-sm-1">
                                            <input type='button' class='btn btn-primary' id='btnsave' value='Save' onclick='SaveBanner("SaveBanner");' />
                                            <input type='button' class='btn btn-primary' style="display:none;" id='btnupd' value='Update' onclick='SaveBanner("UpdateBanner");' />
                                        </div>
                                        <div class="col-sm-1">
                                            <input type='button' class='btn btn-primary' id='btnref' value='Refresh' onclick='Refresh();' />
                                        </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-sm-12">
                    <div class="ibox float-e-margins">
                        <br />
                        <div class="ibox-content">
                            <div class="row ViewCompany" style="overflow-x:auto">

                                @*@if (Model.GRDCompany != null && Model.GRDCompany.Count() > 0)
                                    {
                                        @Html.Partial("_PartialCompanymaster", Model)
                                    }*@

                                <div class="col-sm-12">
                                    @if (Model.GRDBanner != null)
                                    {
                                        var grid = new WebGrid(source: Model.GRDBanner, canPage: false, canSort: false);
                                        @grid.GetHtml(tableStyle: "table table-striped table-bordered table-hover dataTables", fillEmptyRows: false, mode: WebGridPagerModes.Numeric, htmlAttributes: new { id = "GRDBanner" },

                                 columns: grid.Columns(
                                  grid.Column(header: "Sr. No.", format: item => item.WebGrid.Rows.IndexOf(item) + 1 + Math.Round(Convert.ToDouble(grid.TotalRowCount / grid.PageCount) / grid.RowsPerPage) * grid.RowsPerPage * grid.PageIndex),
                                  
                                 // grid.Column("CompanyName", "Company Name"),
                              grid.Column("BannerCatName", "Banner Name"),
                              // grid.Column("Image", "Banner Name"),
                              grid.Column("Image", format: @<text><a href='#'><img src='~/Uploads/@item.ImagePath' width="50" height="50" /></a></text>, canSort: false),
                                    
                         grid.Column("Delete Row", format: @<text> <button type="button" class="save-row btn btn-sm btn-primary" onclick="DeleteRow(this,'@item.BannerId','@item.BannerDetailId','@item.BannerName','@item.ImagePath');" style="width:58px;">Delete</button> </text>)
                        ));


}
else
{
                                        <center> <p> No Record Found</p></center>

                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
                </div>
        </form>
    </div>
    <div style="height:600px"></div>

}


