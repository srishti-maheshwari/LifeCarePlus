@model InventoryManagement.Entity.Common.SalesReport
@using InventoryManagement.Common
@using InventoryManagement.Entity.Common
@{
    ViewBag.Title = "Delete Purchase Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string CurrentPartyCode = (Session["LoginUser"] as User).PartyCode;
    string CurrentPartyName = (Session["LoginUser"] as User).PartyName;
}

<style>
    .ui-widget-header {
        margin-top: -1% !important;
        width: 102% !important;
        margin-left: -1% !important;
    }

    .gj-grid-wrapper {
        min-width: 100% !important;
        overflow-x: scroll !important;
    }

    .ui-dialog-titlebar-close {
        margin-right: 1% !important;
    }

    .ui-widget-content {
        background: white !important;
        border-radius: 15px !important;
        -webkit-border-radius: 4px !important;
    }
    /*.ui-widget-header .ui-icon {
        background-color: black!important;
    }*/
    ui-autocomplete-input {
        z-index: 100;
    }

    .input-readonly {
        background-color: #EBEBE4;
    }
</style>
<script type="text/javascript">
    var grid, dialog;
    var IsYes = false;
    var BillWiseGrid = [];
    var BillNoToDelete;
    var FsessId;
    var IsDateFilter = false;
    var IsDateFilter = false;
    var FromDate = "", ToDate = "";
    var IsBill = false;
    var PreviouslySelectedFromDate = "";
    var PreviouslySelectedToDate = "";
    var PreviouslySelectedFromPickerDate = "", type = "";
    var PreviouslySelectedToPickerDate = "";
    $(document).ready(function () {
        $("#GetBillForm")[0].reset();

        $('#IsDateFilter').on('ifChecked', function () {
            IsDateFilter = true;
            FromDate = "";
            ToDate = "";
            $("#StartDate").val("All");
            $("#StartDate").prop("readonly", "readonly");
            $("#EndDate").val("All");
            $("#EndDate").prop("readonly", "readonly");
        });
        $('#IsDateFilter').on('ifUnchecked', function () {
            FromDate = "";
            ToDate = "";
            IsDateFilter = false;
            $("#StartDate").val("");
            $("#StartDate").prop("readonly", "");
            $("#EndDate").val("");
            $("#EndDate").prop("readonly", "");
        });

        $("#StartDate").datetimepicker({
            format: 'DD-MM-YYYY',
            widgetPositioning: {
                horizontal: 'auto',
                vertical: 'bottom'
            }

        }).on('dp.change', function (e) {
            var selectedDate = e.date._d;
            var lengthOfMonth = ((selectedDate.getMonth() + 1).toString()).length;
            var twoDigitMonth = (lengthOfMonth > 1) ? (selectedDate.getMonth() + 1) : '0' + (selectedDate.getMonth() + 1);
            var newFromDate = selectedDate.getDate() + "-" + twoDigitMonth + "-" + selectedDate.getFullYear();

            FromDate = newFromDate;
            PreviouslySelectedFromPickerDate = newFromDate;
            ToDate = PreviouslySelectedToPickerDate;
        });

        $("#EndDate").datetimepicker({
            format: 'DD-MM-YYYY',
            widgetPositioning: {
                horizontal: 'auto',
                vertical: 'bottom'
            }

        }).on('dp.change', function (e) {
            var selectedDate = e.date._d;
            var lengthOfMonth = ((selectedDate.getMonth() + 1).toString()).length;
            var twoDigitMonth = (lengthOfMonth > 1) ? (selectedDate.getMonth() + 1) : '0' + (selectedDate.getMonth() + 1);

            var newToDate = selectedDate.getDate() + "-" + twoDigitMonth + "-" + selectedDate.getFullYear();

            ToDate = newToDate;
            PreviouslySelectedToPickerDate = newToDate;
            FromDate = PreviouslySelectedFromPickerDate;
        });

        $('#IsBill').on('ifChecked', function () {
            IsBill = true;
            $("#BillNo").val("All");
            $("#BillNo").prop("readonly", "readonly");

        });

        $('#IsBill').on('ifUnchecked', function () {
            IsBill = false;
            $("#BillNo").val("");
            $("#BillNo").prop("readonly", "");
            $("#BillNo").val("");
        });

        $(".preloader").hide();



        $("#YesBtn").click(function () {
            var ReasonDelete = $("#ReasonToDelete").val();
            DeleteBill(ReasonDelete);

        });

        $("#NoBtn").click(function () {
            BillNoToDelete = "0";
            FsessId = 0;
            $("#dialogDeleteBill").dialog("close");
        });

        $(".getReport").on('click', function () {
            $(".preloader").show();
            GetAllPurchaseInvoice();
        });



    });
    function DeleteSelectedBill(e) {
        BillNoToDelete = e.data.record.InvoiceNo;
        FsessId = e.data.record.FSessId;
        $("#BillNoToDelete").html(e.data.record.InvoiceNo);
        OpenDeleteBill();
    }
    function OpenDeleteBill() {
        $("#dialogDeleteBill").dialog({
            modal: true,

        });
        $(".ui-dialog-titlebar-close").empty();
        $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
    }

    function DeleteBill(ReasonDelete) {
        $(".preloader").show();
        $.ajax({
            url: '@Url.Action("DeletePurchaseInvoices", "Transaction")',
            type: 'GET',
            data: { "InwardNo": BillNoToDelete, "FsessId": FsessId, "Reason": ReasonDelete },
            dataType: "json",
            success: function (objResult) {
                $(".preloader").hide();
                $("#dialogDeleteBill").dialog('close');
                if (objResult != null) {

                    if (objResult.ResponseStatus == "OK") {
                        OpenDialog("dialogMessage", "Invoice Deleted Successfully", "false");
                        window.location.reload();
                    }
                    else {
                        OpenDialog("dialogMessage", objResult.ResponseMessage, "false");
                    }

                }
            },
            error: function (xhr, data) {
                $(".preloader").hide();
                console.log(xhr);
                console.log("Error:", data);
            }
        });
    }

    function GetAllPurchaseInvoice(){

        BillNo = $("#BillNo").val();

        var DateError = false;
        if (FromDate != "" && FromDate != null && ToDate != null && ToDate != null) {
            var d1 = toDate(FromDate);
            var d2 = toDate(ToDate);

            if (d1 > d2) {

                DateError = true;
                $(".preloader").hide();
                OpenDialog("dialogMessage", "From Date should be less than To Date!", "false");
            }
            else {
                DateError = false;

            }
        }
        else {
            DateError = false;
            if (DateError == false) {
                if (IsDateFilter == false) {
                }
            }
            if (FromDate == "" || FromDate == null) {
                FromDate = "All";
            }
            if (ToDate == "" || ToDate == null) {
                ToDate = "All";
            }

        }
        if (BillNo == "" || BillNo == null) {
            BillNo = 0;
        }

        if (DateError == false) {
         $.ajax({
          url: '@Url.Action("GetPurchaseSummary", "Report")',
          type: 'POST',
          data: { "FromDate": FromDate, "ToDate": ToDate, "PartyCode": '@CurrentPartyCode', "SupplierCode": "0", "ReportType": "Invoice", "InvoiceNo": BillNo },

            dataType: "json",
            success: function (objResult) {
                BillWiseGrid = [];
                console.log("objResult", objResult);

                if (objResult.length > 0) {
                    for (var i = 0; i < objResult.length; i++) {
                                    var dateObj = new Date(objResult[i].InvoiceDateStr.match(/\d+/)[0] * 1);
                                    var myDate = (dateObj.getDate()) + "/" + (dateObj.getMonth() + 1) + "/" + dateObj.getFullYear();
                                    var InvoicePath = '@Url.Action("PurchaseInvoicePrint", "Report", new {Pm="-1"})';
                                    var encodedparameters = objResult[i].InvoiceNo;
                                    //console.log("encodedparameters", encodedparameters);
                                    //encodedparameters="uid=testuser&pwd=test123456&Id=84503&Name=tes&Email=abc@xyz.com&MobileNo=9829898298&Address=Bhl";
                                    var EncryptedB64Url = window.btoa(encodedparameters);
                                    console.log("EncryptedB64Url", EncryptedB64Url);
                                    InvoicePath = InvoicePath.replace("-1", EncryptedB64Url);
                                    BillWiseGrid.push({ "InvoicePath": InvoicePath, "SNo": i + 1, "InvoiceFor": objResult[i].InvoiceFor, "InvoiceNo": objResult[i].InvoiceNo, "RefNo": objResult[i].RefNo, "InvoiceDateStr": myDate, "SupplierCode": objResult[i].SupplierCode, "SupplierName": objResult[i].SupplierName, "TotalQty": objResult[i].TotalQty, "Amount": objResult[i].Amount, "NetAmount": objResult[i].NetAmount, "TaxAmount": objResult[i].TaxAmount, "TradeDisc": objResult[i].TradeDisc, "CashDisc": objResult[i].CashDisc, "FSessId": objResult[i].FSessId });

                                }

                }

                fillGrid();

                $(".preloader").hide();
            },
            error: function (xhr, data) {
                //  return false;
                console.log(xhr);
                console.log("Error:", data);
            }
        });
    }

    }

    function toDate(dateStr) {
        var parts = dateStr.split("-");
        return new Date(parts[2], parts[1] - 1, parts[0]);
    }

    function OpenDialog(dialogId, Message, isConfirmation) {
        $("#" + dialogId).empty();
        $("#" + dialogId).append('<p>' + Message + '</p>');
        if (isConfirmation == "true") {
            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "Yes",
                    id: "btnYes" + dialogId,
                    click: function () {
                        IsYes = true;
                        $("#" + dialogId).dialog("close");


                    }
                },
                {
                    text: "No",
                    id: "btnNo" + dialogId,
                    click: function () {
                        IsYes = false;
                        $("#" + dialogId).dialog("close");
                    }
                }
                ]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }
        else {


            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "OK",
                    id: "btn" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}

                        $("#" + dialogId).dialog("close");


                    }
                }]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }

    }
    function fillGrid() {
        console.log("BillWiseGrid", BillWiseGrid);

        // BillWiseGrid = BillWiseGrid.splice(1);

        $("#noRecord").hide();
        //console.log("ProductGrid", ProductGrid);
        if (grid != null) {
            grid.destroy();
            $('#grid').empty();

        }

        var CanEdit = true;
        var UserAccess = '@ViewBag.UserCanAccess';

        if (UserAccess == 'Edit') {
            CanEdit = false;
        }

        grid = $('#grid').grid({
            dataSource: BillWiseGrid,
        uiLibrary: 'bootstrap',
        headerFilter: true,
        columns: [
           { field: 'SNo', width: 80, title: 'S.No.', sortable: true, hidden: false, filterable: false },
           { field: 'InvoiceFor', width: 100, title: 'Invoice For', sortable: true, hidden: false, filterable: true },
           { field: 'InvoiceNo', width: 100, title: 'Invoice No.', sortable: true, hidden: false, filterable: true, tmpl: '<a target="_blank" style="text-decoration:underline;color:blue" href={InvoicePath}>{InvoiceNo}</a>', align: 'center' },
           { field: 'RefNo', width: 100, title: 'Ref No', sortable: true, hidden: false, filterable: true },
           { field: 'InvoiceDateStr', width: 100, title: 'Date', sortable: true, hidden: false, filterable: true },
            { field: 'SupplierCode', width: 100, title: 'Code', sortable: true, hidden: false, filterable: true },
             { field: 'SupplierName', width: 200, title: 'Name', sortable: true, hidden: false, filterable: true },
              { field: 'TotalQty', width: 80, title: 'Total Qty', sortable: true, hidden: false, filterable: true },
               { field: 'Amount',width: 80, title: 'Amount', sortable: true, hidden: false, filterable: true },
               { field: 'TradeDisc',width: 80, title: 'Trade Disc.', sortable: true, hidden: false, filterable: true },
               { field: 'TaxAmount', width: 80, title: 'Tax Amount', sortable: true, hidden: false, filterable: true },
               { field: 'CashDisc', width: 80, title: 'Cash Disc', sortable: true, hidden: false, filterable: true },
                { field: 'NetAmount', width: 80, title: 'Net Amount', sortable: true, hidden: false, filterable: true },
                { title: '', field: 'Delete',hidden:CanEdit, type: 'icon', width: 30, icon: 'glyphicon-remove', tooltip: 'Delete', events: { 'click': DeleteSelectedBill }, filterable: false }

        ],
        pager: { limit: 20, sizes: [15, 20, 35, 50, 65, 80, 95, 100] }
    });

    }

</script>

<div class="row">
    <div class="page-title">
        <div class="title_left">
            <h3>Transaction</h3>
        </div>
        <div class="title_right">
            <div class="col-md-5 col-sm-5 col-xs-12 form-group pull-right top_search">

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>Delete Purchase Invoice</h2>
                    <ul class="nav navbar-right panel_toolbox">
                        <li>
                            <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                        </li>

                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <br />

                    <form id="GetBillForm" method="post" name="GetBillForm" onsubmit="false" data-parsley-validate class="validateForm form-horizontal form-label-left">
                        <div class="col-lg-12">
                            <div class="col-lg-8">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="control-label col-lg-6 col-md-3 col-sm-3 col-xs-12" for="category-name">
                                            From Date
                                        </label>
                                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12" style="padding-left: 0.5%;">

                                            @Html.TextBoxFor(m => m.StartDate, new { name = "StartDate", id = "StartDate", tabindex = "1", @class = "form-control col-md-7 col-xs-12" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="control-label col-lg-6 col-md-3 col-sm-3 col-xs-12" for="category-name">
                                            To Date
                                        </label>
                                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12" style="padding-left: 0.5%;">

                                            @Html.TextBoxFor(m => m.EndDate, new { name = "EndDate", id = "EndDate", tabindex = "2", @class = "form-control col-md-7 col-xs-12" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    <div id="IsDateDiv">
                                        <label>
                                            <input type="checkbox" id="IsDateFilter" name="IsDateFilter" class="flat" tabindex="3" />


                                        </label>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="col-lg-8">
                                <div class="form-group">
                                    <label class="control-label col-lg-3 col-md-3 col-sm-3 col-xs-12" for="category-name">
                                        Invoice Number
                                    </label>
                                    <div class="col-lg-9 col-md-6 col-sm-6 col-xs-12" style="padding-left: 0.5%;">

                                        @Html.TextBoxFor(m => m.BillNo, new { name = "BillNo", id = "BillNo", tabindex = "4", @class = "form-control col-md-7 col-xs-12" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    <div id="IsCategoryDiv">
                                        <label>
                                            <input type="checkbox" id="IsBill" name="IsBill" class="flat" tabindex="5" />


                                        </label>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                <div class="col-lg-12"> 
                                    <div class="col-lg-2">&nbsp;</div>
                                        <div class="col-lg-4">
                                            <input type="button" id="btnSummaryReport" name="btnSummaryReport" data-type="summary" value="Get List" class="getReport btn btn-success" />
                                        </div>
                                        <div class="col-lg-3">&nbsp;</div>
                                    </div>                                
                            </div>
                        </div>
                        </form>

                        <br />
                        <form id="DeleteBillForm" method="post" name="DeleteBillForm" onsubmit="false" data-parsley-validate class="validateForm form-horizontal form-label-left">
                            <div class="row" style="margin-top:1%">
                                <br />
                                <div>
                                    <b><span id="StockTypeLabel"></span></b>
                                </div>
                                <br />

                            <br />@*<br /><br /><center><div class="loader" style="display:none"></div></center>*@
                            <table class="table bootstrap-datatable" id="grid"></table>
                            <center><span style="display:none" id="noRecord">No Record Found</span></center>


                        </div>


                        <table id="gridExport" style="display:none"></table>
                    </form>
                </div>

            </div>
        </div>
    </div>
    <div id="dialogMessage" title="Message">

    </div>
    <div id="dialogDeleteBill" title="Delete Bill" style="display:none">
        <div class="col-lg-12" style="background-color:lightgrey;border:1px black solid;">
            <span style="width:100%;"><center>Are you sure!! Do you want to delete this Invoice?</center></span>
        </div>
        <br />
        <div class="row" style="margin-top:1%">
            <div class="col-lg-12">

                <label class="col-lg-6">
                    Invoice No.
                </label>
                <label class="col-lg-6" id="BillNoToDelete">

                </label>
            </div>
            <div class="col-lg-12">
                <label class="col-lg-6">
                    Reason
                </label>
                <div class="col-lg-6">
                    <input type="text" maxlength="100" id="ReasonToDelete" class="form-control" />
                </div>
            </div>

        </div>
        <div class="row" style="margin-top:1%">
            <div class="col-lg-6 col-lg-offset-3">

                @*<button class="btn btn-primary" type="reset" onclick="reset()">Reset</button>*@
                <button type="button" id="YesBtn" class="btn btn-success" tabindex="0">Yes</button>
                <button class="btn btn-primary" type="button" id="NoBtn" tabindex="0">No</button>
            </div>
        </div>
    </div>



</div>

