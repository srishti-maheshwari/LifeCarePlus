@model InventoryManagement.Entity.Common.DisptachOrderModel
@using InventoryManagement.Common
@using InventoryManagement.Entity.Common
@{
    ViewBag.Title = "OldBills";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>OldBills</h2>
<style>
    .ui-widget-header {
        margin-top: -1% !important;
        width: 102% !important;
        margin-left: -1% !important;
    }

    .gj-grid-wrapper {
        min-width: 100% !important;
        overflow-x: scroll !important;
    }

    .ui-dialog-titlebar-close {
        margin-right: 1% !important;
    }

    .ui-widget-content {
        background: white !important;
        border-radius: 15px !important;
        -webkit-border-radius: 4px !important;
    }
    /*.ui-widget-header .ui-icon {
        background-color: black!important;
    }*/
    ui-autocomplete-input {
        z-index: 100;
    }

    .input-readonly {
        background-color: #EBEBE4;
    }
</style>
<script type="text/javascript">
    var FromDate = "";
    var ToDate = "";
    var DispMode = "";
    var SoldBy = "";
    var OrderDispatchList = "";
    var OrderDispatchArray = [{}];
    var IsId = false;
    var IsOrder = false;
    var IsParty = false;
    var PreviouslySelectedFromDate = "";
    var PreviouslySelectedToDate = "";
    var PreviouslySelectedToPickerDate = "";
    var PreviouslySelectedFromPickerDate = "";
    var IsDateFilter = false;
    var grid, dialog;
    var OrderProductGrid = [{}];
    var ViewType = "Pending";
    var PartyList = [];
    var PartyCode = "";
    var IdNo = "";
    var OrderNo = "";
    var FullPartyList;
    var OrderNoToReject = 0;

    $(document).ready(function () {
        $(".preloader").hide();
        // FullProductList = ProductListJson;
      
        $("#Dispatched").click(function () {
            $("#Pending_Save").hide();
            ViewType = "Dispatched";
            IdNo = $("#IdNo").val();
            OrderNo = $("#OrderNo").val();
            GetBillDetail(FromDate, ToDate, IdNo,  OrderNo);
        });
      
              
        $('#IsId').on('ifChecked', function () {
            //console.log("checked");
            IsId = true;
            $("#IdNo").val("All");
            $("#IdNo").prop("readonly", "readonly");
            IdNo="All";

        });

        $('#IsId').on('ifUnchecked', function () {
            //console.log("checked");
            IsId = false;
            $("#IdNo").val("");
            $("#IdNo").prop("readonly", "");
            IdNo="";

        });
        $('#IsOrder').on('ifChecked', function () {
            //console.log("checked");
            IsOrder = true;
            $("#OrderNo").val("All");
            $("#OrderNo").prop("readonly", "readonly");
            OrderNo="All";

        });

        $('#IsOrder').on('ifUnchecked', function () {
            //console.log("checked");
            IsOrder = false;
            $("#OrderNo").val("");
            $("#OrderNo").prop("readonly", "");
            OrderNo="";

        });

        $('#IsDateFilter').on('ifChecked', function () {
            //console.log("checked");
            IsDateFilter = true;
            $("#StartDate").val("All");
            $("#StartDate").prop("readonly", "readonly");
            FromDate = "";
            ToDate = "";
            $("#EndDate").val("All");
            $("#EndDate").prop("readonly", "readonly");
        });
        $('#IsDateFilter').on('ifUnchecked', function () {
            //console.log("checked");
            IsDateFilter = false;
            $("#StartDate").val("");
            $("#StartDate").prop("readonly", "");
            $("#EndDate").val("");
            $("#EndDate").prop("readonly", "");
            FromDate = "";
            ToDate = "";
        });
        $("#StartDate").datetimepicker({


            format: 'DD-MM-YYYY'
           ,
            // todayHighlight:true,
            widgetPositioning: {
                horizontal: 'auto',
                vertical: 'bottom'
            }

        }).on('dp.change', function (e) {
            // console.log(e.date);
            // fromDate = $('#FromDatePickerWidget').val();
            var selectedDate = e.date._d;
            console.log(selectedDate.getMonth());
            console.log(selectedDate.getMonth() + 1);
            var lengthOfMonth = ((selectedDate.getMonth() + 1).toString()).length;
            console.log(lengthOfMonth);
            var twoDigitMonth = (lengthOfMonth > 1) ? (selectedDate.getMonth() + 1) : '0' + (selectedDate.getMonth() + 1);

            var newFromDate = selectedDate.getDate() + "-" + twoDigitMonth + "-" + selectedDate.getFullYear();
            console.log("newDate", newFromDate);
            FromDate = newFromDate;
            PreviouslySelectedFromPickerDate = newFromDate;
            console.log("FromDate", FromDate);
            ToDate = PreviouslySelectedToPickerDate;

        });
        $("#EndDate").datetimepicker({


            format: 'DD-MM-YYYY'
            ,
            // todayHighlight:true,
            widgetPositioning: {
                horizontal: 'auto',
                vertical: 'bottom'
            }

        }).on('dp.change', function (e) {
            // console.log(e.date);
            // fromDate = $('#FromDatePickerWidget').val();
            var selectedDate = e.date._d;
            console.log(selectedDate.getMonth() + 1);
            var lengthOfMonth = ((selectedDate.getMonth() + 1).toString()).length;
            console.log(lengthOfMonth);
            var twoDigitMonth = (lengthOfMonth > 1) ? (selectedDate.getMonth() + 1) : '0' + (selectedDate.getMonth() + 1);

            var newToDate = selectedDate.getDate() + "-" + twoDigitMonth + "-" + selectedDate.getFullYear();
            console.log("newToDate", newToDate);
            ToDate = newToDate;
            PreviouslySelectedToPickerDate = newToDate;
            console.log("ToDate in picker", ToDate);
            FromDate = PreviouslySelectedFromPickerDate;

        });

      

    }); 

   
    function ShowOrderDetail(e) {
        console.log("ShowOrderDetail");
        GetBillProducts(e.data.record.BillNo);
        OpenOrderDetails();
    }

     function GetBillProducts(BillNo) {
        console.log("GetBillProducts");
        $.ajax({
            url: '@Url.Action("GetBillProducts", "Transaction")',
            type: 'GET',
            data: { "billNo": BillNo },
            async:false,
            dataType: "json",
            success: function (objResult) {
                if (objResult != null) {
                    $("#OrderNoToGet").html(BillNo);
                    $("#OrderProductDetails").empty();
                    var tableStr;
                    for (var i = 0; i < objResult.length; i++) {
                        tableStr = tableStr + "<tr><td>" + objResult[i].ProductCodeStr + "</td><td>" + objResult[i].ProductName + "</td><td>" + objResult[i].DP + "</td><td>" + objResult[i].BV + "</td><td>" + objResult[i].DispQty + "</td><td>" + objResult[i].Amount + "</td></tr>";
                    }
                    $("#OrderProductDetails").html(tableStr);
                }
            }
        });
    }

 
    function OpenOrderDetails() {
        console.log("OpenOrderDetails");
        $("#dialogOrder").dialog({
            modal: true,
            buttons: [{
                text: "OK",
                id: "btndialogOrder",
                click: function () {
                    //var isOpen = $("#dialog").dialog("isOpen");
                    //if (isOpen == true) {
                    //    okCallBack();
                    //}

                    $("#dialogOrder").dialog("close");


                }
            }]
        });
        $(".ui-dialog-titlebar-close").empty();
        $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
    }

    function GetBillDetail(FromDate,ToDate,IdNo,OrderNo){
        $(".preloader").hide();
        var DateError = false;

        if (FromDate != "" && FromDate != null && ToDate != null && ToDate != ""&&FromDate!="All"&&ToDate!="All") {
            //var d1 = new Date(FromDate);
            //var d2 = new Date(ToDate);
            console.log("FromDate in get", FromDate);
            console.log("ToDate in get", ToDate);
            var d1 = toFormatDate(FromDate);
            var d2 = toFormatDate(ToDate);
            console.log("d1", d1);
            console.log("d2", d2);
            if (d1 > d2) {
                DateError = true;
                $(".preloader").hide();
                OpenDialog("dialogMessage", "From Date should be less than ToDate!", "false");
                //$("#StartDate").focus();
            }
            else {
                DateError = false;
                console.log("in else");

            }
        }
        else {
            DateError = false;
            console.log("PreviouslySelectedFromDate", PreviouslySelectedFromDate);
            console.log("PreviouslySelectedToDate", PreviouslySelectedToDate);

            if (FromDate == "" || FromDate == null) {
                FromDate = "All";
            } if (ToDate == "" || ToDate == null) {
                ToDate = "All";
            }
        }

        if (IdNo == "" || IdNo == null) {
                IdNo = 0;
        }
        if (OrderNo == "" || OrderNo == null) {
            OrderNo = 0;
        }
   
        if (DateError == false) {

            console.log("FromDate", FromDate);
            console.log("ToDate", ToDate);

            $.ajax({
                url: '@Url.Action("GetOldBills", "Transaction")',
                type: 'POST',
                data: { "FromDate": FromDate, "ToDate": ToDate, "IdNo":IdNo,"OrderNo":OrderNo },
                dataType: "json",
                success: function (objResult) {
                    OrderProductGrid = [{}];
                    if (objResult.length > 0) {

                        OrderProductGrid = OrderProductGrid.splice(1);
                        for (var i = 0; i < objResult.length; i++) {
                            var dateObj = new Date(objResult[i].BillDate.match(/\d+/)[0] * 1);
                            var myDate = (dateObj.getDate()) + "/" + (dateObj.getMonth() + 1) + "/" + dateObj.getFullYear();
                            // OrderProductGrid.push({ "SNo": i + 1, "PartyCode": objResult[i].FCode, "PartyName": objResult[i].PartyName, "RefNo": objResult[i].RefNo, "ProductCode": objResult[i].objProduct.ProductCodeStr, "ProductName": objResult[i].objProduct.ProductName, "JvNo": objResult[i].JvNo, "Qty": objResult[i].objProduct.Quantity, "Remarks": objResult[i].Remarks, "SoldBy": objResult[i].SoldBy, "BatchNo": objResult[i].objProduct.BatchNo, "OrderDate": myDate });
                            OrderProductGrid.push({ "SNo": i + 1, "BillNo": objResult[i].BillNo, "FCode": objResult[i].FCode, "PartyName": objResult[i].PartyName, "NetPayable": objResult[i].NetPayable, "BillDate": myDate, "BVValue": objResult[i].BVValue, "IsDeleted": objResult[i].IsDeleted, "Username": objResult[i].Username });
                        }
                        //tableStockGrid = StockGrid;
                        $("#noRecord").hide();
                    }
                    else {
                        $("#noRecord").show();
                    }
                    fillGrid();
                    $(".preloader").hide();

                },
                error: function (xhr, data) {
                    //  return false;
                    console.log(xhr);
                    console.log("Error:", data);
                }
            });
        }
    }
 
    function toFormatDate(dateStrToFormat) {
        // console.log("dateStr", dateStr);
        var parts = dateStrToFormat.split("-");
        return new Date(parts[2], parts[1] - 1, parts[0]);
    }
    function SetSpecificCode(type, label) {

        if (type == "Party") {
            for (var i = 0; i < FullPartyList.length; i++) {
                if (FullPartyList[i].PartyName == label) {
                    PartyCode=FullPartyList[i].PartyCode;
                    break;
                }
            }
        }
    }
   
    function fillGrid() {
        console.log("BillProductGrid", OrderProductGrid);
        // StockGrid = StockGrid.splice(1);
        $("#noRecord").hide();
        //console.log("ProductGrid", ProductGrid);
        if (grid != null) {
            grid.destroy();
            $('#grid').empty();

        }        
            grid = $('#grid').grid({
                dataSource: OrderProductGrid,
                uiLibrary: 'bootstrap',
                headerFilter: true,
                columns: [
                   
                     { field: 'BillNo', width: 100, title: 'Bill No.', sortable: true, hidden: false, filterable: true, events: { 'click': ShowOrderDetail } },
                     { field: 'BillDate', width: 100, title: 'Bill Date', sortable: true, hidden: false, filterable: true },
                      { field: 'FCode', width: 100, title: 'ID No.', sortable: true, hidden: false, filterable: true },
                       { field: 'PartyName', width: 250, title: 'Name', sortable: true, hidden: false, filterable: true },
                        { field: 'BVValue', width: 80, title: 'PV Value', sortable: true, hidden: false, filterable: true },
                        { field: 'NetPayable', width: 100, title: 'Net Payable', sortable: true, hidden: false, filterable: true },
                        { field: 'Username', width: 100, title: 'Franchise', sortable: true, hidden: false, filterable: true },
                         { field: 'IsDeleted', width: 100, title: 'Is Deleted', sortable: true, hidden: false, filterable: true },
                ],
                pager: { limit: 20, sizes: [15, 20, 35, 50, 65, 80, 95, 100] }
            });
         }
</script>
<div class="row">
    <div class="page-title">
        <div class="title_left">
            <h3>Transaction</h3>
        </div>
        <div class="title_right">
            <div class="col-md-5 col-sm-5 col-xs-12 form-group pull-right top_search">

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>Old Bills</h2>
                    <ul class="nav navbar-right panel_toolbox">
                        <li>
                            <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                        </li>

                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <br />
                    <form id="DispatchOrderForm" method="post" name="DispatchOrderForm" onsubmit="false" data-parsley-validate class="validateForm form-horizontal form-label-left">
                        @Html.HiddenFor(m => m.OrderList, new { id = "OrderList", name = "OrderList" })


                        <div class="row" style="margin-top:1%">
                            <div class="col-lg-8">
                                <div class="col-lg-6">

                                    <label class="control-label col-lg-4 col-md-3 col-sm-3 col-xs-12" for="category-name">
                                        From Date @*<span class="required">*</span>*@
                                    </label>
                                    <div class="col-lg-7 col-md-6 col-sm-6 col-xs-12" style="padding-left: 0.5%;">

                                        @Html.TextBoxFor(m => m.FromDate, new { name = "StartDate", id = "StartDate", tabindex = "1", @class = "form-control col-md-7 col-xs-12" })
                                    </div>

                                </div>
                                <div class="col-lg-6">

                                    <label class="control-label col-lg-4 col-md-3 col-sm-3 col-xs-12" for="category-name">
                                        To Date @*<span class="required">*</span>*@
                                    </label>
                                    <div class="col-lg-8 col-md-6 col-sm-6 col-xs-12" style="padding-left: 0.5%;padding-right:0px">

                                        @Html.TextBoxFor(m => m.ToDate, new { name = "EndDate", id = "EndDate", tabindex = "2", @class = "form-control col-md-7 col-xs-12" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div id="IsDateDiv">
                                    <label>
                                        <input type="checkbox" id="IsDateFilter" name="IsDateFilter" class="flat" tabindex="0" />
                                    </label>
                                </div>
                            </div>
                        </div>
              
                        <div class="row" style="margin-top:1%">
                            <div class="col-lg-8">
                                <div class="col-lg-8">
                                    <label class="control-label col-lg-3 col-md-3 col-sm-3 col-xs-12" for="category-name">
                                        Id Wise @*<span class="required">*</span>*@
                                    </label>
                                    <div class="col-lg-7" style="padding-left: 0.5%;">
                                        @Html.TextBoxFor(m => m.IdNo, new { id = "IdNo", name = "IdNo", @class = "form-control", maxlength = "20" })
                                    </div>
                                    <div class="col-lg-2" id="IdDiv">
                                        <label>
                                            <input type="checkbox" id="IsId" name="IsId" class="flat" tabindex="6" />
                                         </label>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <label class="control-label col-lg-5 col-md-3 col-sm-3 col-xs-12" style="padding-left: 0px;" for="category-name">
                                        Bill Wise @*<span class="required">*</span>*@
                                    </label>
                                    <div class="col-lg-7" style="padding-left: 0.5%;padding-right: 0.5%;">
                                        @Html.TextBoxFor(m => m.OrderNo, new { id = "OrderNo", name = "OrderNo", @class = "form-control", maxlength = "20" })
                                    </div>
                                </div>

                            </div>
                            <div class="col-lg-4">
                                <div id="OrderDiv">
                                    <label>
                                        <input type="checkbox" id="IsOrder" name="IsOrder" class="flat" tabindex="6" />
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="row" style="margin-top:1%">
    <div class="col-lg-5">
        &nbsp;
    </div>
    <div class="col-lg-7">
        <div class="col-lg-9 col-md-6 col-sm-6 col-xs-12" style="margin-left: 14%;">
            <a style="cursor:pointer;color:blue;text-decoration:underline" id="Dispatched">Search</a>
            <img id="btnExport" src="~/images/ExcelImage.jpg" style="height: 25px;width: 7%;cursor:pointer" />
        </div>

    </div>
</div>
                        <div class="row" style="margin-top:1%">
                            <br />
                            <div>
                                <b><span id="StockTypeLabel"></span></b>
                            </div>
                            <br />

                            <br />@*<br /><br /><center><div class="loader" style="display:none"></div></center>*@
                            <table class="table bootstrap-datatable" id="grid"></table>
                            <center><span style="display:none" id="noRecord">No Stock Found</span></center>


                        </div>
                      
              
                        <table id="gridExport" style="display:none"></table>
                    </form>
                </div>

            </div>
        </div>
    </div>
    <div id="dialogMessage" title="Message">

    </div>

    <div id="dialogOrder" title="BillDetail" style="display:none;padding:0px;width:400px">
        <div class="col-lg-12" style="background-color:lightgrey;border:1px black solid;"><span style="width:100%;"><center>Bill No:<span id="OrderNoToGet"></span></center></span></div>
        <div class="col-lg-12" style="height: auto;overflow-y: auto;min-height: 150px;">

            <br />
            <table style="width:100%;border-width:1px" border="1">
                <thead>
                    <tr>
                        <th><span>Prod.ID</span></th>
                        <th><span>Product Name</span></th>
                        <th><span>DP</span></th>
                        <th><span>PV</span></th>
                        <th><span>Qty</span></th>
                        <th><span>Amount</span></th>
                    </tr>
                </thead>
                <tbody id="OrderProductDetails"></tbody>
            </table>
        </div>
    </div>

</div>
