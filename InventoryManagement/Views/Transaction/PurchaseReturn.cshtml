@using InventoryManagement.Entity.Common
@{
    ViewBag.Title = "Purchase Return";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int CurrentStateCode = (Session["LoginUser"] as User).StateCode;
}

<style>
    .RowMargin {
        margin-bottom: 1%;
    }

    .input-readonly {
        background-color: #EBEBE4;
    }

    .gj-grid-wrapper {
        min-width: 100% !important;
        overflow-x: scroll !important;
    }

    #dialogEditLowerGrid {
        width: 970px !important;
        height: 400px !important;
    }

    .ui-dialog {
        width: 970px !important;
        height: 400px !important;
    }

    .ui-widget-header {
        margin-top: -1% !important;
        width: 102% !important;
        margin-left: -1% !important;
    }

    .ui-dialog-titlebar-close {
        margin-right: 1% !important;
    }

    .ui-widget-content {
        background: white !important;
        border-radius: 15px !important;
        -webkit-border-radius: 4px !important;
    }
</style>

<script src="~/Scripts/DateFormat.js"></script>
<script type="text/javascript">
    var uppergrid;
    var ProductGrid = [];
    var CurrentlySelectedProduct;
    var IsAnyProductReturn = true;
    $(document).ready(function () {
        $(".preloader").hide();
        clearValues();
        $('#returnto').val("");
        $('#reason').val("");
        $('#refno').val("");

        GetListOfSuppliers();

        $("#cancelClick").click(function () {
            clearValues();
            $('#returnto').val("");
            $('#reason').val("");
        });
        
        $('#returnto').change(function () {
            clearValues();
            GetListOfPartyBills($(this).val());
        });

        $('#clearAndClose').click(function () {
            ClearProductValues()
        });

        $('#BillNo').change(function () {
            GetBillDetails($(this).val());
        });

        $("#ReturnQuantity").focusout(function () {
            $("#ErrorMsg").empty();
            var returnQty = $("#ReturnQuantity").val();
            CurrentlySelectedProduct.ReturnQty = returnQty;
            var Qty = $("#OrderedQty").val();
            if (returnQty != null && returnQty != undefined && returnQty != "" && parseInt(returnQty) === 0) {
                $("#ErrorMsg").html("Return Quantity should be greater than 0.");
            }
            else {
                var remainingQty = parseInt(Qty) - parseInt(returnQty)
                if (remainingQty < 0) {
                    $("#ErrorMsg").html("Return Quantity should be less than ordered quantity!");
                }
                else {
                    $("#RemainingQty").val(remainingQty);
                    DoCalculation(returnQty);
                }
            }
        });

        $("form[name=PurchaseReturnForm]").submit(function (event) {
            $("#SavePurchaseReturnForm").attr("disabled", true);
            var reason = $('#reason').val();
            var BillNo = $('#BillNo').val();
            var refno = $('#refno').val();

            if (refno != null && refno != undefined && refno != "") {
                if (reason != null && reason != undefined && reason != "") {
                    if (BillNo != null && BillNo != undefined && BillNo != "") {
                        validateFormValues(event);
                    }
                    else {
                        $("#SavePurchaseReturnForm").removeAttr("disabled");
                        OpenDialog("dialogMessage", "Please select Bill Number.", "false");
                    }
                }
                else {
                    $("#SavePurchaseReturnForm").removeAttr("disabled");
                    OpenDialog("dialogMessage", "Please select the reason for return.", "false");
                }
            }
            else {
                $("#SavePurchaseReturnForm").removeAttr("disabled");
                OpenDialog("dialogMessage", "Please enter refernce number.", "false");
            }
            return false;
        });

        $("#AddRecordInGrid").click(function (e) {
            $("#ErrorMsg").empty();

            var i = 0;
            for (i = 0; i < ProductGrid.length; i++) {
                if (ProductGrid[i].ProductCode == CurrentlySelectedProduct.ProductCode) {
                    Flag = false;
                    break;
                }
            }

            var TaxAmount = (parseFloat(CurrentlySelectedProduct.TaxAmount)).toFixed(2);
            ProductGrid[i].TaxAmount = TaxAmount;
            var DiscAmt = (parseFloat(CurrentlySelectedProduct.DiscAmt)).toFixed(2);
            ProductGrid[i].DiscAmt = DiscAmt;
            var TotalAmount = (parseFloat(CurrentlySelectedProduct.TotalAmount)).toFixed(2);
            ProductGrid[i].TotalAmount = TotalAmount;
            var Amount = (parseFloat(CurrentlySelectedProduct.Amount)).toFixed(2);
            ProductGrid[i].Amount = Amount;
            var CommissionAmt = (parseFloat(CurrentlySelectedProduct.CommissionAmt)).toFixed(2);
            ProductGrid[i].CommissionAmt = CommissionAmt;
            var RPValue = (parseFloat(CurrentlySelectedProduct.RPValue)).toFixed(2);
            ProductGrid[i].RPValue = RPValue;
            var CVValue = (parseFloat(CurrentlySelectedProduct.CVValue)).toFixed(2);
            ProductGrid[i].CVValue = CVValue;
            var PVValue = (parseFloat(CurrentlySelectedProduct.PVValue)).toFixed(2);
            ProductGrid[i].PVValue = PVValue;
            var BVValue = (parseFloat(CurrentlySelectedProduct.BVValue)).toFixed(2);
            ProductGrid[i].BVValue = BVValue;
            ProductGrid[i].ReturnQty = CurrentlySelectedProduct.ReturnQty;

            IsEditGrid = false;
            FillGrid();
            CalculateTotals();
            IsAnyProductReturn = true;
            $("#EditReturndialog").dialog("close");

        });

    });


    function CalculateTotals() {

        if (ProductGrid != null) {

            var TotalBV = 0;
            var TotalCV = 0;
            var TotalPV = 0;
            var TotalQty = 0;
            var TotalRP = 0;
            var TotalDiscountPer = 0;
            var TotalCommsonAmt = 0;
            var TotalSumNetAmount = 0;
            var TotalTaxtAmt = 0;
            var TotalDisc = 0;
            var TotalSumAmount = 0;
            var TotalTaxPer = 0;
            var CashAmount = 0;
            var i = 0;
            for (i = 0; i < ProductGrid.length; i++) {

                TotalBV += parseFloat(ProductGrid[i].BVValue);
                TotalCV += parseFloat(ProductGrid[i].CVValue);
                TotalPV += parseFloat(ProductGrid[i].PVValue);
                TotalDiscountPer += parseFloat(ProductGrid[i].DiscPer);
                TotalCommsonAmt += parseFloat(ProductGrid[i].CommsnAmt);
                TotalQty += parseFloat(ProductGrid[i].Qty);
                TotalRP += parseFloat(ProductGrid[i].RPValue);
                TotalTaxPer += parseFloat(ProductGrid[i].GST);
                TotalSumAmount += parseFloat(ProductGrid[i].Amount);
                TotalDisc += parseFloat(ProductGrid[i].DiscAmt);
                TotalTaxtAmt += parseFloat(ProductGrid[i].TaxAmount);
                TotalSumNetAmount += parseFloat(ProductGrid[i].TotalAmount);

            }

            var roundingOffThePayment = (parseFloat(TotalSumNetAmount)).toFixed(2);
            RoundOff = roundingOffThePayment - parseFloat(TotalSumNetAmount);
            NetAmounPayable = (parseFloat(TotalSumNetAmount) + RoundOff);

            //display in textboxes
            $("#TotalBV").val(TotalBV);
            $("#TotalRP").val(TotalRP);

            $('#rndOff').val(RoundOff.toFixed(2));
            $('#tAmt').val(TotalSumAmount.toFixed(2));
            $('#taxAmt').val(TotalTaxtAmt.toFixed(2));
            $('#netPay').val(TotalSumNetAmount.toFixed(2));

        }
    }

    function SaveReturn(formdata) {

        $.ajax({
            url: '@Url.Action("SavePurchaseReturnOrder", "Transaction")',
            type: 'POST',
            data: formdata,
            dataType: "json",
            success: function (objResponse) {
                if (objResponse != null) {
                    if (objResponse.ResponseStatus == "OK") {
                        window.location.href = '@Url.Action("PurchaseReturn", "Transaction")';
                    }
                    else {
                        $("#SavePurchaseReturnForm").removeAttr("disabled");
                        OpenDialog("dialogMessage", objResponse.ResponseMessage, "false");
                    }
                }
            },
            error: function (xhr, data) {
                $("#SavePurchaseReturnForm").removeAttr("disabled");
                console.log(xhr);
                console.log("Error:", data);
            }
        });
    }

    function validateFormValues(e) {
        e.preventDefault();
        e.stopPropagation();
        if (ProductGrid.length > 0 && ProductGrid != null) {
            var ListObjStr = JSON.stringify(ProductGrid);

            $("#objProductListStr").val(ListObjStr);
            var formdata = $("#PurchaseReturnForm").serialize();

            if (IsAnyProductReturn) {
                SaveReturn(formdata);
            }
            else {
                $("#SavePurchaseReturnForm").removeAttr("disabled");
                OpenDialog("dialogMessage", "There should be atleast one product to be Returned", "false");
            }
        }
        else {
            $("#SavePurchaseReturnForm").removeAttr("disabled");
            OpenDialog("dialogMessage", "No Product in Grid.", "false");
        }
    }

    function clearValues() {
        $('#BillNo').html("<option value=''>--Purchase Invoice No--</option>");
        $('#rndOff').val("");
        $('#tAmt').val("");
        $('#taxAmt').val("");
        $('#netPay').val("");
        
        $('#BillDate').val("");
        $('#returnby').val("");
        ProductGrid = [];
        FillGrid();
    }

    function fillProductValues(objResult) {

        $("#ProductName").val(objResult.ProductName);
        $("#BarcodeList").val(objResult.BarCode);
        $("#StockAvailable").val(objResult.StockAvailable);
        $("#DP").val(objResult.DP);
        $("#DiscPer").val(objResult.DiscPer);
        $("#DiscAmt").val("0");
        $("#TaxPer").val(objResult.GST);
        $("#TaxAmt").val("0");
        $("#Amount").val("0");
        $("#TotalAmount").val("0");
        $("#ReturnQuantity").val("0");
        $("#OrderedQty").val(objResult.OrderedQty);
        $("#RemainingQty").val(objResult.OrderedQty);
        openEditPopup();
    }

    function ClearProductValues() {

        $("#DiscAmt").val("0");
        $("#TaxAmt").val("0");
        $("#Amount").val("0");
        $("#TotalAmount").val("0");
        $("#ReturnQuantity").val("0");

        $("#EditReturndialog").dialog("close");
    }


    function DoCalculation(returnQty) {
        var ProductArray = CurrentlySelectedProduct;
        if (ProductArray != null && ProductArray != undefined) {
            var Quantity = parseFloat(returnQty);
            var dpValue = 0;
            var CommissionLessDp = 0;
            var AvailStock = 0;
            var IsCommissionAdd = 0;
            var IsDiscountAdd = 0;


            dpValue = parseFloat(ProductArray.DP).toFixed(2);

            ProductArray.Rate = dpValue;
            ProductArray.Amount = dpValue * Quantity;

            ProductArray.TaxAmount = ProductArray.Amount * ProductArray.GST / 100;

            var temp = (ProductArray.TaxAmount.toFixed(2)).toString();
            var lastNum = parseInt(temp[temp.length - 1]);

            var supplierstate = $("#returnto option:selected").attr("data-statecode");
            if (supplierstate == '@CurrentStateCode') {
                if ((parseInt(lastNum) % 2) != 0) {  // && both parties are from same state
                    ProductArray.Amount = parseFloat(ProductArray.Amount) + 0.01;
                    ProductArray.TaxAmount = parseFloat(ProductArray.TaxAmount) - 0.01;
                }
            }

            var DiscPer = parseFloat(ProductArray.DiscPer);


            if (DiscAmt == 0 && DiscPer != 0) {
                var Discount = dpValue * DiscPer / 100;
                ProductArray.DiscAmt = Discount * Quantity;
            }

            ProductArray.TotalAmount = ProductArray.Amount + ProductArray.TaxAmount - ProductArray.DiscAmt;

            ProductArray.RPValue = ProductArray.RP * Quantity;
            ProductArray.CVValue = ProductArray.CV * Quantity;
            ProductArray.BVValue = ProductArray.BV * Quantity;
            ProductArray.PVValue = ProductArray.PV * Quantity;

            $("#DiscAmt").val(parseFloat(ProductArray.DiscAmt).toFixed(2));
            $("#TaxAmt").val(parseFloat(ProductArray.TaxAmount).toFixed(2));
            $("#Amount").val(parseFloat(ProductArray.Amount).toFixed(2));
            $("#TotalAmount").val(parseFloat(ProductArray.TotalAmount).toFixed(2));

        }
        CurrentlySelectedProduct = ProductArray;
    }



    function openEditPopup() {
        $("#ErrorMsg").empty();

        $("#EditReturndialog").dialog({
            modal: true,
        });

        $(".ui-dialog-titlebar-close").empty();
        $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');

        $("#EditReturndialog").dialog("open");
        $("#ReturnQuantity").focus();
    }

    function OpenDialog(dialogId, Message, isConfirmation) {
        $("#" + dialogId).empty();
        if (Message != "" || Message != null) {

            $("#" + dialogId).append('<p>' + Message + '</p>');
        }
        if (isConfirmation == "true") {
            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "Yes",
                    id: "btnYes" + dialogId,
                    click: function () {
                        IsYes = true;
                        $("#" + dialogId).dialog("close");
                    }
                },
                {
                    text: "No",
                    id: "btnNo" + dialogId,
                    click: function () {
                        IsYes = false;
                        $("#" + dialogId).dialog("close");
                    }
                }
                ]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }
        else {
            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "OK",
                    id: "btn" + dialogId,
                    click: function () {
                        $("#" + dialogId).dialog("close");
                    }
                }]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }
    }

    function GetListOfSuppliers() {
        $('#returnto').html("<option value=''>--Supplier--</option>");
        $.ajax({
            url: '@Url.Action("GetAllSupplier", "Transaction")',
            type: 'GET',
            dataType: "json",
            success: function (objResult) {
                $(objResult).each(function () {

                    var option = new Option(this.PartyName, this.PartyCode);
                    option.setAttribute("data-groupid", this.GroupId);
                    option.setAttribute("data-statecode", this.StateCode);
                    $('#returnto').append(option);

                });
            },
            error: function (xhr, data) {
                //  return false;
                console.log(xhr);
                console.log("Error:", data);
            }
        });
    }

    function GetListOfPartyBills(supplier) {
        $('#BillNo').html("<option value=''>--Purchase Invoice No--</option>");
        $.ajax({
            url: '@Url.Action("GetListOfSupplierBills", "Transaction")',
            type: 'GET',
            data: { supplier },
            dataType: "json",
            success: function (objResult) {
                $(objResult).each(function () {
                    var option = new Option(this.BillNo, this.BillNo);
                    $('#BillNo').append(option);
                });
            },
            error: function (xhr, data) {
                //  return false;
                console.log(xhr);
                console.log("Error:", data);
            }
        });
    }

    function GetBillDetails(BillNo) {
        ProductGrid = [];
        $.ajax({
            url: '@Url.Action("GetPurchaseDetail", "Transaction")',
            type: 'GET',
            data: { BillNo },
            dataType: "json",
            success: function (objResult) {

                var nowDate = new Date(parseInt(objResult.BillDate.substr(6)));
                $('#BillDate').val(nowDate.format("dd/mm/yyyy"));
                $('#returntoName').val(objResult.SoldByName);
                $('#returnby').val(objResult.partyCode);
                $('#returnbyName').val(objResult.partyName);

                $(objResult.ProductList).each(function () {
                    ProductGrid.push({ "PVValue": this.PVValue, "CVValue": this.CVValue, "CommissionAmt": this.CommissionAmt, "CommissionPer": this.CommissionPer, "CV": this.CV, "PV": this.PV, "ProdStateCode": this.ProdStateCode, "DiscAmt": this.DiscAmt, "DiscPer": this.DiscPer, "DP": this.DP, "BarCode": this.Barcode, "ProductName": this.ProductName, "BatchNo": this.BatchNo, "ProductCode": this.ProductCodeStr, "MRP": this.MRP, "Rate": this.Rate, "ReturnQty": this.ReturnQty, "GST": this.GSTPer, "Amount": 0, "TaxAmount": 0, "TotalAmount": 0, "BV": this.BV, "BVValue": 0, "RP": this.RP, "RPValue": 0, "OrderedQty": this.Quantity });
                });

                FillGrid();
            },
            error: function (xhr, data) {
                //  return false;
                console.log(xhr);
                console.log("Error:", data);
            }
        });
    }

    function FillGrid() {

        if (uppergrid != null) {
            uppergrid.destroy();
            $('#grid').empty();

        }

        uppergrid = $('#grid').grid({
            dataSource: ProductGrid,
            uiLibrary: 'bootstrap',
            headerFilter: true,
            columns: [
                    { field: 'BarCode', width: 80, title: 'BarCode', sortable: false, hidden: false, filterable: false },
                    { field: 'ProductName', width: 100, title: 'Product Name', sortable: false, hidden: false, filterable: false },
                    { field: 'BatchNo', width: 100, title: 'Batch No.', sortable: false, hidden: false, filterable: false },
                    { field: 'ProductCode', width: 80, title: 'Product Code', sortable: false, hidden: false, filterable: false },
                    { field: 'MRP', width: 80, title: 'MRP', sortable: false, hidden: false, filterable: false },
                    { field: 'Rate', width: 80, title: 'Rate', sortable: false, hidden: false, filterable: false },
                    { field: 'ReturnQty', width: 80, title: 'Return Qty', sortable: false, hidden: false, filterable: false },
                    { field: 'OrderedQty', width: 80, title: 'OrderedQty', sortable: false, hidden: true, filterable: false },
                    { field: 'GST', width: 80, title: 'GST(%)', sortable: false, hidden: false, filterable: false },
                    { field: 'Amount', width: 80, title: 'Amount', sortable: false, hidden: false, filterable: false },
                    { field: 'TaxAmount', width: 80, title: 'Tax Amount', sortable: false, hidden: false, filterable: false },
                    { field: 'TotalAmount', width: 80, title: 'Total Amount', sortable: false, hidden: false, filterable: false },
            ],
            pager: { limit: 20, sizes: [15, 20, 35, 50, 65, 80, 95, 100] }
        });
        uppergrid.on('rowSelect', function (e, $row, id, record) {
            CurrentlySelectedProduct = record;
            IsAnyProductReturn = false;
            fillProductValues(record);
        });
    }
</script>

<div class="row">
    <div class="page-title">
        <div class="title_left">
            <h3>Transaction</h3>
        </div>
        <div class="title_right">
            <div class="col-md-5 col-sm-5 col-xs-12 form-group pull-right top_search">

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="row">
        <div class="col-lg-12 ">
            <div class="x_panel">
                <div class="x_title">
                    <h2>Purchase Return</h2>
                    <ul class="nav navbar-right panel_toolbox">
                        <li>
                            <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                        </li>
                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <br />
                    <form id="PurchaseReturnForm" method="post" name="PurchaseReturnForm" onsubmit="false" data-parsley-validate class="validateForm form-horizontal form-label-left">

                        <div class="row RowMargin">
                            <div class="col-lg-4">
                                <label class="control-label col-lg-4" for="category-name">
                                    G.R.No.
                                </label>
                                <div class="col-lg-8">
                                    @Html.Hidden("objProductListStr", "", new { id = "objProductListStr" })
                                    @Html.TextBox("grno", ViewBag.returnNo as string, new { name = "grno", tabindex = "0", id = "grno", @maxlength = "50", @class = "form-control", @readonly = "readonly" })
                                </div>

                            </div>
                            <div class="col-lg-4">
                                <label class="control-label col-lg-4" for="category-name">
                                    Ref.No.<span class="required">*</span>
                                </label>
                                <div class="col-lg-8">
                                    @Html.TextBox("refno", "", new { name = "refno", tabindex = "1", id = "refno", @maxlength = "50", @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-lg-4">
                                &nbsp;
                            </div>

                        </div>

                        <div class="row RowMargin">
                            <div class="col-lg-4">
                                <label class="control-label col-lg-4" for="category-name">
                                    Reason<span class="required">*</span>
                                </label>
                                <div class="col-lg-8">
                                    <select class="form-control" id="reason" tabindex="2" name="reason">
                                        <option value=""> --Reason-- </option>
                                        <option value="G">General</option>
                                        <option value="D"> Damage </option>
                                        <option value="B">Breakage</option>
                                        <option value="E"> Expired </option>
                                    </select>
                                </div>

                            </div>
                            <div class="col-lg-4">
                                <label class="control-label col-lg-4" for="category-name">
                                    Supplier<span class="required">*</span>
                                </label>
                                <div class="col-lg-8">
                                    <select class="form-control" tabindex="4" name="returnto" id="returnto">
                                        <option value=""> --Supplier--</option>
                                    </select>
                                    <input type="hidden" id="returntoName" name="returntoName" />
                                    <input type="hidden" id="returnbyName" name="returnbyName" />
                                </div>
                            </div>

                            <div class="col-lg-4">
                                &nbsp;
                            </div>

                        </div>





                        <div class="row RowMargin">
                            <div class="col-lg-4">
                                <label class="control-label col-lg-4" for="category-name">
                                    Purchase Invoice No.<span class="required">*</span>
                                </label>
                                <div class="col-lg-8">
                                    <select class="form-control" tabindex="8" name="BillNo" id="BillNo">
                                        <option value=""> --Purchase Invoice No--</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <label class="control-label col-lg-4" for="category-name">
                                    Bill Date
                                </label>
                                <div class="col-lg-8">
                                    @Html.TextBox("BillDate", "", new { name = "BillDate", tabindex = "9", @readonly = "readonly", id = "BillDate", @maxlength = "50", @class = "form-control" })
                                </div>
                            </div>

                            <div class="col-lg-4">
                                <label class="control-label col-lg-4" for="category-name">
                                    Return By
                                </label>
                                <div class="col-lg-8">
                                    @Html.TextBox("returnby", "", new { name = "returnby", tabindex = "6", id = "returnby", @maxlength = "50", @readonly = "readonly", @class = "form-control" })
                                </div>
                            </div>


                        </div>

                        <div class="row RowMargin">
                            <div class="col-lg-8">
                                <label class="control-label col-lg-2" for="category-name">
                                    Remark
                                </label>
                                <div class="col-lg-10">
                                    @Html.TextBox("remark", "", new { name = "remark", tabindex = "10", id = "remark", @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-lg-4">
                                &nbsp;
                            </div>

                        </div>




                        <div class="ln_solid"></div>

                        @*grid section*@
                        <div class="row RowMargin">
                            <div class="col-lg-12">
                                <table class="table bootstrap-datatable" id="grid"></table>
                                <center><span style="display:none" id="noRecord">No Records Found</span></center>

                            </div>
                        </div>

                        <div class="ln_solid"></div>

                        <div class="row RowMargin">
                            <div class="col-lg-4">
                                <label class="control-label col-lg-4" for="category-name">
                                    Total Amt
                                </label>
                                <div class="col-lg-8">
                                    @Html.Hidden("TotalBV", "0", new { id = "TotalBV" })
                                    @Html.Hidden("TotalRP", "0", new { id = "TotalRP" })
                                    @Html.TextBox("tAmt", "", new { name = "tAmt", tabindex = "9", @readonly = "readonly", id = "tAmt", @maxlength = "50", @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <label class="control-label col-lg-4" for="category-name">
                                    Tax Amt
                                </label>
                                <div class="col-lg-8">
                                    @Html.TextBox("taxAmt", "", new { name = "taxAmt", tabindex = "9", @readonly = "readonly", id = "taxAmt", @maxlength = "50", @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="row RowMargin">
                            <div class="col-lg-4">
                                <label class="control-label col-lg-4" for="category-name">
                                    Rnd Off
                                </label>
                                <div class="col-lg-8">
                                    @Html.TextBox("rndOff", "", new { name = "rndOff", tabindex = "6", id = "rndOff", @maxlength = "50", @readonly = "readonly", @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <label class="control-label col-lg-4" for="category-name">
                                    Net Payable
                                </label>
                                <div class="col-lg-8">
                                    @Html.TextBox("netPay", "", new { name = "netPay", tabindex = "6", id = "netPay", @maxlength = "50", @readonly = "readonly", @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row RowMargin">
                            <div class="col-lg-6 col-md-offset-3">
@if (ViewBag.UserCanAccess == "Edit")
{
                                <button type="submit" id="SavePurchaseReturnForm" class="btn btn-success" tabindex="0">Save</button>
                                <button class="btn btn-primary" type="button" tabindex="0" id="cancelClick">Cancel</button>
}
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="dialogMessage" title="Message">

</div>

<div id="EditReturndialog" title="Add Return Quantity" style="display: none;">
    <div class="row RowMargin">

        <div class="col-lg-12" style="margin-bottom: 2%;margin-top: 2%;">
            <label class="control-label"><u>Product Details:</u></label>
        </div>

        <div class="ln_solid" style="margin-top:49px"></div>

        <div class="col-lg-12">
            <div class="col-lg-6">
                <label class="control-label col-lg-2" for="category-name" style="padding-left: 0px;">
                    Product
                </label>
                <div class="col-lg-8" style="padding-left:0px">
                    <input type="hidden" value="P" id="SearchText" name="SearchText" />
                    @Html.TextBox("ProductName", "", new { tabindex = "0", name = "ProductName", @readonly = "readonly", id = "ProductName", @class = "form-control col-lg-7", @style = "width:100%" })
                    <select tabindex="0" name="ProductNameList" id="ProductNameList" style="display:none;width:89%" class="form-control col-lg-7">
                        <option value="0">--Select product</option>
                    </select>
                    @*@Html.DropDownListFor(m => m.objProduct.ProductName,new SelectListItem { Text="--Select Product--", Value="0", Selected=true} as IEnumerable<SelectListItem>, new { tabindex = "4", name = "ProductNameList", id = "ProductNameList",@style="display:none", @class = "form-control col-md-7 col-xs-12" })*@
                </div>

            </div>

            <div class="col-lg-6">
                <label class="control-label col-lg-2" for="category-name">
                    Barcode
                </label>
                <div class="col-lg-8" style="padding-right:0px">
                    @Html.TextBox("BarcodeList", "", new { tabindex = "0", name = "BarcodeList", @readonly = "readonly", id = "BarcodeList", @class = "form-control col-lg-7", @style = "width:100%" })
                </div>
            </div>
        </div>
    </div>

    <div class="row RowMargin">
        <div class="col-lg-6">
            <label class="control-label col-lg-2" for="category-name">
                RetQty
            </label>
            <div class="col-lg-4">
                @Html.TextBox("ReturnQuantity", "", new { name = "ReturnQuantity", maxlength = "10", tabindex = "0", id = "ReturnQuantity", @style = "width:50%", @class = "form-control col-lg-6 onlyDecimalValues" })
                @Html.TextBox("OrderedQty", "", new { name = "OrderedQty", id = "OrderedQty", @class = "form-control col-lg-6 onlyDecimalValues", @readonly = "readonly", @style = "width:50%" })

            </div>
            <label class="control-label col-lg-2" for="category-name">
                RemQty
            </label>
            <div class="col-lg-2">
                @Html.TextBox("RemainingQty", "", new { name = "RemainingQty", id = "RemainingQty", @class = "form-control col-lg-6 onlyDecimalValues", @readonly = "readonly" })
            </div>
        </div>



        <div class="col-lg-6">
            <label class="control-label col-lg-2" for="category-name">
                DP
            </label>
            <div class="col-lg-8 col-sm-8">
                @Html.TextBox("DP", "", new { name = "DP", id = "DP", @class = "form-control", @readonly = "readonly" })
            </div>
        </div>
    </div>



    <div class="row RowMargin">
        <div class="col-lg-6">
            <label class="control-label col-lg-2" for="category-name">
                Disc.
            </label>
            <div class="col-lg-8">

                @Html.TextBox("DiscPer", "", new { name = "DiscPer", id = "DiscPer", @readonly = "readonly", @style = "width:50%", @class = "form-control col-lg-6" })
                @Html.TextBox("DiscAmt", "", new { name = "DiscAmt", id = "DiscAmt", @style = "width:50%", @class = "form-control col-lg-6", @readonly = "readonly" })
            </div>

        </div>
        <div class="col-lg-6">
            <label class="control-label col-lg-2" for="category-name">
                Amount
            </label>
            <div class="col-lg-8">

                @Html.TextBox("Amount", "", new { name = "Amount", id = "Amount", @class = "form-control", @readonly = "readonly" })
            </div>

        </div>

    </div>


    <div class="row RowMargin">
        <div class="col-lg-6">
            <label class="control-label col-lg-2" for="category-name">
                Tax
            </label>
            <div class="col-lg-8">

                @Html.TextBox("TaxPer", "", new { name = "TaxPer", @style = "width:50%", id = "TaxPer", @class = "form-control col-lg-6", @readonly = "readonly" })
                @Html.TextBox("TaxAmt", "", new { name = "TaxAmt", @style = "width:50%", id = "TaxAmt", @class = "form-control col-lg-6", @readonly = "readonly" })
            </div>

        </div>

        <div class="col-lg-6">
            <label class="control-label col-lg-2" for="category-name">
                Total Amount
            </label>
            <div class="col-lg-8">

                @Html.TextBox("TotalAmount", "", new { name = "TotalAmount", id = "TotalAmount", @class = "form-control", @readonly = "readonly" })
            </div>

        </div>
    </div>
    <div class="row RowMargin">
        <div class="col-lg-12">
            <center>
                <span id="ErrorMsg" style="color:red">

                </span>
            </center>
        </div>

    </div>
    <br />
    <div class="row RowMargin">
        <div class="col-lg-6 col-lg-offset-3">
            <button type="button" id="AddRecordInGrid" class="btn btn-success" tabindex="0">Add</button>
            <button class="btn btn-primary" type="button" id="clearAndClose" tabindex="0">Clear</button>
        </div>
    </div>
    <br /><br />
</div>