@model InventoryManagement.Entity.Common.StockReportModel
@using InventoryManagement.Common
@using InventoryManagement.Entity.Common
@{
    ViewBag.Title = "StockReceiptReport";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool IsSoldByHo= (Session["LoginUser"] as User).IsSoldByHo;
    string CurrentPartyCode = (Session["LoginUser"] as User).PartyCode;
    string CurrentPartyName = (Session["LoginUser"] as User).PartyName;
    string BVCaption = Session["BVCaption"].ToString();
}

<style>
    .ui-widget-header {
        margin-top: -1% !important;
        width: 102% !important;
        margin-left: -1% !important;
    }
     .gj-grid-wrapper {
        min-width: 100% !important;
        overflow-x: scroll !important;
    }
    .ui-dialog-titlebar-close {
        margin-right: 1% !important;
    }

    .ui-widget-content {
        background: white !important;
        border-radius: 15px !important;
        -webkit-border-radius: 4px !important;
    }
    /*.ui-widget-header .ui-icon {
        background-color: black!important;
    }*/
    ui-autocomplete-input {
        z-index: 100;
    }

    .input-readonly {
        background-color: #EBEBE4;
    }
</style>
<script type="text/javascript">
    var grid, dialog;
    var StockGrid = [{}];
    var IsBatch = false;
    var tableStockGrid;
    var StockType = "CurrentStock";
    var IsCategory = false;
    var IsProduct = false;
    var IsParty = false;
    var IsDate = false;
    var IsState = false;
    var ProductList = [];
    var FullProductList;
    var PartyList = [];
    var FullPartyList;
    var CategoryList = [];
    var FullCategoryList;
    var IsSummary = true;
    var PreviouslySelectedFromDate = "";
    var PreviouslySelectedToDate = "";
    var PreviouslySelectedToPickerDate = "";
    var PreviouslySelectedFromPickerDate = "";
    var FromDate = "", ToDate = "";
    var BVCaption = "";
    $(document).ready(function () {
        BVCaption = '@BVCaption';
        //GetAllCategory();
        $(".preloader").hide();
        if ($("#GroupId").val() != 0) {
            $("#PartyName").prop("readonly", "readonly");
            $('#IsParty').attr('disabled', 'disabled');
        }
        else {
            $("#PartyName").prop("readonly", "");
            $('#IsParty').prop("readonly", "");
            $("#PartyName").val('All');
            $('#IsParty').removeAttr('disabled');
        }
       // FullProductList = ProductListJson;
        var IsAdministrator = '@IsSoldByHo';
        console.log("IsAdministrator", IsAdministrator);
        if (IsAdministrator=="True") {
            GetAllParty();
        }
        else{
            @*$("#PartyName").val('@CurrentPartyName');
            $("#PartyName").prop("readonly", "readonly");*@
            console.log("in else party",'@CurrentPartyCode');
            $("#PartyCode").val('@CurrentPartyCode');
        }
        GetAllProducts(0);
        setTimeout(function () {
            $('#IsProduct').trigger('ifChecked');
            var CheckBoxEle = $("#IsProductDiv").find('.icheckbox_flat-green');
            $(CheckBoxEle).addClass("checked");
        }, 2);

        //$("#StartDate").prop("readonly", "readonly");
        //$("#EndDate").prop("readonly", "readonly");
        //$("#StateList").attr("readonly", "readonly");
        $("#hiddenStateCode").val(0);
        $("#CategoryCode").val(0);
        $("#ProductCode").val(0);
        //$("#PartyCode").val(0);
        //GetAllProducts(0);
        //$("#PartyName").val('@CurrentPartyName');
        //$("#PartyName").prop("readonly", "");
        @*$("#PartyCode").val('@CurrentPartyCode');*@


        $("#ProductName").autocomplete({
            source: function (request, response) {
                var results = $.ui.autocomplete.filter(ProductList, request.term);

                response(results.slice(0, 50));
                //response(results);
                //$('html').getNiceScroll().resize();
                //$('#sidebar').getNiceScroll().resize();
                //$('.scroll-panel').getNiceScroll().resize();
                //response(ItemList);
            },
            minLength: 1,
            scroll: true,
            select: function (event, ui) {
                //$("#txDestination").val(ui.item.label);
                //cityID = ui.item.id;
                console.log("ui.item", ui.item.label);
                $("#ProductName").val(ui.item.label);
                SetSpecificCode("Product",ui.item.label);
                return false;
            },

        }).focus(function () {
            $(this).autocomplete("search", "");
        });

        $("#Category").change(function(){
            var SelectedVal = $("#Category").val();
            $("#CategoryCode").val(SelectedVal);
            GetAllProducts(SelectedVal);
        });
        $("#StateList").change(function () {
            var SelectedVal = $("#StateList").val();
            $("#hiddenStateCode").val(SelectedVal);
            if(SelectedVal=="All"){
                $('#IsProduct').trigger('ifChecked');
                var CheckBoxEle = $("#IsProductDiv").find('.icheckbox_flat-green');
                $(CheckBoxEle).addClass("checked");
            }
        });

        $("#PartyName").autocomplete({
            source: function (request, response) {
                var results = $.ui.autocomplete.filter(PartyList, request.term);

                response(results.slice(0, 50));
                //response(results);
                //$('html').getNiceScroll().resize();
                //$('#sidebar').getNiceScroll().resize();
                //$('.scroll-panel').getNiceScroll().resize();
                //response(ItemList);
            },
            minLength: 1,
            scroll: true,
            select: function (event, ui) {
                //$("#txDestination").val(ui.item.label);
                //cityID = ui.item.id;
                console.log("ui.item", ui.item.label);
                $("#PartyName").val(ui.item.label);
                SetSpecificCode("Party",ui.item.label);
                return false;
            },

        }).focus(function () {
            $(this).autocomplete("search", "");
        });




        $('#IsProduct').on('ifChecked', function () {
            //console.log("checked");

            IsProduct = true;
            $("#ProductName").val("All");
            $("#ProductName").prop("readonly", "readonly");
            $("#ProductCode").val(0);
            //GetAllProducts(0);

        });

        $('#IsState').on('ifChecked', function () {
            //console.log("checked");

            IsState = true;
            var SelectedValOfState = $("#StateList").val();
            console.log("SelectedValOfState", SelectedValOfState);
            if (SelectedValOfState == null) {
                SelectedValOfState = "";
            }
            $("#hiddenStateCode").val(SelectedValOfState);
            $("#StateList").attr("readonly","readonly");
            var dd = document.getElementById('StateList');
            for (var i = 0; i < dd.options.length; i++) {
                if (dd.options[i].value === "0") {
                    dd.options[i].text = "All";
                    break;
                }
            }

        });
        $('#IsDateFilter').on('ifChecked', function () {
            //console.log("checked");

            IsDate = true;
            $("#StartDate").val("All");
            $("#StartDate").prop("readonly", "readonly");
            FromDate = "";
            ToDate = "";
            $("#EndDate").val("All");
            $("#EndDate").prop("readonly", "readonly");
            //GetAllProducts(0);

        });

        $('#IsParty').on('ifChecked', function () {
            //console.log("checked");
            IsParty = true;
            $("#PartyName").val("All");
            $("#PartyName").prop("readonly", "readonly");
            $("#PartyCode").val(0);

        });

        $('#IsParty').on('ifUnchecked', function () {
            //console.log("checked");
            IsParty = false;
            $("#PartyName").val("");
            $("#PartyName").prop("readonly", "");
            $("#PartyCode").val("");

        });


        $('#IsProduct').on('ifUnchecked', function () {
            //console.log("checked");
            IsProduct = false;
            $("#ProductName").val("");
            $("#ProductName").prop("readonly", "");
            $("#ProductCode").val("");
        });
        $('#IsState').on('ifUnchecked', function () {
            //console.log("checked");

            IsState = false;

            $("#hiddenStateCode").val(0);
            $("#StateList").removeAttr("readonly");
            var dd = document.getElementById('StateList');
            for (var i = 0; i < dd.options.length; i++) {
                if (dd.options[i].value === "0") {
                    dd.options[i].text = "--No state Selected--";
                    break;
                }
            }
        });
        $('#IsDateFilter').on('ifUnchecked', function () {
            //console.log("checked");

            IsDate = false;
            $("#StartDate").val("");
            $("#StartDate").prop("readonly", "");
            $("#EndDate").val("");
            $("#EndDate").prop("readonly", "");
            FromDate = "";
            ToDate = "";
            //GetAllProducts(0);

        });

        $("#StartDate").datetimepicker({


            format: 'DD-MMM-YYYY'
            ,
            // todayHighlight:true,
            widgetPositioning: {
                horizontal: 'auto',
                vertical: 'bottom'
            }

        });
    $("#EndDate").datetimepicker({


        format: 'DD-MMM-YYYY'
        ,
        // todayHighlight:true,
        widgetPositioning: {
            horizontal: 'auto',
            vertical: 'bottom'
        }

    });

        $('#Summary').click(function () {
            IsSummary = true;
            $(".preloader").show();
            //StockType = "FinishStock";
           // $("#StockTypeLabel").val("Finish Stock");
            var CategoryCode = $("#CategoryCode").val();
            var ProductCode = $("#ProductCode").val();
            var StateCode = $("#hiddenStateCode").val();
            var PartyCode = $("#PartyCode").val();
           // var PartyCode = $("#PartyCode").val();
            if (CategoryCode == "" || CategoryCode == null) {
                CategoryCode = "0";
            }
            if (ProductCode == "" || ProductCode == null) {
                ProductCode = "0";
            }
            if (PartyCode == "" || PartyCode == null) {
                PartyCode = "0";
            }
            if (StateCode == "" || StateCode == null)
            {
                StateCode = "0";
            }
            GetStockDetails(CategoryCode, ProductCode, PartyCode,StateCode, IsSummary);
        });

        $('#Detail').click(function () {
            //$(".loader").show();
            $(".preloader").show();
            IsSummary = false;

            var CategoryCode = $("#CategoryCode").val();
            var ProductCode = $("#ProductCode").val();
            var StateCode = $("#hiddenStateCode").val();
            var PartyCode = $("#PartyCode").val();
            // var PartyCode = $("#PartyCode").val();
            if (CategoryCode == "" || CategoryCode == null) {
                CategoryCode = "0";
            }
            if (ProductCode == "" || ProductCode == null) {
                ProductCode = "0";
            }
            if (PartyCode == "" || PartyCode == null) {
                PartyCode = "0";
            }
            if (StateCode == "" || StateCode == null) {
                StateCode = "0";
            }
            GetStockDetails(CategoryCode, ProductCode, PartyCode, StateCode, IsSummary);


        });






        $("#btnExport").on('click', function () {
            //var tableToExcel = new TableToExcel();
            // tableToExcel.render("grid");
            var UserTypeStr = "StockRecieptReport";

            console.log("in export gridExport", StockGrid);
            var tableString = "<thead><tr>";

            if (IsSummary == false) {
                tableString += "<th>S.No.</th>";
                tableString += "<th>STR No.</th>";
                tableString += "<th>STR Date</th>";
                tableString += "<th>Code/ID No.</th>";
                tableString += "<th>Name</th>";
                tableString += "<th>Prod. Code</th>";
                tableString += "<th>Product Name</th>";
                tableString += "<th>Qty</th>";
                tableString += "<th>"+ BVCaption +"</th>";
                tableString += "<th>Rate</th>";
                tableString += "<th>Tax(%)</th>";
                tableString += "<th>Tax Amt.</th>";
                tableString += "<th>Basic Amt.</th>";
                tableString += "<th>Total Amt.</th>";
                tableString += "<th>STN No.</th>";
                tableString += "<th>Sold By</th>";
                tableString += "<th>State Name</th>";
                tableString += "</tr></thead><tbody>";
                for (var i = 0; i < StockGrid.length; i++) {
                    tableString += "<tr>";
                    tableString += "<td>" + StockGrid[i].SNo + "</td>";
                    tableString += "<td>" + StockGrid[i].StrNo + "</td>";
                    tableString += "<td>" + StockGrid[i].StrDate + "</td>";

                    tableString += "<td>" + StockGrid[i].PartyCode + "</td>";
                    tableString += "<td>" + StockGrid[i].PartyName + "</td>";

                    tableString += "<td class=formatText>" + StockGrid[i].ProductCode.toString() + "</td>";
                    tableString += "<td>" + StockGrid[i].ProductName + "</td>";
                    tableString += "<td>" + StockGrid[i].Qty + "</td>";
                    tableString += "<td>" + StockGrid[i].BVValue + "</td>";
                    tableString += "<td>" + StockGrid[i].RateOrDP + "</td>";
                    tableString += "<td>" + StockGrid[i].TaxPer + "</td>";

                    tableString += "<td>" + StockGrid[i].TaxAmt + "</td>";
                    tableString += "<td>" + StockGrid[i].BasicAmt + "</td>";
                    tableString += "<td>" + StockGrid[i].TotalAmt + "</td>";
                    tableString += "<td class=formatText>" + StockGrid[i].StnNo.toString() + "</td>";
                    tableString += "<td>" + StockGrid[i].SoldBy + "</td>";
                    tableString += "<td>" + StockGrid[i].StateName + "</td>";
                    tableString += "</tr>";
                }
            }
            else{
                tableString += "<th>S.No.</th>";
                tableString += "<th>Code/ID No.</th>";
                tableString += "<th>Prod. Code</th>";
                tableString += "<th>Product Name</th>";
                tableString += "<th>Qty</th>";
                tableString += "<th>" + BVCaption + "</th>";
                tableString += "<th>Rate</th>";


                tableString += "<th>Tax Amt.</th>";

                tableString += "<th>Basic Amt.</th>";
                tableString += "<th>Total Amt.</th>";
                tableString += "<th>Sold By</th>";
                tableString += "<th>State Name</th>";
                tableString += "</tr></thead><tbody>";
                for (var i = 0; i < StockGrid.length; i++) {
                    tableString += "<tr>";
                    tableString += "<td>"+StockGrid[i].SNo+"</td>";
                    tableString += "<td>"+StockGrid[i].PartyCode+"</td>";
                    tableString += "<td class=formatText>" + StockGrid[i].ProductCode + "</td>";
                    tableString += "<td>" + StockGrid[i].ProductName + "</td>";

                    tableString += "<td>" + StockGrid[i].Qty + "</td>";
                    tableString += "<td>" + StockGrid[i].BVValue + "</td>";
                    tableString += "<td>" + StockGrid[i].RateOrDP + "</td>";


                    tableString += "<td>" + StockGrid[i].TaxAmt + "</td>";
                    tableString += "<td>" + StockGrid[i].BasicAmt + "</td>";
                    tableString += "<td>" + StockGrid[i].TotalAmt + "</td>";
                    tableString += "<td>" + StockGrid[i].SoldBy + "</td>";
                    tableString += "<td>" + StockGrid[i].StateName + "</td>";
                    tableString += "</tr>";
                }

                }

                tableString += "</tbody>";
                $("#gridExport").empty();
                $("#gridExport").append(tableString);
                tableToExcel('gridExport', UserTypeStr + "_Export");

            });

 });

    function SetSpecificCode(type, label) {
        if (type == "Product") {
            for (var i = 0; i < FullProductList.length; i++) {
                if (FullProductList[i].ProductName == label) {
                    $("#ProductCode").val(parseFloat(FullProductList[i].ProductCodeStr));
                    break;
                }
            }
        }

        if (type == "Party") {
            for (var i = 0; i < FullPartyList.length; i++) {
                if (FullPartyList[i].PartyName == label) {
                    $("#PartyCode").val(FullPartyList[i].PartyCode);
                    break;
                }
            }
        }
    }

    function GetAllProducts(catId) {

        $.ajax({
            url: '/Report/GetAllProduct',
            dataType: "json",
            method: 'POST',
            async: false,
            data: { 'CategoryCode': catId },
            success: function (data) {
                console.log("data:", data);
                //response(data);
                FullProductList = data;
                ProductList = [];
                if (data != null) {
                    var i = 0;
                    for (i = 0; i < data.length; i++) {
                        //console.log("data[i]", data[i]);
                        ProductList.push(data[i].ProductName);
                    }
                }
            },
            error: function (xhr, status, error) {
                console.log("xhr.responseText:", xhr.responseText);
                //var responseText = jQuery.parseJSON(xhr.responseText);
                //console.log("responseText.ExceptionType:", responseText.ExceptionType);
                //console.log("responseText.Message:", responseText.Message);
            }
        });
    }


    function GetAllParty() {
        $.ajax({
            url: '/Report/GetAllParty',
            dataType: 'JSON',
            method: 'GET',
            //data: { 'LedgerName': '' },
            success: function (data) {
                console.log("data:", data);
                //response(data);
                FullPartyList = data;
                PartyList = [];
                if (data != null) {
                    var i = 0;
                    for (i = 0; i < data.length; i++) {
                        //console.log("data[i]", data[i]);
                        PartyList.push(data[i].PartyName);
                    }
                    if (data.length == 1) {
                        var LoginPartyCode='@CurrentPartyCode';
                        if (LoginPartyCode == data[0].PartyCode) {
                            $("#PartyName").val(data[0].PartyName);
                            $("#PartyCode").val(data[0].PartyCode)
                        }
                    }
                }
            },
            error: function (error) {
                console.log(error);
            }
        });
    }

    function toDate(dateStr) {
        var parts = dateStr.split("-");
        return new Date(parts[2], parts[1] - 1, parts[0]);
    }
    function OpenDialog(dialogId, Message, isConfirmation) {
        $("#" + dialogId).empty();
        $("#" + dialogId).append('<p>' + Message + '</p>');
        if (isConfirmation == "true") {
            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "Yes",
                    id: "btnYes" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}
                        IsYes = true;
                        $("#" + dialogId).dialog("close");


                    }
                },
                {
                    text: "No",
                    id: "btnNo" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}
                        IsYes = false;
                        $("#" + dialogId).dialog("close");
                    }
                }
                ]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }
        else {


            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "OK",
                    id: "btn" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}

                        $("#" + dialogId).dialog("close");


                    }
                }]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }

    }
    function fillGrid() {
        console.log("StockGrid", StockGrid);

               // StockGrid = StockGrid.splice(1);

        $("#noRecord").hide();
        //console.log("ProductGrid", ProductGrid);
        if (grid != null) {
            grid.destroy();
            $('#grid').empty();

        }
        console.log("IsSummary", IsSummary);
        if (IsSummary == false) {
            grid = $('#grid').grid({
                dataSource: StockGrid,
                uiLibrary: 'bootstrap',
                headerFilter: true,
                columns: [
                    { field: 'SNo', title: 'S.No.',width:80, sortable: true, hidden: false, filterable: false },
                     //{ field: 'StrNo', title: 'STR No.', width: 80, sortable: true, hidden: false, filterable: true },
                     { field: 'StnNo', title: 'STN No.', width: 100, sortable: true, hidden: false, filterable: true, tmpl: '<a target="_blank" style="text-decoration:underline;color:blue" href={InvoicePath}>{StnNo}</a>', align: 'center' },
                      { field: 'StrDate', title: 'STR Date', width: 100, sortable: true, hidden: false, filterable: true },
                       { field: 'PartyCode', title: 'Code/ID No.', width: 100, sortable: true, hidden: false, filterable: true },
                        { field: 'PartyName', title: 'Name', width: 120, sortable: true, hidden: false, filterable: true },
                         { field: 'ProductCode', title: 'Prod. Code', width: 100, sortable: true, hidden: false, filterable: true },
                         { field: 'ProductName', title: 'Product Name', width: 150, sortable: true, hidden: false, filterable: true },
                         { field: 'Qty', title: 'Qty', sortable: true, width: 80, hidden: false, filterable: true },
                         { field: 'BVValue', title: BVCaption, sortable: true, width: 80, hidden: false, filterable: true },
                          { field: 'RateOrDP', title: 'Rate', sortable: true, width: 80, hidden: false, filterable: true },
                           { field: 'TaxPer', title: 'Tax(%)', sortable: true, width: 80, hidden: false, filterable: true },
                            { field: 'TaxAmt', title: 'Tax Amt.', sortable: true, width: 80, hidden: false, filterable: true },
                              { field: 'BasicAmt', title: 'Basic Amt.', sortable: true, width: 80, hidden: false, filterable: true },
                               { field: 'TotalAmt', title: 'Total Amt.', width: 80, sortable: true, hidden: false, filterable: true },                             
                               { field: 'SoldBy', title: 'Sold By', width:100, sortable: true, hidden: false, filterable: true },
                               { field: 'StateName', title: 'State Name', width: 120, sortable: true, hidden: false, filterable: true },
                ],
                pager: { limit: 20, sizes: [15, 20, 35, 50, 65, 80, 95, 100] }
            });

        }
        else {
            grid = $('#grid').grid({
                dataSource: StockGrid,
                uiLibrary: 'bootstrap',
                headerFilter: true,
                columns: [
                     { field: 'SNo',width:70, title: 'S.No.', sortable: true, hidden: false, filterable: false },
                       { field: 'PartyCode', width: 80, title: 'Code/ID No.', sortable: true, hidden: false, filterable: true },
                         { field: 'ProductCode', width: 100, title: 'Prod. Code', sortable: true, hidden: false, filterable: true },
                         { field: 'ProductName', width: 150, title: 'Product Name', sortable: true, hidden: false, filterable: true },
                         { field: 'Qty', title: 'Qty', width: 80, sortable: true, hidden: false, filterable: true },
                         { field: 'BVValue', title: BVCaption, width: 80, sortable: true, hidden: false, filterable: true },
                          { field: 'RateOrDP', title: 'Rate', width: 80, sortable: true, hidden: false, filterable: true },
                            { field: 'TaxAmt', title: 'Tax Amt.', width: 80, sortable: true, hidden: false, filterable: true },
                              { field: 'BasicAmt', title: 'Basic Amt.', width: 100, sortable: true, hidden: false, filterable: true },
                               { field: 'TotalAmt', title: 'Total Amt.', width: 80, sortable: true, hidden: false, filterable: true },
                               { field: 'SoldBy', title: 'Sold By', width: 80, sortable: true, hidden: false, filterable: true },
                               { field: 'StateName', title: 'State Name', width: 120, sortable: true, hidden: false, filterable: true },
                ],
                pager: { limit: 20, sizes: [15, 20, 35, 50, 65, 80, 95, 100] }
            });


        }
        $(".loader").hide();
    }

    function GetStockDetails(CategoryCode, ProductCode, PartyCode,StateCode,IsSummary) {
        
        var DateError = false;
        FromDate = $("#StartDate").val();
        ToDate = $("#EndDate").val();

            if (FromDate != "" && FromDate != null && ToDate != null && ToDate != "") {
              
                var d1 = toDate(FromDate);
                var d2 = toDate(ToDate);
               
                if (d1 > d2) {
                    DateError = true;
                    $(".preloader").hide();
                    OpenDialog("dialogMessage", "From Date should be less than ToDate!", "false");
                    //$("#StartDate").focus();
                }
                else {
                    DateError = false;
                    console.log("in else");

                }
            }
            else {
                DateError = false;
               

                if (FromDate == "" || FromDate == null) {
                    FromDate = "All";

                } if (ToDate == "" || ToDate == null) {
                    ToDate = "All";

                }
            }


            if (CategoryCode == "" || CategoryCode == null || ProductCode == "" || ProductCode == null || PartyCode == "" || PartyCode == null || StateCode == "" || StateCode == null || FromDate == "" || FromDate == null || ToDate == "" || ToDate == null) {
                if (CategoryCode == "") {
                    CategoryCode = 0;
                    // OpenDialog("dialogMessage", "Please enter category!", "false");
                }
                if (ProductCode == "") {
                    ProductCode = 0;
                    // OpenDialog("dialogMessage", "Please enter product!", "false");
                    //else
                    //    OpenDialog("dialogMessage", "Please enter party!", "false");
                }
                if (PartyCode == "") {
                    ParyCode = 0;
                    // OpenDialog("dialogMessage", "Please enter product!", "false");
                    //else
                    //    OpenDialog("dialogMessage", "Please enter party!", "false");
                }
                if (StateCode == "") {
                    StateCode = 0;
                    // OpenDialog("dialogMessage", "Please enter product!", "false");
                    //else
                    //    OpenDialog("dialogMessage", "Please enter party!", "false");
                }
                if (FromDate == "") {
                    FromDate = "All";

                }
                if (ToDate == "") {
                    ToDate = "All";
                }
            }
            else {

                if (DateError == false) {
                    //FromDate = toDate(FromDate);
                    //ToDate = toDate(ToDate);


                    if (FromDate != "All") {
                        PreviouslySelectedFromDate = FromDate;

                    }
                    if (ToDate != "All") {
                        PreviouslySelectedToDate = ToDate;

                    }
                }

                $.ajax({
                    url: '@Url.Action("GetStockReceiptReport", "Report")',
                    type: 'POST',
                    data: { "CategoryCode": CategoryCode, "ProductCode": ProductCode, "StateCode": StateCode, "PartyCode": PartyCode, "FromDate": FromDate, "ToDate": ToDate, "IsSummary": IsSummary},

                    dataType: "json",
                    success: function (objResult) {
                        StockGrid = [{}];
                        if (objResult.length > 0) {

                            StockGrid = StockGrid.splice(1);
                            var lblTotalBV=0;
                            var lblTotalAmt=0;
                            for (var i = 0; i < objResult.length; i++) {
                                var InvoicePath = '@Url.Action("InvoicePrint", "Transaction", new {Pm="-1"})';
                                var encodedparameters = objResult[i].StnNo;
                                //console.log("encodedparameters", encodedparameters);
                                //encodedparameters="uid=testuser&pwd=test123456&Id=84503&Name=tes&Email=abc@xyz.com&MobileNo=9829898298&Address=Bhl";
                                var EncryptedB64Url = window.btoa(encodedparameters);
                                console.log("EncryptedB64Url", EncryptedB64Url);
                                InvoicePath = InvoicePath.replace("-1", EncryptedB64Url);
                                lblTotalBV = (parseFloat(lblTotalBV) + parseFloat(objResult[i].BVValue)).toFixed(2);
                                lblTotalAmt = (parseFloat(lblTotalAmt) + parseFloat(objResult[i].TotalAmt)).toFixed(2);
                                StockGrid.push({ "InvoicePath": InvoicePath, "SNo": i + 1, "ProductCode": objResult[i].ProductCode, "ProductName": objResult[i].ProductName, "PartyCode": objResult[i].PartyCode, "PartyName": objResult[i].PartyName, "RateOrDP": objResult[i].RateOrDP, "Qty": objResult[i].Qty, "BVValue": objResult[i].BVValue, "TaxPer": objResult[i].TaxPer, "TaxAmt": objResult[i].TaxAmt, "BasicAmt": objResult[i].BasicAmt, "TotalAmt": objResult[i].TotalAmt, "SoldBy": objResult[i].SoldBy, "StateName": objResult[i].StateName, "StnNo": objResult[i].StnNo, "StrNo": objResult[i].StrNo, "StrDate": objResult[i].StrDate });
                            }
                            $("#lblTotalBV").text(lblTotalBV);
                            $("#lblTotalAmount").text(lblTotalAmt);
                            tableStockGrid = StockGrid;


                            $("#noRecord").hide();

                        }
                        else {

                            $("#noRecord").show();
                        }
                        fillGrid();
                        $(".preloader").hide();

                    },
                    error: function (xhr, data) {
                        //  return false;
                        console.log(xhr);
                        console.log("Error:", data);
                    }
                });

            }
        }

   // }
</script>

<div class="row">
    <div class="page-title">
        <div class="title_left">
            <h3>Report</h3>
        </div>
        <div class="title_right">
            <div class="col-md-5 col-sm-5 col-xs-12 form-group pull-right top_search">

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>Stock Receipt Report</h2>
                    <ul class="nav navbar-right panel_toolbox">
                        <li>
                            <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                        </li>

                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <br />
                    <form id="distributorForm" method="post" name="distributorForm" onsubmit="false" data-parsley-validate class="validateForm form-horizontal form-label-left">
                        @Html.HiddenFor(m => m.PartyCode, new { id = "PartyCode", name = "PartyCode" })
                        @Html.HiddenFor(m => m.CategoryCode, new { id = "CategoryCode", name = "CategoryCode" })
                        @Html.HiddenFor(m => m.ProductCode, new { id = "ProductCode", name = "ProductCode" })
                        @Html.HiddenFor(m => m.StateCode, new { id = "hiddenStateCode" })
                        @Html.HiddenFor(m => m.GroupId, new { id = "GroupId", name = "GroupId" })
                        <div class="col-lg-12">
                            <div class="col-lg-8">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="control-label col-lg-6 col-md-3 col-sm-3 col-xs-12" for="category-name" style="padding-left: 0px;">
                                            From Date @*<span class="required">*</span>*@
                                        </label>
                                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12" style="padding-right: 0px;">

                                            @Html.TextBoxFor(m => m.StartDate, new { name = "StartDate", id = "StartDate", tabindex = "1", @class = "form-control col-md-7 col-xs-12" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="control-label col-lg-4 col-md-3 col-sm-3 col-xs-12" for="category-name">
                                            To Date @*<span class="required">*</span>*@
                                        </label>
                                        <div class="col-lg-8 col-md-6 col-sm-6 col-xs-12" style="padding-right: 0px;">

                                            @Html.TextBoxFor(m => m.EndDate, new { name = "EndDate", id = "EndDate", tabindex = "2", @class = "form-control col-md-7 col-xs-12" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    <div id="IsDateDiv">
                                        <label>
                                            <input type="checkbox" id="IsDateFilter" name="IsDateFilter" class="flat" tabindex="3" />


                                        </label>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="col-lg-8">
                                <div class="form-group">
                                    <label class="control-label col-lg-3 col-md-3 col-sm-3 col-xs-12" for="category-name">
                                        Enter Party
                                    </label>
                                    <div class="col-lg-9 col-md-6 col-sm-6 col-xs-12">

                                        @Html.TextBoxFor(m => m.PartyName, new { name = "PartyName", id = "PartyName", tabindex = "5", @class = "form-control col-md-7 col-xs-12" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    <div id="IsPartyDiv">
                                        <label>
                                            <input type="checkbox" id="IsParty" name="IsParty" class="flat" tabindex="6" />


                                        </label>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="col-lg-8">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="control-label col-lg-6 col-md-3 col-sm-3 col-xs-12" for="category-name" style="padding-left: 0px;">
                                            Category @*<span class="required">*</span>*@
                                        </label>
                                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12" style="padding-right: 0px;">
                                            <select name = "Category" id = "Category" tabindex = "1" class = "form-control col-md-7 col-xs-12">
                                                <option value="All">All</option>
                                                @foreach(var obj in Model.CategoryList){
                                                    <option value="@obj.CategoryId">@obj.CategoryName</option>
                                                }
                                            </select>
                                            @*@Html.TextBoxFor(m => m.Category, new { name = "Category", id = "Category", tabindex = "1", @class = "form-control col-md-7 col-xs-12" })*@
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="control-label col-lg-4 col-md-3 col-sm-3 col-xs-12" for="category-name">
                                            Product @*<span class="required">*</span>*@
                                        </label>
                                        <div class="col-lg-8 col-md-6 col-sm-6 col-xs-12" style="padding-right: 0px;">

                                            @Html.TextBoxFor(m => m.ProductName, new { name = "ProductName", id = "ProductName", tabindex = "3", @class = "form-control col-md-7 col-xs-12" })
                                        </div>
                                    </div>
                                </div>
                                
                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    <div id="IsProductDiv">
                                        <label>
                                            <input type="checkbox" id="IsProduct" name="IsProduct" class="flat" tabindex="2" />


                                        </label>

                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        
                        <div class="col-lg-12">
                            <div class="col-lg-8">
                                <div class="form-group">
                                    @*<label class="control-label col-lg-3 col-md-3 col-sm-3 col-xs-12" for="category-name">
                                        Select State 
                                    </label>
                                     <div class="col-lg-5 col-md-6 col-sm-6 col-xs-12">
                                       
                                         <select id="StateList" name="StateList" class="form-control">
                                            
                                             @foreach(var obj in Model.StateList)
                                             {
                                                 <option value="@obj.Value">@obj.Text</option>
                                             }
                                         </select>
                                           
                                        </div>*@
                                    @*<div class="col-lg-1">
                                        <div class="form-group">
                                            <div id="IsStateDiv">
                                                <label>
                                                    <input type="checkbox" id="IsState" name="IsState" class="flat" tabindex="2" />


                                                </label>

                                            </div>
                                        </div>
                                    </div>*@
                                    <div id="IsBatchDiv" style="margin-top: 1%;">
                                        &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                                        <a style="cursor:pointer;color:blue;text-decoration:underline" id="Summary">Summary</a>
                                        <span><b>|</b></span>
                                        <a style="cursor:pointer;color:blue;text-decoration:underline" id="Detail">Detail</a>
                                    </div>


                                </div>
                            </div>
                            <div class="col-lg-4" id="btnExport">
                                <img src="~/images/ExcelImage.jpg" style="height: 25px;width: 8%;cursor:pointer" />
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <br />
                            <div>
                                <b><span id="StockTypeLabel"></span></b>
                            </div>
                            <br />
                            <div style="float:right;margin-right:1%">
                                Total @BVCaption: <label id="lblTotalBV"></label> &nbsp;&nbsp;&nbsp;&nbsp;
                                Total Amount: <label id="lblTotalAmount"></label>

                            </div>
                            <div class="form-group">
                                <br />@*<br /><br /><center><div class="loader" style="display:none"></div></center>*@
                           
                                <table class="table bootstrap-datatable" id="grid"></table>
                                <center><span style="display:none" id="noRecord">No Stock Found</span></center>

                            </div>
                        </div>


                        <table id="gridExport" style="display:none"></table>
                    </form>
                </div>

            </div>
        </div>
    </div>
    <div id="dialogMessage" title="Message">

    </div>

</div>


