@model InventoryManagement.Entity.Common.ImportBill
@using InventoryManagement.Common
@using InventoryManagement.Entity.Common
@{
    ViewBag.Title = "Import Bills";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool IsSoldByHo = (Session["LoginUser"] as User).IsSoldByHo;
    string CurrentPartyCode = (Session["LoginUser"] as User).PartyCode;
    string CurrentPartyName = (Session["LoginUser"] as User).PartyName;
    string BVCaption = Session["BVCaption"].ToString();
}

<style>
    .ui-widget-header {
        margin-top: -1% !important;
        width: 102% !important;
        margin-left: -1% !important;
    }

    .gj-grid-wrapper {
        min-width: 100% !important;
        overflow-x: scroll !important;
    }

    .ui-dialog-titlebar-close {
        margin-right: 1% !important;
    }

    .ui-widget-content {
        background: white !important;
        border-radius: 15px !important;
        -webkit-border-radius: 4px !important;
    }
    /*.ui-widget-header .ui-icon {
        background-color: black!important;
    }*/
    ui-autocomplete-input {
        z-index: 100;
    }

    .input-readonly {
        background-color: #EBEBE4;
    }
</style>
<script type="text/javascript">
    var grid, dialog;
    var IsYes = false;
    var DateWiseGrid = [{}];

    var SalesType = "DateWise";

    var IsDateFilter = false;
    var FromDate = "", ToDate = "";
    var PreviouslySelectedFromDate = "";
    var PreviouslySelectedToDate = "";
    var PreviouslySelectedFromPickerDate = "";
    var PreviouslySelectedToPickerDate = "";
    var IsParty = false;
    var PartyList = [];
    var FullPartyList;
    $(document).ready(function () {
        $(".preloader").hide();
        $('#IsDateFilter').on('ifChecked', function () {
            //console.log("checked");
            IsDateFilter = true;
            $("#StartDate").val("All");
            $("#StartDate").prop("readonly", "readonly");
            $("#EndDate").val("All");
            $("#EndDate").prop("readonly", "readonly");
            FromDate = "";
            ToDate = "";
            //GetSalesDetails($("#StartDate").val(), $("#EndDate").val(), '@CurrentPartyCode', "S");

        });
        $('#IsDateFilter').on('ifUnchecked', function () {
            //console.log("checked");
            IsDateFilter = false;
            $("#StartDate").val("");
            $("#StartDate").prop("readonly", "");
            $("#EndDate").val("");
            $("#EndDate").prop("readonly", "");
            FromDate = "";
            ToDate = "";

        });

        $("#StartDate").datetimepicker({
            format: 'DD-MMM-YYYY',           
            widgetPositioning: {
                horizontal: 'auto',
                vertical: 'bottom'
            }
        });

        $("#EndDate").datetimepicker({
            format: 'DD-MMM-YYYY',           
            widgetPositioning: {
                horizontal: 'auto',
                vertical: 'bottom'
            }
        });

        $("#btnExport").on('click', function () {
            var UserTypeStr = "Sales";
            $(".preloader").show();
            var PartyCode = $("#PartyCode").val();
            var DateError = false;
            FromDate = $("#StartDate").val();
            ToDate = $("#EndDate").val();

            if (FromDate != "" && FromDate != null && ToDate != "") {                
                var d1 = toDate(FromDate);
                var d2 = toDate(ToDate);                
                if (d1 > d2) {
                    DateError = true;
                    $(".preloader").hide();
                    OpenDialog("dialogMessage", "From Date should be less than To Date!", "false");
                    //$("#StartDate").focus();
                }
                else {
                    DateError = false;
                }
            }
            else {
                DateError = false;
                if (IsDateFilter == false) {
                }
                // $(".preloader").show();
                if (FromDate == "" || FromDate == null) {
                    FromDate = "All";
                    // OpenDialog("dialogMessage", "Please enter from date!", "false");
                }
                if (ToDate == "" || ToDate == null) {
                    ToDate = "All";
                    //OpenDialog("dialogMessage", "Please enter to date!", "false");
                }
            }
            if (DateError == false) {
                $.ajax({
                    url: '@Url.Action("GetImportBills", "Report")',
                    type: 'POST',
                    data: { "FromDate": FromDate, "ToDate": ToDate },
                    dataType: "json",
                    success: function (objResult) {
                        DateWiseGrid = [{}];
                        if (objResult.length > 0) {
                            DateWiseGrid = DateWiseGrid.splice(1);
                            for (var i = 0; i < objResult.length; i++) {
                                DateWiseGrid.push({ "BillID": objResult[i].BillID, "UserBillNo": objResult[i].UserBillNo, "VchType": objResult[i].VchType, "VchRefNo": objResult[i].VchRefNo, "Date": objResult[i].Date, "Code": objResult[i].Code, "PartyName": objResult[i].PartyName, "Addres1": objResult[i].Addres1, "Addres2": objResult[i].Addres2, "StateNme": objResult[i].StateNme, "Pincode": objResult[i].Pincode, "TINNO": objResult[i].TINNO, "Address1": objResult[i].Address1, "Address2": objResult[i].Address2, "StateName": objResult[i].StateName, "Country": objResult[i].Country, "ProductName": objResult[i].ProductName, "ItemCode": objResult[i].ItemCode, "GoDownName": objResult[i].GoDownName, "Unit": objResult[i].Unit, "Qty": objResult[i].Qty, "Rate": objResult[i].Rate, "TINNO": objResult[i].TINNO, "NetAmount": objResult[i].NetAmount, "TaxParent": objResult[i].TaxParent, "TaxType": objResult[i].TaxType, "Tax": objResult[i].Tax, "TaxRate": objResult[i].TaxRate, "RoundOff": objResult[i].RoundOff, "OtherCharges": objResult[i].OtherCharges, "BatchNo": objResult[i].BatchNo, "BatchWiseQty": objResult[i].BatchWiseQty, "BatchWiseRate": objResult[i].BatchWiseRate, "B1": objResult[i].B1, "B2": objResult[i].B2, "B3": objResult[i].B3, "IMPORTED": objResult[i].IMPORTED, "HSNCODE": objResult[i].HSNCODE, "ITEMMASTERIGST": objResult[i].ITEMMASTERIGST, "narration": objResult[i].narration, "IGST": objResult[i].IGST, "ItemDescription": objResult[i].ItemDescription, "VoucherNumber": objResult[i].VoucherNumber, "IsManualVoucherNo": objResult[i].IsManualVoucherNo, "SalesType": objResult[i].SalesType, "MultipleLedger": objResult[i].MultipleLedger, "SalesLedger": objResult[i].SalesLedger, "OpeningStock": objResult[i].OpeningStock, "OpeningRate": objResult[i].OpeningRate, "OpeningValue": objResult[i].OpeningValue, "OpeningUnit": objResult[i].OpeningUnit, "GstRegistrationType": "unregistered", "RegType": objResult[i].RegType, "RefType": objResult[i].RefType, "BillRefNo": objResult[i].BillRefNo, "BillRefAmount": objResult[i].BillRefAmount, "BuyerName": objResult[i].BuyerName, "Buyer_Address": objResult[i].Buyer_Address, "Buyer_Address1": objResult[i].Buyer_Address1, "Buyer_StateName": "", "Buyer_Country": "", "Supply_State": objResult[i].Supply_State, "Buyer_GstRegistrationType": "unregistered", "Buyer_GSTINNO": "", "HSNDESC": "", "PARTNO": "", "PARTNO": "", "ItemDiscountSlab": "", "OriginalInvoiceDate": "" });
                            }
                            console.log("in export gridExport", DateWiseGrid);
                            var tableString = "<thead><tr>";
                            tableString += "<th>VchNo</th>";
                            tableString += "<th>VchType</th>";
                            tableString += "<th>VchRefNo</th>";
                            tableString += "<th>Date</th>";
                            tableString += "<th>Code</th>";
                            tableString += "<th>Name</th>";
                            tableString += "<th>F1</th>";
                            tableString += "<th>F2</th>";
                            tableString += "<th>F3</th>";
                            tableString += "<th>PinCode</th>";
                            tableString += "<th>TinNo</th>";
                            tableString += "<th>Address1</th>";
                            tableString += "<th>Address2</th>";
                            tableString += "<th>StateName</th>";
                            tableString += "<th>Country</th>";
                            tableString += "<th>ItemName</th>";
                            tableString += "<th>ItemDescription</th>";
                            tableString += "<th>GodownName</th>";
                            tableString += "<th>Unit</th>";
                            tableString += "<th>Qty</th>";
                            tableString += "<th>Rate</th>";
                            tableString += "<th>GSTNNO</th>";
                            tableString += "<th>Amt</th>";
                            tableString += "<th>TaxParent</th>";
                            tableString += "<th>TaxType</th>";
                            tableString += "<th>TaxRate</th>";
                            tableString += "<th>TAX</th>";
                            tableString += "<th>RoundOff</th>";
                            tableString += "<th>OtherCharges</th>";
                            tableString += "<th>BatchNo</th>";
                            tableString += "<th>BatchWiseQty</th>";
                            tableString += "<th>BatchWiseRate</th>";
                            tableString += "<th>B1</th>";
                            tableString += "<th>B2</th>";
                            tableString += "<th>B3</th>";
                            tableString += "<th>IMPORTED</th>";
                            tableString += "<th>HSNCODE</th>";
                            tableString += "<th>ITEMMASTERIGST</th>";
                            tableString += "<th>narration</th>";
                            tableString += "<th>IGST</th>";
                            tableString += "<th>ItemDescription</th>";
                            tableString += "<th>VoucherNumber</th>";
                            tableString += "<th>IsManualVoucherNo</th>";
                            tableString += "<th>SalesType</th>";
                            tableString += "<th>MultipleLedger</th>";
                            tableString += "<th>SalesLedger</th>";
                            tableString += "<th>OpeningStock</th>";
                            tableString += "<th>OpeningRate</th>";
                            tableString += "<th>OpeningValue</th>";
                            tableString += "<th>OpeningUnit</th>";
                            tableString += "<th>GstRegistrationType</th>";
                            tableString += "<th>BillRefType</th>";
                            tableString += "<th>BillRefNo</th>";
                            tableString += "<th>BillRefAmount</th>";
                            tableString += "<th>BuyerName</th>";
                            tableString += "<th>Buyer_Address</th>";
                            tableString += "<th>Buyer_Address1</th>";
                            tableString += "<th>Buyer_StateName</th>";
                            tableString += "<th>Buyer_Country</th>";
                            tableString += "<th>Supply_State</th>";
                            tableString += "<th>Buyer_GstRegistrationType</th>";
                            tableString += "<th>Buyer_GSTINNO</th>";
                            tableString += "<th>HSNDESC</th>";
                            tableString += "<th>PARTNO</th>";
                            tableString += "<th>ItemDiscountSlab</th>";
                            tableString += "<th>OriginalInvoiceDate</th>";
                            tableString += "</tr></thead><tbody>";
                            for (var i = 0; i < DateWiseGrid.length; i++) {
                                tableString += "<tr>";
                                tableString += "<td>" + DateWiseGrid[i].BillID + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].VchType + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].VchRefNo + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Date + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Code + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].PartyName + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Addres1 + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Addres2 + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].StateNme + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Pincode + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].TINNO + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Address1 + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Address2 + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].StateName + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Country + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].ProductName + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].ItemCode + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].GoDownName + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Unit + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Qty + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Rate + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].TINNO + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].NetAmount + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].TaxParent + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].TaxType + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].TaxRate + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Tax + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].RoundOff + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].OtherCharges + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].BatchNo + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].BatchWiseQty + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].BatchWiseRate + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].B1 + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].B2 + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].B3 + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].IMPORTED + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].HSNCODE + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].ITEMMASTERIGST + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].narration + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].IGST + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].ItemDescription + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].VoucherNumber + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].IsManualVoucherNo + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].SalesType + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].MultipleLedger + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].SalesLedger + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].OpeningStock + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].OpeningRate + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].OpeningValue + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].OpeningUnit + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].GstRegistrationType + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].RefType + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].BillRefNo + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].BillRefAmount + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].BuyerName + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Buyer_Address + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Buyer_Address1 + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Buyer_StateName + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Buyer_Country + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Supply_State + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Buyer_GstRegistrationType + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].Buyer_GSTINNO + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].HSNDESC + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].PARTNO + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].ItemDiscountSlab + "</td>";
                                tableString += "<td>" + DateWiseGrid[i].OriginalInvoiceDate + "</td>";
                                tableString += "</tr>";
                            }
                            tableString += "</tbody>";
                            $("#gridExport").empty();
                            $("#gridExport").append(tableString);
                            tableToExcel('gridExport', UserTypeStr);
                        }
                        //FromDate = $("#StartDate").val();
                        //ToDate = $("#EndDate").val();
                        $(".preloader").hide();
                    },
                    error: function (xhr, data) {
                        //  return false;
                        console.log(xhr);
                        console.log("Error:", data);
                    }
                });
            }
            
        });

        $("#btnShowReport").on('click', function () {
            $(".preloader").show();
            var PartyCode = $("#PartyCode").val();
            var DateError = false;
            FromDate = $("#StartDate").val();
            ToDate = $("#EndDate").val();

            if (FromDate != "" && FromDate != null && ToDate != "") {                
                var d1 = toDate(FromDate);
                var d2 = toDate(ToDate);              
                if (d1 > d2) {
                    DateError = true;
                    $(".preloader").hide();
                    OpenDialog("dialogMessage", "From Date should be less than To Date!", "false");                    
                }
                else {
                    DateError = false;
                }
            }
            else {
                DateError = false;
                if (IsDateFilter == false) {
                   
                }
                // $(".preloader").show();
                if (FromDate == "" || FromDate == null) {
                    FromDate = "All";
                    // OpenDialog("dialogMessage", "Please enter from date!", "false");
                }
                if (ToDate == "" || ToDate == null) {
                    ToDate = "All";
                    //OpenDialog("dialogMessage", "Please enter to date!", "false");
                }
            }

            if (DateError == false) {
               
                var InvoiceTypeVal = "";
                $.ajax({
                    url: '@Url.Action("GetImportBills", "Report")',
                    type: 'POST',
                    data: { "FromDate": FromDate, "ToDate": ToDate },
                    dataType: "json",
                    success: function (objResult) {
                        DateWiseGrid = [{}];
                        if (objResult.length > 0) {
                            DateWiseGrid = DateWiseGrid.splice(1);
                            for (var i = 0; i < objResult.length; i++) {
                                DateWiseGrid.push({ "BillID": objResult[i].BillID, "UserBillNo": objResult[i].UserBillNo, "VchType": objResult[i].VchType, "VchRefNo": objResult[i].VchRefNo, "Date": objResult[i].Date, "Code": objResult[i].Code, "PartyName": objResult[i].PartyName, "Addres1": objResult[i].Addres1, "Addres2": objResult[i].Addres2, "StateNme": objResult[i].StateNme, "Pincode": objResult[i].Pincode, "TINNO": objResult[i].TINNO, "Address1": objResult[i].Address1, "Address2": objResult[i].Address2, "StateName": objResult[i].StateName, "Country": objResult[i].Country, "ProductName": objResult[i].ProductName, "ItemCode": objResult[i].ItemCode, "GoDownName": objResult[i].GoDownName, "Unit": objResult[i].Unit, "Qty": objResult[i].Qty, "Rate": objResult[i].Rate, "TINNO": objResult[i].TINNO, "NetAmount": objResult[i].NetAmount, "TaxParent": objResult[i].TaxParent, "TaxType": objResult[i].TaxType, "TaxRate": objResult[i].TaxRate, "Tax": objResult[i].Tax, "RoundOff": objResult[i].RoundOff, "OtherCharges": objResult[i].OtherCharges, "BatchNo": objResult[i].BatchNo, "BatchWiseQty": objResult[i].BatchWiseQty, "BatchWiseRate": objResult[i].BatchWiseRate, "B1": objResult[i].B1, "B2": objResult[i].B2, "B3": objResult[i].B3, "IMPORTED": objResult[i].IMPORTED, "HSNCODE": objResult[i].HSNCODE, "ITEMMASTERIGST": objResult[i].ITEMMASTERIGST, "narration": objResult[i].narration, "IGST": objResult[i].IGST, "ItemDescription": objResult[i].ItemDescription, "VoucherNumber": objResult[i].VoucherNumber, "IsManualVoucherNo": objResult[i].IsManualVoucherNo, "SalesType": objResult[i].SalesType, "MultipleLedger": objResult[i].MultipleLedger, "SalesLedger": objResult[i].SalesLedger, "OpeningStock": objResult[i].OpeningStock, "OpeningRate": objResult[i].OpeningRate, "OpeningValue": objResult[i].OpeningValue, "OpeningUnit": objResult[i].OpeningUnit, "RegType": objResult[i].RegType, "RefType": objResult[i].RefType, "BillRefNo": objResult[i].BillRefNo, "BillRefAmount": objResult[i].BillRefAmount, "BuyerName": objResult[i].BuyerName, "Buyer_Address": objResult[i].Buyer_Address, "Buyer_Address1": objResult[i].Buyer_Address1, "Buyer_StateName": objResult[i].Buyer_StateName, "Buyer_Country": objResult[i].Buyer_Country });
                            }
                        }
                        //FromDate = $("#StartDate").val();
                        //ToDate = $("#EndDate").val();
                        $(".preloader").hide();
                    },
                    error: function (xhr, data) {
                        //  return false;
                        console.log(xhr);
                        console.log("Error:", data);
                    }
                });
            }
        });



    });

    function toDate(dateStr) {
        var parts = dateStr.split("-");
        return new Date(parts[2], parts[1] - 1, parts[0]);
    }
    function OpenDialog(dialogId, Message, isConfirmation) {
        $("#" + dialogId).empty();
        $("#" + dialogId).append('<p>' + Message + '</p>');
        if (isConfirmation == "true") {
            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "Yes",
                    id: "btnYes" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}
                        IsYes = true;
                        $("#" + dialogId).dialog("close");


                    }
                },
                {
                    text: "No",
                    id: "btnNo" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}
                        IsYes = false;
                        $("#" + dialogId).dialog("close");
                    }
                }
                ]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }
        else {


            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "OK",
                    id: "btn" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}

                        $("#" + dialogId).dialog("close");


                    }
                }]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }

    }

    function fillGrid() {
        console.log("DateWiseGrid", DateWiseGrid);

        // StockGrid = StockGrid.splice(1);

        $("#noRecord").hide();
        //console.log("ProductGrid", ProductGrid);
        if (grid != null) {
            grid.destroy();
            $('#grid').empty();

        }

        grid = $('#grid').grid({
            dataSource: DateWiseGrid,
            uiLibrary: 'bootstrap',
            headerFilter: true,
            columns: [
                { field: 'SNo', title: 'S.No.', width: 100, sortable: true, hidden: false, filterable: false },
                 { field: 'RecordDate', title: 'Date', width: 100, sortable: true, hidden: false, filterable: true },
                  { field: 'NoOfBills', title: 'No. Of Bills', width: 90, sortable: true, hidden: false, filterable: true },
                   { field: 'TotalQty', title: 'Total Qty.', width: 80, sortable: true, hidden: false, filterable: true },
                    { field: 'TotalBV', title: 'Total VRP', sortable: true, width: 100, hidden: false, filterable: true },
                    { field: 'TotalAmount', title: 'Total Amount', width: 100, sortable: true, hidden: false, filterable: true },
                    { field: 'TotalTaxAmount', title: 'Total Tax Amt.', width: 120, sortable: true, hidden: false, filterable: true },
                     { field: 'TotalBillAmt', title: 'Total Bill Amt.', width: 120, sortable: true, hidden: false, filterable: true },
                      { field: 'TotalPaidByWallet', title: 'Total Paid By Wallet', width: 130, sortable: true, hidden: false, filterable: true },


            ],
            pager: { limit: 20, sizes: [15, 20, 35, 50, 65, 80, 95, 100] }
        });


    }


</script>
<div class="row">
    <div class="page-title">
        <div class="title_left">
            <h3>Export Bills</h3>
        </div>
        <div class="title_right">
            <div class="col-md-5 col-sm-5 col-xs-12 form-group pull-right top_search">

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>Export Bills</h2>
                    <ul class="nav navbar-right panel_toolbox">
                        <li>
                            <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                        </li>
                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <br />
                    <form id="FranchiseeCommissionForm" method="post" name="FranchiseeCommissionForm" onsubmit="false" data-parsley-validate class="validateForm form-horizontal form-label-left">

                        <div class="col-lg-12">
                            <div class="col-lg-8">
                                <div class="col-lg-6">
                                    <div class="form-group">

                                        @*<div class="control-label col-lg-6 col-md-3 col-sm-3 col-xs-12" style="padding:0 0 0 0">
                                            @Html.DropDownList("DateWise", new SelectList(new List<SelectListItem> {
                                           new SelectListItem {Text="Bill Date",Value="0" },
                                           new SelectListItem { Text="Deleted Date", Value="1" }
                                       }, "Value", "Text"), new { @class = "form-control", @id = "DateWise" })

                                        </div>*@
                                        <label class="control-label col-lg-6 col-md-3 col-sm-3 col-xs-12" for="category-name">
                                            From Date @*<span class="required">*</span>*@
                                        </label>
                                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12" style="padding-left: 0.5%;">

                                            @Html.TextBoxFor(m => m.StartDate, new { name = "StartDate", id = "StartDate", tabindex = "1", @class = "form-control col-md-7 col-xs-12" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="control-label col-lg-6 col-md-3 col-sm-3 col-xs-12" for="category-name">
                                            To Date @*<span class="required">*</span>*@
                                        </label>
                                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12" style="padding-left: 0.5%;">

                                            @Html.TextBoxFor(m => m.EndDate, new { name = "EndDate", id = "EndDate", tabindex = "2", @class = "form-control col-md-7 col-xs-12" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    <div id="IsProductDiv">
                                        <label>
                                            <input type="checkbox" id="IsDateFilter" name="IsDateFilter" class="flat" tabindex="3" />


                                        </label>

                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                               @* <input type="button" id="btnShowReport" name="btnShowReport" value="Show Report" />*@
                                <img src="~/images/ExcelImage.jpg" id="btnExport" style="margin-right: 60%;height: 25px;cursor:pointer;float:right" />
                            </div>
                        </div>

                        <div class="form-group">
                            @* <div class="col-lg-12">
                                    <div class="col-lg-8">
                                        <label class="control-label col-lg-3 col-md-3 col-sm-3 col-xs-12" for="category-name" style="padding-left:0px;padding-right:0px">
                                          Select Offer
                                        </label>
                                        <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12" style="padding-left: 0;">
                                            @Html.DropDownListFor(m => m.OfferUID, ViewBag.Offers as IEnumerable<SelectListItem>, new { name = "Offers", id = "Offers", tabindex = "5", @class = "form-control col-md-7 col-xs-12" })
                                        </div>
                                    </div>
                                </div>*@
                            <br /><br /><center><div class="loader" style="display:none"></div></center>
                            <table class="table bootstrap-datatable" id="grid"></table>
                            <center><span style="display:none" id="noRecord">No Records Found</span></center>


                        </div>
                        @*<div class="col-lg-12">
                                <table class="table bootstrap-datatable" id="grid"></table>
                                <center><span style="display:none" id="noRecord">No Records Found</span></center>
                            </div>*@


                        <table id="gridExport" style="display:none"></table>

                    </form>
                </div>

            </div>
        </div>
    </div>
    <div id="dialogMessage" title="Message">

    </div>

</div>

