@model InventoryManagement.Entity.Common.TransferredProduct
@using InventoryManagement.Common
@using InventoryManagement.Entity.Common
@{
    ViewBag.Title = "ProductTransferById";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool IsSoldByHo = (Session["LoginUser"] as User).IsSoldByHo;
    string CurrentPartyCode = (Session["LoginUser"] as User).PartyCode;
    string CurrentPartyName = (Session["LoginUser"] as User).PartyName;

}
<style>
    .ui-widget-header {
        margin-top: -1% !important;
        width: 102% !important;
        margin-left: -1% !important;
    }
     .gj-grid-wrapper {
        min-width: 100% !important;
        overflow-x: scroll !important;
    }
    .ui-dialog-titlebar-close {
        margin-right: 1% !important;
    }

    .ui-widget-content {
        background: white !important;
        border-radius: 15px !important;
        -webkit-border-radius: 4px !important;
    }
    /*.ui-widget-header .ui-icon {
        background-color: black!important;
    }*/
    ui-autocomplete-input {
        z-index: 100;
    }

    .input-readonly {
        background-color: #EBEBE4;
    }
</style>
<script type="text/javascript">
    var grid, dialog;
    var IsYes = false;
    var ProductWiseGrid = [{}];
    var ProductList = [];
    var FullProductList;
    var CategoryList = [];
    var FullCategoryList;
    var SalesType = "ProductWise";
    var IsCategory = false;
    var IsProduct = false;
    var IsDateFilter = false;
    var FromDate="", ToDate="";
    var ProductCode = "0", CategoryCode = "0";
    var PreviouslySelectedFromDate = "";
    var PreviouslySelectedToDate = "";
    var PreviouslySelectedFromPickerDate = "";
    var PreviouslySelectedToPickerDate = "";
    var IsParty = false;
    var PartyList = [];
    var FullPartyList;
    $(document).ready(function () {
        var IsAdministrator='@IsSoldByHo';
        $(".preloader").hide();
         GetAllProducts();
        $("#ProductName").autocomplete({
            source: function (request, response) {
                var results = $.ui.autocomplete.filter(ProductList, request.term);

                response(results.slice(0, 50));
                //response(results);
                //$('html').getNiceScroll().resize();
                //$('#sidebar').getNiceScroll().resize();
                //$('.scroll-panel').getNiceScroll().resize();
                //response(ItemList);
            },
            minLength: 1,
            scroll: true,
            select: function (event, ui) {
                //$("#txDestination").val(ui.item.label);
                //cityID = ui.item.id;
                console.log("ui.item", ui.item.label);
                $("#ProductName").val(ui.item.label);
                SetSpecificCode("Product", ui.item.label);
               // var ProductCode = $("#ProductCode").val();
               // var CategoryCode = $("#CategoryCode").val();
               // GetSalesDetails($("#StartDate").val(), $("#EndDate").val(), ProductCode, CategoryCode, '@CurrentPartyCode', "S");
                return false;
            },

        }).focus(function () {
            $(this).autocomplete("search", "");
        });



        $('#IsProduct').on('ifChecked', function () {
            //console.log("checked");
            IsProduct = true;
            ProductCode = "";
            $("#ProductName").val("All");
            $("#ProductName").prop("readonly", "readonly");
            $("#ProductCode").val(0);

          //  var ProductCode = $("#ProductCode").val();
          //  var CategoryCode = $("#CategoryCode").val();
           // GetSalesDetails($("#StartDate").val(), $("#EndDate").val(), ProductCode, CategoryCode, '@CurrentPartyCode', "S");

            //GetAllProducts(0);

        });

        $('#IsProduct').on('ifUnchecked', function () {
            //console.log("checked");
            IsProduct = false;
            ProductCode = "";
            $("#ProductName").val("");
            $("#ProductName").prop("readonly", "");
            $("#ProductCode").val("");
        });


        $('#IsDateFilter').on('ifChecked', function () {
            //console.log("checked");
            IsDateFilter = true;
            FromDate = "";
            ToDate = "";
            $("#StartDate").val("All");
            $("#StartDate").prop("readonly", "readonly");
             $("#EndDate").val("All");
             $("#EndDate").prop("readonly", "readonly");
             //var ProductCode = $("#ProductCode").val();
            // var CategoryCode = $("#CategoryCode").val();
           // GetSalesDetails($("#StartDate").val(), $("#EndDate").val(), ProductCode, CategoryCode, '@CurrentPartyCode', "S");

        });
        $('#IsDateFilter').on('ifUnchecked', function () {
            //console.log("checked");
            FromDate = "";
            ToDate = "";
            IsDateFilter = false;
            $("#StartDate").val("");
            $("#StartDate").prop("readonly", "");
            $("#EndDate").val("");
            $("#EndDate").prop("readonly", "");
        });

        $("#StartDate").datetimepicker({
            format: 'DD-MMM-YYYY',
            extraFormats: ['D/M/YYYY'],

            // todayHighlight:true,
            widgetPositioning: {
                horizontal: 'auto',
                vertical: 'bottom'
            }

        }).on('dp.change', function (e) {
            // console.log(e.date);
            // fromDate = $('#FromDatePickerWidget').val();
            var selectedDate = e.date._d;
            console.log(selectedDate.getMonth() + 1);
            var lengthOfMonth = ((selectedDate.getMonth() + 1).toString()).length;
            console.log(lengthOfMonth);
            var twoDigitMonth = (lengthOfMonth > 1) ? (selectedDate.getMonth() + 1) : '0' + (selectedDate.getMonth() + 1);

            var lengthOfDate = ((selectedDate.getDate()).toString()).length;
            var twoDigitdate = (lengthOfDate > 1) ? (selectedDate.getDate()) : '0' + (selectedDate.getDate());

            var newFromDate = twoDigitdate + "-" + twoDigitMonth + "-" + selectedDate.getFullYear();

            FromDate = newFromDate;
            PreviouslySelectedFromPickerDate = newFromDate;
            ToDate = PreviouslySelectedToPickerDate;
            ////End Date
            //if (FromDate == null || FromDate == "") {
            //    FromDate = "All";
            //   // OpenDialog("dialogMessage", "Invalid From Date!", "false");
            //}
            //else{
            //var d1 = new Date(FromDate);
            //var d2 = new Date(ToDate);
            //if (d1 < d2) {
            //    if (d2 != undefined && d2 != null && d2 != "" && d2 != "All") {
            //       // OpenDialog("dialogMessage", "From Date is less than To Date!", "false");
            //    }
            //}
            //else {
            //    if (d1 == null || d1=="") {
            //       // CustomerId = $('#CustCode').val();
            //        Fromdate = "All";
            //    }
            //    if (d2 == null || d2=="") {
            //        ToDate = "All";
            //    }
            //}
            //    }
           // fillGrid();
        });
        $("#EndDate").datetimepicker({
            format: 'DD-MMM-YYYY',
            extraFormats: ['D/M/YYYY'],
            // todayHighlight:true,
            widgetPositioning: {
                horizontal: 'auto',
                vertical: 'bottom'
            }

        }).on('dp.change', function (e) {
            // console.log(e.date);
            // fromDate = $('#FromDatePickerWidget').val();
            var selectedDate = e.date._d;
            console.log(selectedDate.getMonth() + 1);
            var lengthOfMonth = ((selectedDate.getMonth() + 1).toString()).length;
            console.log(lengthOfMonth);
            var twoDigitMonth = (lengthOfMonth > 1) ? (selectedDate.getMonth() + 1) : '0' + (selectedDate.getMonth() + 1);

            var lengthOfDate = ((selectedDate.getDate()).toString()).length;
            var twoDigitdate = (lengthOfDate > 1) ? (selectedDate.getDate()) : '0' + (selectedDate.getDate());

            var newFromDate = twoDigitdate + "-" + twoDigitMonth + "-" + selectedDate.getFullYear();
            ToDate = newToDate;
            PreviouslySelectedToPickerDate = newToDate;
            FromDate = PreviouslySelectedFromPickerDate;
            //if (ToDate == null || ToDate == "") {
            //    ToDate = "All";
            //   // OpenDialog("dialogMessage", "Invalid To Date!", "false");
            //}
            //else {
            //    var d1 = new Date(FromDate);
            //    var d2 = new Date(ToDate);
            //    if (d1 < d2) {
            //        if (d2 != undefined && d2 != null && d2 != "" && d1!="All") {
            //            //OpenDialog("dialogMessage", "From Date is less than To Date!", "false");
            //        }
            //    }
            //    else {
            //        if (d1 == null || d1=="") {
            //       // CustomerId = $('#CustCode').val();
            //        Fromdate = "All";
            //    }
            //    if (d2 == null || d2=="") {
            //        ToDate = "All";
            //    }
            //    }
            //}
           // fillGrid();
        });

        $("#btnExport").on('click', function () {
            //var tableToExcel = new TableToExcel();
            // tableToExcel.render("grid");
            var UserTypeStr = "ProductWiseSalesReport";

            //$("#grid").table2excel({
            //    exclude: ".noExl",
            //    name: UserTypeStr + "_Export",
            //    filename: UserTypeStr + "_Export",
            //    fileext: ".xls",
            //});


            console.log("in export gridExport", ProductWiseGrid);
            var tableString = "<thead><tr>";
            tableString += "<th>S.No.</th>";
            tableString += "<th>Ref.No.</th>";
            tableString += "<th>Date</th>";
            tableString += "<th>Id No.</th>";
            tableString += "<th>Name</th>";
            tableString += "<th>Prod. Code</th>";
            tableString += "<th>Product Name</th>";
            tableString += "<th>Qty</th>";
            tableString += "<th>To Member Name</th>";
            tableString += "</tr></thead><tbody>";
            for (var i = 0; i < ProductWiseGrid.length; i++) {
                tableString += "<tr>";
                tableString += "<td>" + ProductWiseGrid[i].SNo + "</td>";
                tableString += "<td>" + ProductWiseGrid[i].RcptNo + "</td>";
                tableString += "<td>" + ProductWiseGrid[i].RcptDate + "</td>";
                tableString += "<td>" + ProductWiseGrid[i].IdNo + "</td>";
                tableString += "<td>" + ProductWiseGrid[i].MemName + "</td>";
                tableString += "<td class='formatText'>" + ProductWiseGrid[i].ProdId + "</td>";
                tableString += "<td>" + ProductWiseGrid[i].ProductName + "</td>";
                tableString += "<td>" + ProductWiseGrid[i].Qty + "</td>";
                tableString += "<td>" + ProductWiseGrid[i].ToMemberName + "</td>";
                tableString += "</tr>";
            }


            tableString += "</tbody>";
            $("#gridExport").empty();
            $("#gridExport").append(tableString);
            tableToExcel('gridExport', UserTypeStr + "_Export");
        });
        $("#btnShowReport").on('click', function () {
            debugger;
            FromDate = $("#StartDate").val();
            ToDate = $("#EndDate").val();
            $(".preloader").show();
            var PartyCode = $("#PartyCode").val();
            var DateError = false;
            if (FromDate != "" && FromDate != null && ToDate != null && ToDate != null) {
                //var d1 = new Date(FromDate);
                //var d2 = new Date(ToDate);
                var d1 = toDate(FromDate);
                var d2 = toDate(ToDate);
                console.log("d1", d1);
                console.log("d2", d2);
                //if (d1 > d2) {

                //    DateError = true;
                //    $(".preloader").hide();
                //    OpenDialog("dialogMessage", "From Date should be less than To Date!", "false");
                //    //$("#StartDate").focus();
                //}
                //else {
                //    DateError = false;

                //}
            }
            else {
                DateError = false;
                if (DateError == false) {
                    if (IsDateFilter == false)
                    {
                        FromDate = $("#StartDate").val();
                        ToDate = $("#EndDate").val();
                        //if (FromDate == "" || FromDate == null) {
                        //    FromDate = PreviouslySelectedFromDate;
                        //}
                        //if (ToDate == "" || ToDate == null) {
                        //    ToDate = PreviouslySelectedToDate;
                        //}
                    }
                }
                    if (FromDate == "" || FromDate == null) {
                        //OpenDialog("dialogMessage", "Please enter from date!", "false");
                        FromDate = "All";
                    }
                    console.log("ToDate", ToDate);
                    if (ToDate == "" || ToDate == null) {
                        console.log("ToDate in", ToDate);
                        ToDate = "All";
                        // OpenDialog("dialogMessage", "Please enter to date!", "false");
                    }

            }
            if (ProductCode == "" || ProductCode == null) {
                    ProductCode = 0;
                    // OpenDialog("dialogMessage", "Please enter Product!", "false");
                }
                 if (CategoryCode == "" || CategoryCode == null) {
                    CategoryCode = 0;
                    //  OpenDialog("dialogMessage", "Please enter Category!", "false");
                }
                 if (DateError == false) {

                     //if (FromDate != "All") {
                     //    PreviouslySelectedFromDate = FromDate;
                     //    var splitDate = FromDate.split("-");
                     //    FromDate = splitDate[2] + "-" + splitDate[1] + "-" + splitDate[0];
                     //}
                     //if (ToDate != "All") {
                     //    PreviouslySelectedToDate = ToDate;
                     //    var splitToDate = ToDate.split("-");
                     //    ToDate = splitToDate[2] + "-" + splitToDate[1] + "-" + splitToDate[0];

                     //}

                     console.log("FromDate", FromDate);
                     console.log("ToDate", ToDate);
                     var InvoiceTypeVal = "";
                     $.ajax({
                         url: '@Url.Action("TransProductReport", "Report")',
                         type: 'POST',
                         data: { "FromDate": FromDate, "ToDate": ToDate, "ProdCode": ProductCode},
                         async: false,
                         dataType: "json",
                         success: function (objResult) {
                             ProductWiseGrid = [{}];
                             if (objResult.length > 0) {
                                 ProductWiseGrid = ProductWiseGrid.splice(1);
                                 for (var i = 0; i < objResult.length; i++) {
                                     ProductWiseGrid.push({ "SNo": i + 1, "RcptNo": objResult[i].RcptNo, "RcptDate": objResult[i].RDateStr, "IdNo": objResult[i].IdNo, "MemName": objResult[i].MemName, "ProdId": objResult[i].ProdId, "ProductName": objResult[i].ProductName, "Qty": objResult[i].Qty, "ToMemberName": objResult[i].ToMemberName });
                                 }
                             }
                             fillGrid();
                             //FromDate = $("#StartDate").val();
                             //ToDate = $("#EndDate").val();
                             $(".preloader").hide();
                         },
                         error: function (xhr, data) {
                             //  return false;
                             console.log(xhr);
                             console.log("Error:", data);
                         }
                     });
                 }
        });

        if('@ViewBag.DirectView' != null && '@ViewBag.DirectView' != "")
        {
            $("#IsProduct").iCheck('check');

            var currDate = new Date();
            var selectedDate = currDate;
            var newFromDate = "";
            var newToDate = "";

            if ('@ViewBag.DirectView' == 'D') {
                newFromDate = selectedDate.getDate() + "-" + (selectedDate.getMonth() + 1) + "-" + selectedDate.getFullYear();
                newToDate = selectedDate.getDate() + "-" + (selectedDate.getMonth() + 1) + "-" + selectedDate.getFullYear();
            }
            else {
                newFromDate = "01" + "-" + (selectedDate.getMonth()+1) + "-" + selectedDate.getFullYear();
                newToDate = new Date(selectedDate.getFullYear(), (selectedDate.getMonth() + 1), 0).getDate() + "-" + (selectedDate.getMonth() + 1) + "-" + selectedDate.getFullYear();
            }

            $("#StartDate").val(newFromDate).change();
            $('#EndDate').val(newToDate).change();

            $("#btnShowReport").click();
        }

    });


    function toDate(dateStr) {
        var parts = dateStr.split("-");
        return new Date(parts[2], parts[1] - 1, parts[0]);
    }
    function OpenDialog(dialogId, Message, isConfirmation) {
        $("#" + dialogId).empty();
        $("#" + dialogId).append('<p>' + Message + '</p>');
        if (isConfirmation == "true") {
            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "Yes",
                    id: "btnYes" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}
                        IsYes = true;
                        $("#" + dialogId).dialog("close");


                    }
                },
                {
                    text: "No",
                    id: "btnNo" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}
                        IsYes = false;
                        $("#" + dialogId).dialog("close");
                    }
                }
                ]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }
        else {


            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "OK",
                    id: "btn" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}

                        $("#" + dialogId).dialog("close");


                    }
                }]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }

    }
    function GetAllProducts() {
        $.ajax({
            url: '/Report/GetTransferredProduct',
            dataType: "json",
            method: 'POST',
            async: false,
            success: function (data) {
                console.log("data:", data);
                //response(data);
                FullProductList = data;
                ProductList = [];
                if (data != null) {
                    var i = 0;
                    for (i = 0; i < data.length; i++) {
                        //console.log("data[i]", data[i]);
                        ProductList.push(data[i].ProductName);
                    }
                }
            },
            error: function (xhr, status, error) {
                console.log("xhr.responseText:", xhr.responseText);

            }
        });
    }

    function fillGrid() {
        console.log("ProductWiseGrid", ProductWiseGrid);

        //ProductWiseGrid = ProductWiseGrid.splice(1);

        $("#noRecord").hide();
        //console.log("ProductGrid", ProductGrid);
        if (grid != null) {
            grid.destroy();
            $('#grid').empty();

        }

            grid = $('#grid').grid({
                dataSource: ProductWiseGrid,
                uiLibrary: 'bootstrap',
                headerFilter: true,
                columns: [
                    { field: 'SNo', title: 'S.No.',width:80, sortable: true, hidden: false, filterable: false },
                    { field: 'RcptNo', title: 'Ref. No', width: 100, sortable: true, hidden: false, filterable: true },
                    { field: 'RcptDate', title: 'Date', width: 150, sortable: true, hidden: false, filterable: true },
                    { field: 'IdNo', title: 'By ID', width: 100, sortable: true, hidden: false, filterable: true },
                    { field: 'MemName', title: 'Dist. Name', width: 150, sortable: true, hidden: false, filterable: true },
                    { field: 'ProdId', title: 'Prod Code', width: 100, sortable: true, hidden: false, filterable: true },
                    { field: 'ProductName', title: 'Product Name', width: 150, sortable: true, hidden: false, filterable: true },
                    { field: 'Qty', title: 'Qty', width: 80, sortable: true, hidden: false, filterable: true },
                    { field: 'ToMemberName', title: 'To Party Name', width: 80, sortable: true, hidden: false, filterable: true },
                ],
                pager: { limit: 20, sizes: [15, 20, 35, 50, 65, 80, 95, 100] }
            });


    }

    function SetSpecificCode(type, label) {
        console.log("FullProductList", FullProductList);
        console.log("FullCategoryList", FullCategoryList);
        if (type == "Product") {
            for (var i = 0; i < FullProductList.length; i++) {
                if (FullProductList[i].ProductName == label) {
                    $("#ProductCode").val(parseFloat(FullProductList[i].ProductCodeStr));
                    ProductCode = parseFloat(FullProductList[i].ProductCodeStr);
                    break;
                }
            }
        }
        if (type == "Category") {
            for (var i = 0; i < FullCategoryList.length; i++) {
                if (FullCategoryList[i].CategoryName == label) {
                    $("#CategoryCode").val(FullCategoryList[i].CategoryId);
                    CategoryCode = FullCategoryList[i].CategoryId;
                    GetAllProducts(FullCategoryList[i].CategoryId);
                    break;
                }
            }
        }
        if (type == "Party") {
            for (var i = 0; i < FullPartyList.length; i++) {
                if (FullPartyList[i].PartyName == label) {
                    $("#PartyCode").val(FullPartyList[i].PartyCode);
                    break;
                }
            }
        }
        console.log("CategoryCode", CategoryCode);
        console.log("ProductCode", ProductCode);
    }


    //function GetSalesDetails() {

    //}
</script>
<div class="row">
    <div class="page-title">
        <div class="title_left">
            <h3>Sales Report</h3>
        </div>
        <div class="title_right">
            <div class="col-md-5 col-sm-5 col-xs-12 form-group pull-right top_search">

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>Product Wise</h2>
                    <ul class="nav navbar-right panel_toolbox">
                        <li>
                            <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                        </li>

                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <br />
                    <form id="ProductWiseSalesForm" method="post" name="ProductWiseSalesForm" onsubmit="false" data-parsley-validate class="validateForm form-horizontal form-label-left">
                        
                        <div class="col-lg-12">
                            <div class="col-lg-8">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="control-label col-lg-6 col-md-3 col-sm-3 col-xs-12" for="category-name">
                                            From Date @*<span class="required">*</span>*@
                                        </label>
                                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12" style="padding-left: 0.5%;">

                                            @Html.TextBoxFor(m => m.StartDate, new { name = "StartDate", id = "StartDate", tabindex = "1", @class = "form-control col-md-7 col-xs-12" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label class="control-label col-lg-6 col-md-3 col-sm-3 col-xs-12" for="category-name">
                                            To Date @*<span class="required">*</span>*@
                                        </label>
                                        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12" style="padding-left: 0.5%;">

                                            @Html.TextBoxFor(m => m.EndDate, new { name = "EndDate", id = "EndDate", tabindex = "2", @class = "form-control col-md-7 col-xs-12" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    <div id="IsDateDiv">
                                        <label>
                                            <input type="checkbox" id="IsDateFilter" name="IsDateFilter" class="flat" tabindex="3" />


                                        </label>

                                    </div>
                                </div>
                            </div>
                        </div>
      
                        <div class="col-lg-12">
                            <div class="col-lg-8">
                                <div class="form-group">
                                    <label class="control-label col-lg-3 col-md-3 col-sm-3 col-xs-12" for="category-name">
                                        Product @*<span class="required">*</span>*@
                                    </label>
                                    <div class="col-lg-9 col-md-6 col-sm-6 col-xs-12" style="padding-left: 0.5%;">

                                        @Html.TextBoxFor(m => m.ProductName, new { name = "ProductName", id = "ProductName", tabindex = "6", @class = "form-control col-md-7 col-xs-12" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    <div id="IsProductDiv">
                                        <label>
                                            <input type="checkbox" id="IsProduct" name="IsProduct" class="flat" tabindex="7" />
                                        </label>

                                    </div>
                                </div>
                            </div>
                        </div>
                     
                        <div class="col-lg-12">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <div class="col-lg-9">
                                        <input type="button" id="btnShowReport" name="btnShowReport" value="Show Report" style="margin-left:75%" />
                                        <img src="~/images/ExcelImage.jpg" id="btnExport" style="margin-right: 6%;height: 25px;cursor:pointer;float:right" />
                                    </div>
                                    <div class="col-lg-3">&nbsp;</div>
                                </div>
                                <br /><br /><center><div class="loader" style="display:none"></div></center>
                                <table class="table bootstrap-datatable" id="grid"></table>
                                <center><span style="display:none" id="noRecord">No Records Found</span></center>
                            </div>
                        </div>

                        <table id="gridExport" style="display:none"></table>
                    </form>
                </div>

            </div>
        </div>
    </div>
    <div id="dialogMessage" title="Message">

    </div>

</div>
