@model InventoryManagement.Entity.Common.WalletRequest
@using InventoryManagement.Common
@using InventoryManagement.Entity.Common
@{
    ViewBag.Title = "Wallet Request Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool IsSoldByHo = (Session["LoginUser"] as User).IsSoldByHo;
    string CurrentPartyCode = (Session["LoginUser"] as User).PartyCode;
    string CurrentPartyName = (Session["LoginUser"] as User).PartyName;
}

<style>
    .ui-widget-header {
        margin-top: -1% !important;
        width: 102% !important;
        margin-left: -1% !important;
    }

    .ui-dialog-titlebar-close {
        margin-right: 1% !important;
    }

    .ui-widget-content {
        background: white !important;
        border-radius: 15px !important;
        -webkit-border-radius: 4px !important;
    }
    /*.ui-widget-header .ui-icon {
        background-color: black!important;
    }*/
    ui-autocomplete-input {
        z-index: 100;
    }

    .input-readonly {
        background-color: #EBEBE4;
    }

    .gj-grid-wrapper {
        min-width: 100% !important;
        overflow-x: scroll !important;
    }
</style>

<script type="text/javascript">
    var grid, dialog;
    var WalletGrid = [{}];
    var IsDateFilter = false;
    var FromDate = "", ToDate = "";
    var PreviouslySelectedFromDate = "";
    var PreviouslySelectedToDate = "";
    var PreviouslySelectedFromPickerDate = "";
    var PreviouslySelectedToPickerDate = "";
    var ReqNoToReject = "0";
    var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    $(document).ready(function () {
        $(".preloader").hide();
        GetAllParty();
        GetAllWalletRequest();
        $("#ViewReport").click(function () {
            $(".preloader").show();
            GetAllWalletRequest();
            $(".preloader").hide();
        });
        $("#PartyName").autocomplete({
            source: function (request, response) {
                var results = $.ui.autocomplete.filter(PartyList, request.term);

                response(results.slice(0, 50));
            },
            minLength: 1,
            scroll: true,
            select: function (event, ui) {
                //$("#txDestination").val(ui.item.label);
                //cityID = ui.item.id;
                console.log("ui.item", ui.item.label);
                $("#PartyName").val(ui.item.label);
                SetSpecificCode("Party", ui.item.label);
                return false;
            },

        }).focus(function () {
            $(this).autocomplete("search", "");
        });
        $('#IsDateFilter').on('ifChecked', function () {
            //console.log("checked");
            IsDateFilter = true;
            $("#StartDate").val("All");
            $("#StartDate").prop("readonly", "readonly");
            $("#EndDate").val("All");
            $("#EndDate").prop("readonly", "readonly");
            FromDate = "";
            ToDate = "";
            //GetSalesDetails($("#StartDate").val(), $("#EndDate").val(), '@CurrentPartyCode', "S");

        });
        $('#IsDateFilter').on('ifUnchecked', function () {
            //console.log("checked");
            IsDateFilter = false;
            $("#StartDate").val("");
            $("#StartDate").prop("readonly", "");
            $("#EndDate").val("");
            $("#EndDate").prop("readonly", "");
            FromDate = "";
            ToDate = "";

        });

        $("#StartDate").datetimepicker({


            format: 'DD-MMM-YYYY'
            ,
            // todayHighlight:true,
            widgetPositioning: {
                horizontal: 'auto',
                vertical: 'bottom'
            }

        }).on('dp.change', function (e) {
            // console.log(e.date);
            // fromDate = $('#FromDatePickerWidget').val();
            var selectedDate = e.date._d;
            console.log(selectedDate.getMonth() + 1);
            var lengthOfMonth = ((selectedDate.getMonth() + 1).toString()).length;
            console.log(lengthOfMonth);
            var twoDigitMonth = (lengthOfMonth > 1) ? (selectedDate.getMonth() + 1) : '0' + (selectedDate.getMonth() + 1);
            var newFromDate = selectedDate.getDate() + "-" + months[selectedDate.getMonth()] + "-" + selectedDate.getFullYear();

            FromDate = newFromDate;
            PreviouslySelectedFromPickerDate = newFromDate;
            ToDate = PreviouslySelectedToPickerDate;
           
        });
        $("#EndDate").datetimepicker({


            format: 'DD-MMM-YYYY'
            ,
            // todayHighlight:true,
            widgetPositioning: {
                horizontal: 'auto',
                vertical: 'bottom'
            }

        }).on('dp.change', function (e) {
            // console.log(e.date);
            // fromDate = $('#FromDatePickerWidget').val();
            var selectedDate = e.date._d;
            console.log(selectedDate.getMonth() + 1);
            var lengthOfMonth = ((selectedDate.getMonth() + 1).toString()).length;
            console.log(lengthOfMonth);
            var twoDigitMonth = (lengthOfMonth > 1) ? (selectedDate.getMonth() + 1) : '0' + (selectedDate.getMonth() + 1);

            var newToDate = selectedDate.getDate() + "-" + months[selectedDate.getMonth()] + "-" + selectedDate.getFullYear();

            ToDate = newToDate;
            PreviouslySelectedToPickerDate = newToDate;
            FromDate = PreviouslySelectedFromPickerDate;
                      
        });
        $('#IsParty').on('ifChecked', function () {
            //console.log("checked");
            IsParty = true;
            $("#PartyName").val("All");
            $("#PartyName").prop("readonly", "readonly");
            $("#PartyCode").val(0);

        });

        $('#IsParty').on('ifUnchecked', function () {
            //console.log("checked");
            IsParty = false;
            $("#PartyName").val("");
            $("#PartyName").prop("readonly", "");
            $("#PartyCode").val("");

        });

        function RejectWalletReq(e) {
            ReqNoToReject = e.data.record.ReqNo;
            $("#ReqNoToReject").html(ReqNoToReject);
            OpenRejectReq();
        }
        function OpenRejectReq() {
            $("#dialogReject").dialog({
                modal: true,
            });
            $("#YesBtn").attr("disabled", false);
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }
        $("#YesBtn").click(function () {
            var ReasonReject = $("#ReasonToReject").val();
            $("#YesBtn").attr("disabled", true);
            RejectThisReq(ReqNoToReject, ReasonReject);
        });
        $("#NoBtn").click(function () {
            ReqNoToReject = 0;
            $("#YesBtn").attr("disabled", false);
            $("#dialogReject").dialog("close");
        });


        function RejectThisReq(ReqNoToReject, RejectReason) {
            $.ajax({
                url: '@Url.Action("RejectWalletRequest", "Transaction")',
                type: 'POST',
                data: { "ReqNo": ReqNoToReject, "RejectReason": RejectReason },
                async: false,
                dataType: "json",
                success: function (objResult) {
                    if (objResult != null) {
                        $("#YesBtn").attr("disabled", false);
                        $("#dialogReject").dialog('close');
                        GetAllWalletRequest();
                        $("#ReasonToReject").val("");
                        OpenDialog("dialogMessage", objResponse.ResponseMessage, "false");
                        
                        ////}
                    }
                }
            });
        }



    function GetAllWalletRequest() {
        $(".preloader").show();
        var PartyCode = $("#PartyCode").val();
        var DateType=$("#DateType").val();
        var FromDate = $("#StartDate").val();
        var ToDate = $("#EndDate").val();
        var IsApproved=$("#IsApproved").val();
        $.ajax({
            url: '/Transaction/GetAllWalletRequest',
            dataType: 'JSON',
            method: 'GET',
            data: { 'PartyCode': PartyCode, "dateType": DateType, "FromDate": FromDate, "ToDate": ToDate, "IsApproved": IsApproved },
            success: function (objResult) {
                WalletGrid = [];
                if (objResult.length > 0) {
                    var i = 0;
                    for (i = 0; i < objResult.length; i++) {
                        var dateObj = new Date(objResult[i].ReqDate.match(/\d+/)[0] * 1);
                        var myDate = (dateObj.getDate()) + "/" + (dateObj.getMonth() + 1) + "/" + dateObj.getFullYear();

                        var dateObj1 = new Date(objResult[i].ChqDate.match(/\d+/)[0] * 1);
                        var myDate1 = (dateObj.getDate()) + "/" + (dateObj.getMonth() + 1) + "/" + dateObj.getFullYear();
                        var approved = "Pending";
                        var Rej = "";
                        if (objResult[i].IsApproved == "Y")
                            approved = "Approved";
                        if (objResult[i].IsApproved == "R")
                            approved = "Rejected";
                        if (objResult[i].IsApproved == "N")
                            Rej = "Reject";
                        WalletGrid.push({ "ApproveRemark": objResult[i].ApproveRemark, "IsApproved": approved, "SNo": i + 1, "ReqDateStr": objResult[i].ReqDateStr, "ReqBy": objResult[i].ReqBy, "ReqByName": objResult[i].ReqBy + ' - ' + objResult[i].ReqByName, "Paymode": objResult[i].Paymode, "ChqNo": objResult[i].ChqNo, "ChqDate": myDate1, "BranchName": objResult[i].BranchName, "BankName": objResult[i].BankName, "ReqNo": objResult[i].ReqNo, "ReqDate": myDate, "Remarks": objResult[i].Remarks, "ScannedFileName":"/images/WalletReqs/" + objResult[i].ScannedFileName, "Amount": objResult[i].Amount ,"Reject":Rej});
                    }
                    if (WalletGrid[0].SNo == null || WalletGrid[0].SNo == "") {
                        WalletGrid = WalletGrid.splice(1);
                    }                    
                }
                fillGrid();
            },
            error: function (error) {
                console.log(error);
            }
        });
        $(".preloader").hide();
    }

    function OpenDialog(dialogId, Message, isConfirmation) {
        $("#" + dialogId).empty();
        $("#" + dialogId).append('<p>' + Message + '</p>');
        if (isConfirmation == "true") {
            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "Yes",
                    id: "btnYes" + dialogId,
                    click: function () {
                        IsYes = true;
                        $("#" + dialogId).dialog("close");
                    }
                },
                {
                    text: "No",
                    id: "btnNo" + dialogId,
                    click: function () {
                        IsYes = false;
                        $("#" + dialogId).dialog("close");
                    }
                }
                ]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }
        else {


            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "OK",
                    id: "btn" + dialogId,
                    click: function () {
                        $("#" + dialogId).dialog("close");
                    }
                }]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }

    }

    function fillGrid() {

        $("#noRecord").hide();
        if (grid != null) {
            grid.destroy();
            $('#grid').empty();

        }
        if (WalletGrid.length == 0) {
            $("#noRecord").show();
        }
            grid = $('#grid').grid({
                dataSource: WalletGrid,
                headerFilter: true,
                uiLibrary: 'bootstrap',
                columns: [
                        { field: 'SNo', title: 'S.No.', width: 35, sortable: true, hidden: false, filterable: false },
                        { field: 'ReqNo', title: 'Req.No.', width: 45, sortable: true, hidden: false, filterable: true },
                        { field: 'Amount', title: 'Amount', width: 50, sortable: true, hidden: false, filterable: true },
                        { field: 'ReqDate', title: 'Req. Date', width: 65, sortable: true, hidden: false, filterable: false },
                         { field: 'ReqByName', title: 'Request By', width: 150, sortable: true, hidden: false, filterable: true },
                        { field: 'Paymode', title: 'Paymode', width: 50, sortable: true, hidden: false, filterable: true },
                        { field: 'ChqNo', title: 'Trans.No.', width: 50, sortable: true, hidden: false, filterable: true },
                        { field: 'ChqDate', title: 'Trans.Date', width: 65, sortable: true, hidden: false, filterable: false },
                        { field: 'BankName', title: 'Bank Name', width: 50, sortable: true, hidden: false, filterable: true },
                        { field: 'BranchName', title: 'Branch Name', width: 50, sortable: true, hidden: false, filterable: true },
                        { field: 'Remarks', title: 'Remarks', width: 80, sortable: true, hidden: false, filterable: false },
                        { title: 'File', width: 70, tmpl: '<a target="_blank" style="text-decoration:underline;" href={ScannedFileName} rel="group" class="fbox"><img src= {ScannedFileName} style="height:50px;" /> </a>', align: 'center', filterable: false },
                        { field: 'IsApproved', title: 'Approved', width: 60, sortable: true, hidden: false, filterable: true },
                        { field: 'ApproveRemark', title: 'Approve Remark', width: 90, hidden: false, filterable: true },
                          { field: 'Reject', width: 100, title: 'Reject', sortable: true, hidden: false, filterable: false, tmpl: '<a style="text-decoration:underline;color:blue">{Reject}</a>', events: { 'click': RejectWalletReq }, align: 'center' },

                ],

                pager: { limit: 50, sizes: [15, 20, 35, 50, 65, 80, 95, 100] }
            });


    }

    function SetSpecificCode(type, label) {

        if (type == "Party") {
            for (var i = 0; i < FullPartyList.length; i++) {
                if (FullPartyList[i].PartyName == label) {
                    $("#PartyCode").val(FullPartyList[i].PartyCode);
                    break;
                }
            }
        }
    }

    function GetAllParty() {
        $.ajax({
            url: '/Report/GetAllPartyListForReports',
            dataType: 'JSON',
            method: 'GET',
            //data: { 'LedgerName': '' },
            success: function (data) {
                console.log("data:", data);
                //response(data);
                FullPartyList = data;
                PartyList = [];
                if (data != null) {
                    var i = 0;
                    for (i = 0; i < data.length; i++) {
                        //console.log("data[i]", data[i]);
                        PartyList.push(data[i].PartyName);
                    }
                }
            },
            error: function (error) {
                console.log(error);
            }
        });
    }
    });

</script>

<div class="row">

    <div class="clearfix"></div>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>Wallet Request Detail</h2>
                    
                    <ul class="nav navbar-right panel_toolbox">
                        <li>
                            <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                        </li>

                    </ul>
                    <div class="clearfix"></div>
                </div>
                <form id="ApproveRequestForm" method="post" name="ApproveRequestForm" onsubmit="false" data-parsley-validate class="validateForm form-horizontal form-label-left">                  
                    @Html.HiddenFor(m => m.GridString, new { id = "GridString",name= "GridString" })
                    <div class="x_content">
                        <br />
                        @Html.HiddenFor(m => m.ReqBy, new { id = "PartyCode", name = "PartyCode" })
                        <div class="col-lg-12">
                            <div class="col-lg-6">

                                    <div class="form-group">
                                        <div class="control-label col-lg-4 col-md-3 col-sm-3 col-xs-12" style="padding-top:0;padding-left:0" for="category-name">
                                            @Html.DropDownList("DateType" , new SelectList(new List<SelectListItem> {
             new SelectListItem {Text="Req.Date",Value="R" },
new SelectListItem { Text="Approve/Reject Date",Value="A"} }, "Value", "Text"), new { @class = "form-control" , @id = "DateType" }) 
                                        </div>
                                        <div class="col-lg-3 col-md-6 col-sm-6 col-xs-12" style="padding-left: 0.5%;">

                                            @Html.TextBoxFor(m => m.ReqDate, new { name = "StartDate", id = "StartDate", tabindex = "1", @class = "form-control col-md-7 col-xs-12" })
                                        </div>
                                  
                                        <label class="control-label col-lg-1 col-md-3 col-sm-3 col-xs-12" for="category-name">
                                            To @*<span class="required">*</span>*@
                                        </label>
                                        <div class="col-lg-3 col-md-6 col-sm-6 col-xs-12" style="padding-left: 0.5%;">

                                            @Html.TextBoxFor(m => m.ReqDate, new { name = "EndDate", id = "EndDate", tabindex = "2", @class = "form-control col-md-7 col-xs-12" })
                                        </div>
                                        <div id="IsProductDiv">
                                            <label class="control-label col-lg-1 col-md-2 col-sm-3 col-xs-6" for="category-name">
                                                <input type="checkbox" id="IsDateFilter" name="IsDateFilter" class="flat" tabindex="3" />
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            
                            <div class="col-lg-4" >
                                <div class="form-group">
                                   
                                    <label class="control-label col-lg-6 col-md-3 col-sm-3 col-xs-12" style="padding-top:0;padding-left:0" for="category-name">
                                        @Html.DropDownList("IsApproved", new SelectList(new List<SelectListItem> {
                                       new SelectListItem {Text="All",Value="A" },
             new SelectListItem {Text="Pending",Value="N" },
             new SelectListItem {Text="Approved",Value="Y" },
new SelectListItem { Text="Rejected",Value="R"} }, "Value", "Text"), new { @class = "form-control", @id = "IsApproved" })
                                    </label>

                                </div>
                            </div>
                        </div>
                            <div class="col-lg-12">
                              
                  
                                <div class="form-group">
                                     @if (IsSoldByHo)
                                {
                                    <label class="control-label col-lg-2 col-md-2 col-sm-2 col-xs-12" for="category-name">
                                       Select Requested Party
                                    </label>
                                    <div class="col-lg-6 col-md-7 col-sm-7 col-xs-12" style="padding-left: 0;">
                                        @Html.TextBoxFor(m => m.ReqByName, new { name = "PartyName", id = "PartyName", tabindex = "5", @class = "form-control col-md-7 col-xs-12" })
                                    </div>


                                    <div class="col-lg-1">
                                        <div id="IsPartyDiv">
                                            <label>
                                                <input type="checkbox" id="IsParty" name="IsParty" class="flat" tabindex="0" />
                                            </label>
                                        </div>
                                    </div>
                                     }
                                    <div class="col-lg-1">
                                        <a style="cursor:pointer;color:blue;text-decoration:underline" id="ViewReport">View</a>
                                    </div>
                            </div>
                               
                            </div>

                            <div class="row" style="margin-top:1%">

                                <table class="table bootstrap-datatable" id="grid"></table>
                                
                            </div>


                            <table id="gridExport" style="display:none"></table>

                        </div>

                </form>
            </div>
        </div>
    </div>
    <div id="dialogMessage" title="Message">

    </div>
    <div id="dialogReject" title="Reject Request" style="display:none">
        <div class="col-lg-12" style="background-color:lightgrey;border:1px black solid;">
            <span style="width:100%;"><center>Are you sure!! Do you want to Reject/Cancel this Wallet Request?</center></span>
        </div>
        <br />
        <div class="row" style="margin-top:1%">
            <div class="col-lg-12">

                <label class="col-lg-2">
                    Req No.
                </label>
                <label class="col-lg-10" id="ReqNoToReject">

                </label>
            </div>
            <div class="col-lg-12">
                <label class="col-lg-2">
                    Reason
                </label>
                <div class="col-lg-10">
                    <input type="text" maxlength="100" id="ReasonToReject" style="width:98%" class="form-control" />
                </div>
            </div>

        </div>
        <div class="row" style="margin-top:1%">
            <div class="col-lg-6 col-lg-offset-3">

                @*<button class="btn btn-primary" type="reset" onclick="reset()">Reset</button>*@
                <button type="button" id="YesBtn" class="btn btn-success" tabindex="0">Yes</button>
                <button class="btn btn-primary" type="button" id="NoBtn" tabindex="0">No</button>
            </div>
        </div>
    </div>

</div>



