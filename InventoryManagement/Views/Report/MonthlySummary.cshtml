@model InventoryManagement.Entity.Common.MonthlySumm
@using InventoryManagement.Common
@using InventoryManagement.Entity.Common
@{
    ViewBag.Title = "MonthlySummary";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool IsSoldByHo = (Session["LoginUser"] as User).IsSoldByHo;
    string CurrentPartyCode = (Session["LoginUser"] as User).PartyCode;
}

<style>
    .ui-widget-header {
        margin-top: -1% !important;
        width: 102% !important;
        margin-left: -1% !important;
    }

    .gj-grid-wrapper {
        min-width: 100% !important;
        overflow-x: scroll !important;
    }

    .ui-dialog-titlebar-close {
        margin-right: 1% !important;
    }

    .ui-widget-content {
        background: white !important;
        border-radius: 15px !important;
        -webkit-border-radius: 4px !important;
    }
    /*.ui-widget-header .ui-icon {
        background-color: black!important;
    }*/
    ui-autocomplete-input {
        z-index: 100;
    }

    .input-readonly {
        background-color: #EBEBE4;
    }
</style>
<script type="text/javascript">
    var grid, dialog;
    var IsYes = false;
    var SummGrid = [{}];
    var SalesType = "BillWise";
    var IsParty = false;
    var PartyList = [];
    var FullPartyList;
    $(document).ready(function () {
        var IsAdministrator='@IsSoldByHo';
        if (IsAdministrator=="True") {
            GetAllParty();
        }
        else{
            @*$("#PartyName").val('@CurrentPartyName');
            $("#PartyName").prop("readonly", "readonly");*@
            $("#PartyCode").val('@CurrentPartyCode');
        }
        $(".preloader").hide();
        $("#hiddenInvoiceType").val("");
        $("#InvoiceType").change(function () {
            var SelectedVal = $("#InvoiceType").val();
            $("#hiddenInvoiceType").val(SelectedVal);
        });
      
        $('#IsParty').on('ifChecked', function () {
            //console.log("checked");
            IsParty = true;
           
            $("#PartyName").val('All');
            $("#PartyName").prop("readonly", "readonly");
            $("#PartyCode").val('0');
        });

        $('#IsParty').on('ifUnchecked', function () {
            IsParty = false;

            $("#PartyName").val('');
            $("#PartyName").prop("readonly", "");
            $("#PartyCode").val('');
        });
        $("#btnExport").on('click', function () {
            //var tableToExcel = new TableToExcel();
            // tableToExcel.render("grid");
            var UserTypeStr = "MonthlyReport";

            //$("#grid").table2excel({
            //    exclude: ".noExl",
            //    name: UserTypeStr + "_Export",
            //    filename: UserTypeStr + "_Export",
            //    fileext: ".xls",
            //});
            console.log("in export gridExport", SummGrid);
            var tableString = "<thead><tr>";
            tableString += "<th>S.No.</th>";
            tableString += "<th>Code</th>";
            tableString += "<th>Franchise Name</th>";
            tableString += "<th>Month</th>";
            tableString += "<th>Amount</th>";
            tableString += "<th>PV Value</th>";
           

            tableString += "</tr></thead><tbody>";
            for (var i = 0; i < SummGrid.length; i++) {
                tableString += "<tr>";
                tableString += "<td>" + SummGrid[i].SNo + "</td>";
                tableString += "<td>" + SummGrid[i].PartyCode + "</td>";
                tableString += "<td>" + SummGrid[i].PartyName + "</td>";
                tableString += "<td>" + SummGrid[i].Month + "</td>";
                tableString += "<td>" + SummGrid[i].Amount + "</td>";
                tableString += "<td>" + SummGrid[i].PVValue + "</td>";
                tableString += "</tr>";
            }


            tableString += "</tbody>";
            $("#gridExport").empty();
            $("#gridExport").append(tableString);
            tableToExcel('gridExport', UserTypeStr + "_Export");

        });
        $("#btnShowReport").on('click', function () {
            $(".preloader").show();
            var PartyCode = $("#PartyCode").val();
            var InvoiceType = $("#InvoiceType").val();
            var ProdType = $("#ProdType").val();
            var mnth = $("#Sessn option:selected").text();
                $.ajax({
                    url: '@Url.Action("GetMonthlyReport", "Report")',
                    type: 'POST',
                    data: { "PartyCode": PartyCode, "BillType": InvoiceType, "ProdType": ProdType, "mnth": mnth },
                    dataType: "json",
                    success: function (objResult) {
                        SummGrid = [{}];
                        console.log("objResult", objResult);
                        //if (objResult[0].ErrorMsg != null || objResult[0].ErrorMsg != "" || objResult[0].ErrorMsg != undefined) {
                        //    console.log("objResult[0].ErrorMsg", objResult[0].ErrorMsg);
                        //}
                        //if (objResult != null) {
                        //    alert("objResult", objResult);
                        //}
                        if (objResult.length > 0) {
                            SummGrid = SummGrid.splice(1);
                            for (var i = 0; i < objResult.length; i++) {                      
                                SummGrid.push({ "SNo": i + 1, "Month": objResult[i].Mnth, "PartyCode": objResult[i].PartyCode, "PartyName": objResult[i].PartyName, "Amount": objResult[i].NetPayable, "PVValue": objResult[i].PvValue });
                            }
                        }
                        fillGrid();
                       $(".preloader").hide();
                    },
                    error: function (xhr, data) {
                        console.log(xhr);
                        console.log("Error:", data);
                    }
                });        
        });

        $("#PartyName").autocomplete({
            source: function (request, response) {
                var results = $.ui.autocomplete.filter(PartyList, request.term);

                response(results.slice(0, 50));
            },
            minLength: 1,
            scroll: true,
            select: function (event, ui) {
                //$("#txDestination").val(ui.item.label);
                //cityID = ui.item.id;
                console.log("ui.item", ui.item.label);
                $("#PartyName").val(ui.item.label);
                SetSpecificCode("Party", ui.item.label);
                return false;
            },

        }).focus(function () {
            $(this).autocomplete("search", "");
        });
    });

    function SetSpecificCode(type, label) {

        if (type == "Party") {
            for (var i = 0; i < FullPartyList.length; i++) {
                if (FullPartyList[i].PartyName == label) {
                    $("#PartyCode").val(FullPartyList[i].PartyCode);
                    break;
                }
            }
        }
    }

    function GetAllParty() {
        $.ajax({
            url: '/Report/GetAllPartyListForReports',
            dataType: 'JSON',
            method: 'GET',
            //data: { 'LedgerName': '' },
            success: function (data) {
                console.log("data:", data);
                //response(data);
                FullPartyList = data;
                PartyList = [];
                if (data != null) {
                    var i = 0;
                    for (i = 0; i < data.length; i++) {
                        //console.log("data[i]", data[i]);
                        PartyList.push(data[i].PartyName);
                    }
                }
            },
            error: function (error) {
                console.log(error);
            }
        });
    }

  
    function OpenDialog(dialogId, Message, isConfirmation) {
        $("#" + dialogId).empty();
        $("#" + dialogId).append('<p>' + Message + '</p>');
        if (isConfirmation == "true") {
            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "Yes",
                    id: "btnYes" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}
                        IsYes = true;
                        $("#" + dialogId).dialog("close");
                    }
                },
                {
                    text: "No",
                    id: "btnNo" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}
                        IsYes = false;
                        $("#" + dialogId).dialog("close");
                    }
                }
                ]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }
        else {


            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "OK",
                    id: "btn" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}

                        $("#" + dialogId).dialog("close");


                    }
                }]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }

    }
    function fillGrid() {
        console.log("SummGrid", SummGrid);

        // SummGrid = SummGrid.splice(1);

        $("#noRecord").hide();
        //console.log("ProductGrid", ProductGrid);
        if (grid != null) {
            grid.destroy();
            $('#grid').empty();

        }

        grid = $('#grid').grid({
            dataSource: SummGrid,
            uiLibrary: 'bootstrap',
            headerFilter: true,
            columns: [
                { field: 'SNo', title: 'S.No.', width: 50, sortable: true, hidden: false, filterable: false },
                 { field: 'PartyCode', title: 'Code', width: 80, sortable: true, hidden: false, filterable: true },
                  { field: 'PartyName', title: 'Franchise Name', width: 200, sortable: true, hidden: false, filterable: true },
                { field: 'Month', title: 'Month', width:110, sortable: true, hidden: false, filterable: true},
                { field: 'Amount', width: 110, title: 'Amount', sortable: true, hidden: false, filterable: true },
                { field: 'PVValue', width: 110, title: 'PV Value', sortable: true, hidden: false, filterable: true },
            ],
            pager: { limit: 20, sizes: [15, 20, 35, 50, 65, 80, 95, 100] }
        });
    }

    //function GetSalesDetails() {
    //}
</script>
<div class="row">
    <div class="page-title">
        <div class="title_left">
            <h3>Monthly Summary</h3>
        </div>
        <div class="title_right">
            <div class="col-md-5 col-sm-5 col-xs-12 form-group pull-right top_search">
            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_content">
                    <br />
                    <form id="MonhlySummForm" method="post" name="MonhlySummForm" onsubmit="false" data-parsley-validate class="validateForm form-horizontal form-label-left">
                        @Html.HiddenFor(m => m.PartyCode, new { id = "PartyCode", name = "PartyCode" })
                        @Html.HiddenFor(m => m.InvoiceType, new { id = "hiddenInvoiceType", name = "hiddenInvoiceType" })
                        <div class="col-lg-12">
                         
                        </div>
                                   
                                   
                                     
                                            @if (IsSoldByHo)
                                            {
                                            <div class="col-lg-12">
                                                <div class="form-group">
                                                    <label class="control-label col-lg-2 col-md-2 col-sm-2 col-xs-12" for="category-name">
                                                        Enter Party
                                                    </label>
                                                    <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12"  style="padding-left: 0;">
                                                        @Html.TextBoxFor(m => m.PartyName, new { name = "PartyName", id = "PartyName", tabindex = "5", @class = "form-control col-md-7 col-xs-12" })
                                                    </div>

                                                            <div id="IsPartyDiv">
                                                                <label>
                                                                    <input type="checkbox" id="IsParty" name="IsParty" class="flat col-lg-1 col-md-1 col-sm-1 col-xs-2"  />
                                                                </label>                                                         
                                                    </div>
                                                </div>
                                            </div>  
                                            }
                                         
                                        
                        <div class="col-lg-12">
                            <div class="col-lg-2">
                                <div class="form-group">
                                    @Html.DropDownListFor(m => m.InvoiceType, new SelectList(new List<SelectListItem> {
             new SelectListItem { Text = "Sale", Value = "S"},
             new SelectListItem { Text = "Purchase", Value = "P"} }, "Value", "Text"), new { @class = "form-control", @id = "InvoiceType" })
                                </div>
                            </div>
                            <div class="col-lg-10"style="padding-left: 0;">
                                <div class="form-group">
                                    <div class="col-lg-4" style="padding-left: 0;">
                                        @Html.DropDownListFor(m => m.InvoiceType, new SelectList(new List<SelectListItem> {
             new SelectListItem {Text="All Products",Value="A" },
new SelectListItem { Text="Toothpaste & Soap",Value="S"} }, "Value", "Text"), new { @class = "form-control", @id = "ProdType" })
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="col-lg-5">
                                            <div class="form-group control-label ">
                                                <b> Select Month</b>
                                            </div>
                                        </div>
                                        <div class="col-lg-7" style="padding-left: 0;">
                                            <div class="form-group">

                                                @Html.DropDownList("Sessn", ViewBag.OfferSessList as IEnumerable<SelectListItem>, new { tabindex = "0", @class = "form-control", @name = "Sessn", @id = "Sessn" })

                                            </div>
                                        </div>
                                    </div>

                                        <a style="cursor:pointer;color:blue;text-decoration:underline" id="btnShowReport">Show Report</a>
                                    &nbsp;&nbsp;<img src="~/images/ExcelImage.jpg" id="btnExport" style="height: 25px;cursor:pointer;" />
                                    </div>
                            </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="form-group">
                                    <br /><center><div class="loader" style="display:none"></div></center>
                                    <table class="table bootstrap-datatable" id="grid"></table>
                                    <center><span style="display:none" id="noRecord">No Records Found</span></center>
                                </div>
                            </div>
                            <table id="gridExport" style="display:none"></table>
</form>
                </div>
            </div>
        </div>
    </div>
    <div id="dialogMessage" title="Message">

    </div>

</div>
