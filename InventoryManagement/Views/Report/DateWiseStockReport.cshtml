@model InventoryManagement.Entity.Common.StockReportModel
@using InventoryManagement.Common
@using InventoryManagement.Entity.Common
@{
    ViewBag.Title = "DateWiseStockReport";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool IsSoldByHo = (Session["LoginUser"] as User).IsSoldByHo;
    string CurrentPartyCode = (Session["LoginUser"] as User).PartyCode;
    string CurrentPartyName = (Session["LoginUser"] as User).PartyName;
}
<style>
    .gj-grid-wrapper {
        min-width: 100% !important;
        overflow-x: scroll !important;
    }

    .ui-widget-header {
        margin-top: -1% !important;
        width: 102% !important;
        margin-left: -1% !important;
    }

    .ui-dialog-titlebar-close {
        margin-right: 1% !important;
    }

    .ui-widget-content {
        background: white !important;
        border-radius: 15px !important;
        -webkit-border-radius: 4px !important;
    }
    /*.ui-widget-header .ui-icon {
        background-color: black!important;
    }*/
    ui-autocomplete-input {
        z-index: 100;
    }

    .input-readonly {
        background-color: #EBEBE4;
    }
</style>
<script type="text/javascript">
    var grid, dialog;
    var StockGrid = [{}];
    var IsBatch = false;
    var tableStockGrid;
    var StockType = "CurrentStock";
    var IsCategory = false;
    var IsProduct = false;
    var IsParty = false;
    var FromDate = "", ToDate = "";
    var PreviouslySelectedFromDate = "";
    var PreviouslySelectedToDate = "";
    var PreviouslySelectedToPickerDate = "";
    var PreviouslySelectedFromPickerDate = "";
    var ProductList = [];
    var FullProductList;
    var PartyList = [];
    var FullPartyList;
    var CategoryList = [];
    var FullCategoryList;
    var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    $(document).ready(function () {
     
        GetAllProducts(0);
        $(".preloader").hide();
        // FullProductList = ProductListJson;
        var IsAdministrator = '@IsSoldByHo';
        console.log("IsAdministrator", IsAdministrator);
        if (IsAdministrator=="True") {
            GetAllParty();
        }
        else{
            @*$("#PartyName").val('@CurrentPartyName');
            $("#PartyName").prop("readonly", "readonly");*@
            console.log("in else party",'@CurrentPartyCode');
            $("#PartyCode").val('@CurrentPartyCode');
       }


        $("#ProductName").autocomplete({
            source: function (request, response) {
                var results = $.ui.autocomplete.filter(ProductList, request.term);

                response(results.slice(0, 50));
                //response(results);
                //$('html').getNiceScroll().resize();
                //$('#sidebar').getNiceScroll().resize();
                //$('.scroll-panel').getNiceScroll().resize();
                //response(ItemList);
            },
            minLength: 1,
            scroll: true,
            select: function (event, ui) {
                //$("#txDestination").val(ui.item.label);
                //cityID = ui.item.id;
                console.log("ui.item", ui.item.label);
                $("#ProductName").val(ui.item.label);
                SetSpecificCode("Product",ui.item.label);
                return false;
            },

        }).focus(function () {
            $(this).autocomplete("search", "");
        });
      

        $("#PartyName").autocomplete({
            source: function (request, response) {
                var results = $.ui.autocomplete.filter(PartyList, request.term);

                response(results.slice(0, 50));
                //response(results);
                //$('html').getNiceScroll().resize();
                //$('#sidebar').getNiceScroll().resize();
                //$('.scroll-panel').getNiceScroll().resize();
                //response(ItemList);
            },
            minLength: 1,
            scroll: true,
            select: function (event, ui) {
                //$("#txDestination").val(ui.item.label);
                //cityID = ui.item.id;
                console.log("ui.item", ui.item.label);
                $("#PartyName").val(ui.item.label);
                SetSpecificCode("Party",ui.item.label);
                return false;
            },

        }).focus(function () {
            $(this).autocomplete("search", "");
        });      

        $('#IsProduct').on('ifChecked', function () {
            //console.log("checked");
            IsProduct = true;
            $("#ProductName").val("All");
            $("#ProductName").prop("readonly", "readonly");
            $("#ProductCode").val(0);
            //GetAllProducts(0);

        });
        $('#IsParty').on('ifChecked', function () {
            //console.log("checked");
            IsParty = true;
            //$("#PartyName").val("All");
            //$("#PartyName").prop("readonly", "readonly");
            //$("#PartyCode").val(0);
            $("#PartyName").val('All');
            $("#PartyName").prop("readonly", "readonly");
            $("#PartyCode").val('0');
        });

        $('#IsParty').on('ifUnchecked', function () {
            //console.log("checked");
            IsParty = false;
            //$("#PartyName").val("");
            //$("#PartyName").prop("readonly", "");
            //$("#PartyCode").val("");
            $("#PartyName").val('');
            $("#PartyName").prop("readonly", "");
            $("#PartyCode").val('');
        });

        $('#IsProduct').on('ifUnchecked', function () {
            //console.log("checked");
            IsProduct = false;
            $("#ProductName").val("");
            $("#ProductName").prop("readonly", "");
            $("#ProductCode").val("");
        });
       
        $('#IsDateFilter').on('ifChecked', function () {
            //console.log("checked");
            IsDateFilter = true;
            $("#StartDate").val("All");
            $("#StartDate").prop("readonly", "readonly");
            FromDate = "";
            ToDate = "";
            $("#EndDate").val("All");
            $("#EndDate").prop("readonly", "readonly");
            //var CustomerId = $('#CustCode').val();
            // GetSalesDetails($("#StartDate").val(), $("#EndDate").val(), CustomerId, '@CurrentPartyCode', "S");
        });
        $('#IsDateFilter').on('ifUnchecked', function () {
            //console.log("checked");
            IsDateFilter = false;
            $("#StartDate").val("");
            $("#StartDate").prop("readonly", "");
            $("#EndDate").val("");
            $("#EndDate").prop("readonly", "");
            FromDate = "";
            ToDate = "";
        });

        $("#StartDate").datetimepicker({


            format: 'DD-MMM-YYYY'
            ,defaultDate: new Date(),
            // todayHighlight:true,
            widgetPositioning: {
                horizontal: 'auto',
                vertical: 'bottom'
            }

        });
    $("#EndDate").datetimepicker({


        format: 'DD-MMM-YYYY',
        defaultDate: new Date(),
        widgetPositioning: {
            horizontal: 'auto',
            vertical: 'bottom'
        }

    });

        $('#CurrentStock').click(function () {
            //$(".loader").show();
            $(".preloader").show();
            
            var CategoryCode = $("#CategoryCode").val();
            var ProductCode = $("#ProductCode").val();
            var PartyCode = $("#PartyCode").val();
            FromDate = $("#StartDate").val();
            ToDate = $("#EndDate").val();
            if (FromDate == "" || FromDate == null) {
                OpenDialog("dialogMessage", "Please enter date", false);
                $("#StartDate").focus();
            }
            if (ToDate == "" || ToDate == null) {
                OpenDialog("dialogMessage", "Please enter date", false);
                $("#EndDate").focus();
            }
            if (CategoryCode == "" || CategoryCode == null) {
                CategoryCode = "0";
            }
            if (ProductCode == "" || ProductCode == null) {
                ProductCode = "0";
            }
            var PartyCode = $("#PartyCode").val();
              if (ToDate != "" && FromDate!="")
                  GetStockDetails(CategoryCode, ProductCode, PartyCode, FromDate, ToDate);
            else
                  $(".preloader").hide();
        });

        $("#btnExport").on('click', function () {
            //var tableToExcel = new TableToExcel();
            // tableToExcel.render("grid");
            var UserTypeStr = "StockReport";

            console.log("in export gridExport", StockGrid);
            var tableString = "<thead><tr>";

                tableString += "<th>S.No.</th>";
                tableString += "<th>Party Code</th>";
                tableString += "<th>Party Name</th>";
                tableString += "<th>Product Code</th>";
                tableString += "<th>Product Name</th>";
                tableString += "<th>Op.Stock</th>";
                tableString += "<th>In Stock</th>";
                tableString += "<th>Out Stock</th>";
                tableString += "<th>Cls. Stock</th>";
                tableString += "<th>Op.Stock Value</th>";
                tableString += "<th>In Stock Value</th>";
                tableString += "<th>Out Stock Value</th>";
                tableString += "<th>Cls. Stock Value</th>";
                tableString += "</tr></thead><tbody>";
                for (var i = 0; i < StockGrid.length; i++) {
                    tableString += "<tr>";
                    tableString += "<td>"+StockGrid[i].SNo+"</td>";
                    tableString += "<td>"+StockGrid[i].PartyCode+"</td>";
                    tableString += "<td>" + StockGrid[i].PartyName + "</td>";
                    tableString += "<td class=formatText>" + StockGrid[i].ProductCode + "</td>";
                    tableString += "<td>" + StockGrid[i].ProductName + "</td>";
                    tableString += "<td>" + StockGrid[i].OpStock + "</td>";
                    tableString += "<td>" + StockGrid[i].InStock + "</td>";
                    tableString += "<td>" + StockGrid[i].StockOut + "</td>";
                    tableString += "<td>" + StockGrid[i].ClsStock + "</td>";
                    tableString += "<td>" + StockGrid[i].OpStockValue + "</td>";
                    tableString += "<td>" + StockGrid[i].InStockValue + "</td>";
                    tableString += "<td>" + StockGrid[i].StockOutValue + "</td>";
                    tableString += "<td>" + StockGrid[i].ClsStockValue + "</td>";
                    tableString += "</tr>";
                }

                tableString += "</tbody>";
                $("#gridExport").empty();
                $("#gridExport").append(tableString);
                tableToExcel('gridExport', UserTypeStr + "_Export");

            });

    });

    function SetSpecificCode(type, label) {
        if (type == "Product") {
            for (var i = 0; i < FullProductList.length; i++) {
                if (FullProductList[i].ProductName == label) {
                    $("#ProductCode").val(parseFloat(FullProductList[i].ProductCodeStr));
                    break;
                }
            }
        }
        if (type == "Category") {
            for (var i = 0; i < FullCategoryList.length; i++) {
                if (FullCategoryList[i].CategoryName == label) {
                    $("#CategoryCode").val(FullCategoryList[i].CategoryId);
                    GetAllProducts(FullCategoryList[i].CategoryId);
                    break;
                }
            }
        }
        if (type == "Party") {
            for (var i = 0; i < FullPartyList.length; i++) {
                if (FullPartyList[i].PartyName == label) {
                    $("#PartyCode").val(FullPartyList[i].PartyCode);
                    break;
                }
            }
        }
    }

    function GetAllProducts(catId) {
     
        $.ajax({
            url: '/Report/GetAllProduct',
            dataType: "json",
            method: 'POST',
            async: false,
            data: { 'CategoryCode': catId },
            success: function (data) {
                console.log("data:", data);
                //response(data);
                FullProductList = data;
                ProductList = [];
                if (data != null) {
                    var i = 0;
                    for (i = 0; i < data.length; i++) {
                        //console.log("data[i]", data[i]);
                        ProductList.push(data[i].ProductName);
                    }
                }
            },
            error: function (xhr, status, error) {
                console.log("xhr.responseText:", xhr.responseText);
                //var responseText = jQuery.parseJSON(xhr.responseText);
                //console.log("responseText.ExceptionType:", responseText.ExceptionType);
                //console.log("responseText.Message:", responseText.Message);
            }
        });
    }

    function GetAllParty() {
        $.ajax({
            url: '/Report/GetAllPartyListForReports',
            dataType: 'JSON',
            method: 'GET',
            //data: { 'LedgerName': '' },
            success: function (data) {
                console.log("data:", data);
                //response(data);
                FullPartyList = data;
                PartyList = [];
                if (data != null) {
                    var i = 0;
                    for (i = 0; i < data.length; i++) {
                        //console.log("data[i]", data[i]);
                        PartyList.push(data[i].PartyName);
                    }
                }
            },
            error: function (error) {
                console.log(error);
            }
        });
    }
  
    function OpenDialog(dialogId, Message, isConfirmation) {
        $("#" + dialogId).empty();
        $("#" + dialogId).append('<p>' + Message + '</p>');
        if (isConfirmation == "true") {
            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "Yes",
                    id: "btnYes" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}
                        IsYes = true;
                        $("#" + dialogId).dialog("close");


                    }
                },
                {
                    text: "No",
                    id: "btnNo" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}
                        IsYes = false;
                        $("#" + dialogId).dialog("close");
                    }
                }
                ]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }
        else {


            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "OK",
                    id: "btn" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}

                        $("#" + dialogId).dialog("close");


                    }
                }]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }

    }
    function fillGrid() {
        console.log("StockGrid", StockGrid);
               // StockGrid = StockGrid.splice(1);
        $("#noRecord").hide();
        //console.log("ProductGrid", ProductGrid);
        if (grid != null) {
            grid.destroy();
            $('#grid').empty();

        }
 
            grid = $('#grid').grid({
                dataSource: StockGrid,
                uiLibrary: 'bootstrap',
                headerFilter: true,
                columns: [
                    { field: 'SNo', title: 'S.No.',width:80, sortable: true, hidden: false, filterable: false },
                     { field: 'PartyCode', width:100, title: 'Party Code', sortable: true, hidden: false, filterable: true },
                      { field: 'PartyName', width: 150, title: 'Party Name', sortable: true, hidden: false, filterable: true },                     
                        { field: 'ProductCode', width: 80, title: 'Code', sortable: true, hidden: false, filterable: true },
                         { field: 'ProductName', width: 150, title: 'Product Name', sortable: true, hidden: false, filterable: true },
                         { field: 'OpStock', width: 70, title: 'Op.Stock', sortable: true, hidden: false, filterable: true },
                        { field: 'InStock', width: 70, title: 'In Stock', sortable: true, hidden: false, filterable: true },
                        { field: 'StockOut', width: 70, title: 'Out Stock', sortable: true, hidden: false, filterable: true },
                        { field: 'ClsStock', width: 70, title: 'Cls.Stock', sortable: true, hidden: false, filterable: true },
                        { field: 'OpStockValue', width: 90, title: 'Op.Stock Value', sortable: true, hidden: false, filterable: true },
                        { field: 'InStockValue', width: 90, title: 'In Stock Value', sortable: true, hidden: false, filterable: true },
                        { field: 'StockOutValue', width: 90, title: 'Out Stock Value', sortable: true, hidden: false, filterable: true },
                        { field: 'ClsStockValue', width: 90, title: 'Cls.Stock Value', sortable: true, hidden: false, filterable: true },
                ],
                pager: { limit: 50, sizes: [15, 20, 35, 50, 65, 80, 95, 100] }
            });
       
        $(".loader").hide();
    }

    function GetStockDetails(CategoryCode, ProductCode, PartyCode, startDate,endDate) {
      
            if (ProductCode == "") {
                ProductCode = 0;
            }
            $("#opval").text("0");
            $("#clsval").text("0");

            $.ajax({
                url: '@Url.Action("GetDateWiseStockReport", "Report")',
                type: 'POST',
                data: { "CategoryCode": 0, "ProductCode": ProductCode, "PartyCode": PartyCode, "FromDate": startDate, "ToDate": endDate},

                dataType: "json",
                success: function (objResult) {
                    StockGrid = [{}];
                    if (objResult.length > 0) {
                        var totalDpVal = 0;
                        var totalMrpVal = 0;
                        StockGrid = StockGrid.splice(1);
                        for (var i = 0; i < objResult.length; i++) {
                            totalDpVal = totalDpVal + parseFloat (objResult[i].OpStockValue);
                            totalMrpVal = totalMrpVal + parseFloat (objResult[i].ClsStockValue);
                            StockGrid.push({ "SNo": i + 1, "PartyCode": objResult[i].PartyCode, "PartyName": objResult[i].PartyName, "ProductCode": objResult[i].ProductCode, "ProductName": objResult[i].ProductName, "OpStock": objResult[i].OpStock, "InStock": objResult[i].InStock, "StockOut": objResult[i].StockOut, "ClsStock": objResult[i].ClsStock, "OpStockValue": objResult[i].OpStockValue, "InStockValue": objResult[i].InStockValue, "StockOutValue": objResult[i].StockOutValue, "ClsStockValue": objResult[i].ClsStockValue });
                        }
                        tableStockGrid = StockGrid;
                        $("#opval").text(totalDpVal);
                        $("#clsval").text(totalMrpVal);

                        $("#noRecord").hide();

                    }
                    else {

                        $("#noRecord").show();
                    }
                    fillGrid();
                    $(".preloader").hide();

                },
                error: function (xhr, data) {
                    //  return false;
                    console.log(xhr);
                    console.log("Error:", data);
                }
            });



    }
</script>

<div class="row">

    <div class="clearfix"></div>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>Date wise Stock Summary</h2>
                    <ul class="nav navbar-right panel_toolbox">
                        <li>
                            <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                        </li>

                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <br />
                    <form id="distributorForm" method="post" name="distributorForm" onsubmit="false" data-parsley-validate class="validateForm form-horizontal form-label-left">
    @Html.HiddenFor(m => m.PartyCode, new { id = "PartyCode", name = "PartyCode" })
    @Html.HiddenFor(m => m.CategoryCode, new { id = "CategoryCode", name = "CategoryCode" })
    @Html.HiddenFor(m => m.ProductCode, new { id = "ProductCode", name = "ProductCode" })

    <div class="col-lg-12">
        @*<div class="col-lg-6">
                                           <div class="form-group">
                                               <label class="control-label col-lg-2 col-md-3 col-sm-3 col-xs-12" for="category-name">
                                                    Category
                                               </label>
                                               <div class="col-lg-8 col-md-8 col-sm-8 col-xs-9" style="padding-left: 0.5%;">

                                                   @Html.TextBoxFor(m => m.Category, new { name = "Category", id = "Category", tabindex = "1", @class = "form-control col-md-7 col-xs-12" })
                                               </div>
                                               <div id="IsCategoryDiv" class="col-lg-1 col-md-1 col-sm-1 col-xs-3" >
                                                   <label>
                                                       <input type="checkbox" id="IsCategory" name="IsCategory" class="flat" tabindex="2" />
            </label>
                                               </div>
                                           </div>
                                       </div>*@
        <div class="col-lg-8">
            <div class="form-group">
                <label class="control-label col-lg-2 col-md-2 col-sm-3 col-xs-12" for="category-name">
                    Product @*<span class="required">*</span>*@
                </label>
                <div class="col-lg-9 col-md-9 col-sm-8 col-xs-12" style="padding-left: 0.5%;">

                    @Html.TextBoxFor(m => m.ProductName, new { name = "ProductName", id = "ProductName", tabindex = "3", @class = "form-control col-md-7 col-xs-12" })
                </div>
                <div id="IsProductDiv" class="col-lg-1 col-md-1 col-sm-1 col-xs-3" style="padding-left: 0.5%;">
                    <label>
                        <input type="checkbox" id="IsProduct" name="IsProduct" class="flat" tabindex="4" />
                    </label>
                </div>
            </div>
        </div>


    </div>
    <div class="col-lg-12">
        <div class="col-lg-8">

                <div class="form-group" style="margin-bottom:0px">
                    <label class="control-label col-lg-2 col-md-2 col-sm-4 col-xs-12" for="category-name">
                        Date @*<span class="required">*</span>*@
                    </label>
                    <div class="col-lg-4 col-md-4 col-sm-8 col-xs-12" style="padding-left: 0.5%;">
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.StartDate, new { name = "StartDate", id = "StartDate", tabindex = "1", @class = "form-control col-md-7 col-xs-12" })
                        </div>
                    </div>
                
                    <label class="control-label col-lg-1 col-md-2 col-sm-3 col-xs-3" for="category-name">
                        To  @*<span class="required">*</span>*@
                    </label>
                    <div class="col-lg-4 col-md-4 col-sm-8 col-xs-12" style="padding-left: 0.5%;">
                        @Html.TextBoxFor(m => m.EndDate, new { name = "EndDate", id = "EndDate", tabindex = "2", @class = "form-control col-md-7 col-xs-12" })
                    </div>
                </div>
            </div>
        </div>

                        <div class="col-lg-12">
                            @if (IsSoldByHo)
                            {
                                <div class="col-lg-8">
                                    <div class="form-group">
                                        <label class="control-label col-lg-2 col-md-2 col-sm-3 col-xs-12" for="category-name">
                                            Enter Party
                                        </label>
                                        <div class="col-lg-9 col-md-9 col-sm-8 col-xs-9" style="padding-left: 0.5%;">
                                            @Html.TextBoxFor(m => m.PartyName, new { name = "PartyName", id = "PartyName", tabindex = "5", @class = "form-control col-md-7 col-xs-12" })
                                        </div>
                                                <div id="IsPartyDiv" class="col-lg-1 col-md-1 col-sm-1 col-xs-3" style="padding-left: 0.5%;">
                                                    <label>
                                                        <input type="checkbox" id="IsParty" name="IsParty" class="flat" tabindex="6" />
                                                    </label>                                                
                                        </div>
                                    </div>
                                </div>

                            }
                            else
                            {
                            
                            }

                            <div class="col-lg-4">
                                <div class="form-group">
                                    <a style="cursor:pointer;color:blue;text-decoration:underline" id="CurrentStock">Stock Detail</a>
                                    <img src="~/images/ExcelImage.jpg" id="btnExport" style="height: 25px;cursor:pointer" />
                                </div>
                            </div>
                        </div>

                            <div class="col-lg-12">
                                <div>
                                    <b><span id="StockTypeLabel"></span></b>
                                </div>
                                <div style="float:right">
                                    Op.Stock Value: <label id="opval"></label>
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cls.Stock Value:<label id="clsval"></label>&nbsp;
                                </div>
                                <div class="form-group">

                                    <table class="table bootstrap-datatable" id="grid"></table>
                                    <center><span style="display:none" id="noRecord">No Stock Found</span></center>
                                </div>
                            </div>

                            <table id="gridExport" style="display:none"></table>
                        </form>
                </div>

            </div>
        </div>
    </div>
    <div id="dialogMessage" title="Message">

    </div>

</div>

