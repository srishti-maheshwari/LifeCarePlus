@model InventoryManagement.Entity.Common.IssueSampleProduct
@using InventoryManagement.Common
@using InventoryManagement.Entity.Common
@{
    ViewBag.Title = "SampleProductReport";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool IsSoldByHo = (Session["LoginUser"] as User).IsSoldByHo;
    string CurrentPartyCode = (Session["LoginUser"] as User).PartyCode;
    string CurrentPartyName = (Session["LoginUser"] as User).PartyName;
    string BarcodeCaption = System.Configuration.ConfigurationManager.AppSettings["BarcodeCaption"];
}
<style>
    .gj-grid-wrapper {
        min-width: 100% !important;
        overflow-x: scroll !important;
    }

    .ui-widget-header {
        margin-top: -1% !important;
        width: 102% !important;
        margin-left: -1% !important;
    }

    .ui-dialog-titlebar-close {
        margin-right: 1% !important;
    }

    .ui-widget-content {
        background: white !important;
        border-radius: 15px !important;
        -webkit-border-radius: 4px !important;
    }
    /*.ui-widget-header .ui-icon {
        background-color: black!important;
    }*/
    ui-autocomplete-input {
        z-index: 100;
    }

    .input-readonly {
        background-color: #EBEBE4;
    }
</style>
<script type="text/javascript">
    var grid, dialog;
    var StockGrid = [{}];
    var IsBatch = false;
    var tableStockGrid;
    var StockType = "CurrentStock";
    var IsCategory = false;
    var IsProduct = false;
    var IsParty = false;

    var FromDate = "", ToDate = "";
    var PreviouslySelectedFromDate = "";
    var PreviouslySelectedToDate = "";
    var PreviouslySelectedToPickerDate = "";
    var PreviouslySelectedFromPickerDate = "";
    var ProductList = [];
    var FullProductList;
    var PartyList = [];
    var FullPartyList;
    var CategoryList = [];
    var FullCategoryList;
    var IsDateFilter = false;
    var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    var TotalQty = 0;
    $(document).ready(function () {

        GetAllProducts(0);      
        $(".preloader").hide();
        var IsAdministrator = '@IsSoldByHo';
        if (IsAdministrator=="True") {
            GetAllParty();
        }
        else{
             $("#PartyCode").val('@CurrentPartyCode');
       }


        $('#IsDateFilter').on('ifChecked', function () {
            IsDateFilter = true;
            $("#StartDate").val("All");
            $("#StartDate").prop("readonly", "readonly");
            $("#EndDate").val("All");
            $("#EndDate").prop("readonly", "readonly");
            FromDate = "";
            ToDate = "";            

        });
        $('#IsDateFilter').on('ifUnchecked', function () {
            IsDateFilter = false;
            $("#StartDate").val("");
            $("#StartDate").prop("readonly", "");
            $("#EndDate").val("");
            $("#EndDate").prop("readonly", "");
            FromDate = "";
            ToDate = "";

        });
        $('#IsProduct').on('ifChecked', function () {
            IsProduct = true;
            ProductCode = "";
            $("#ProductName").val("All");
            $("#ProductName").prop("readonly", "readonly");
            $("#ProductCode").val(0);
        });

        $('#IsProduct').on('ifUnchecked', function () {
            IsProduct = false;
            ProductCode = "";
            $("#ProductName").val("");
            $("#ProductName").prop("readonly", "");
            $("#ProductCode").val("0");
        });

        $("#ProductName").autocomplete({
            source: function (request, response) {
                var results = $.ui.autocomplete.filter(ProductList, request.term);
                response(results.slice(0, 50));
            },
            minLength: 1,
            scroll: true,
            select: function (event, ui) {
                console.log("ui.item", ui.item.label);
                $("#ProductName").val(ui.item.label);
                SetSpecificCode("Product",ui.item.label);
                return false;
            },

        }).focus(function () {
            $(this).autocomplete("search", "");
        });


        $("#PartyName").autocomplete({
            source: function (request, response) {
                var results = $.ui.autocomplete.filter(PartyList, request.term);
                response(results.slice(0, 50));
            },
            minLength: 1,
            scroll: true,
            select: function (event, ui) {
                $("#PartyName").val(ui.item.label);
                SetSpecificCode("Party",ui.item.label);
                return false;
            },

        }).focus(function () {
            $(this).autocomplete("search", "");
        });


        $('#IsParty').on('ifChecked', function () {
            IsParty = true;
            $("#PartyName").val('All');
            $("#PartyName").prop("readonly", "readonly");
            $("#PartyCode").val('0');
        });

        $('#IsParty').on('ifUnchecked', function () {

            IsParty = false;
            $("#PartyName").val('');
            $("#PartyName").prop("readonly", "");
            $("#PartyCode").val('0');
        });


        $('#IsDateFilter').on('ifChecked', function () {
            //console.log("checked");
            IsDateFilter = true;
            $("#StartDate").val("All");
            $("#StartDate").prop("readonly", "readonly");
            FromDate = "";
            ToDate = "";
            $("#EndDate").val("All");
            $("#EndDate").prop("readonly", "readonly");

        });
        $('#IsDateFilter').on('ifUnchecked', function () {
            //console.log("checked");
            IsDateFilter = false;
            $("#StartDate").val("");
            $("#StartDate").prop("readonly", "");
            $("#EndDate").val("");
            $("#EndDate").prop("readonly", "");
            FromDate = "";
            ToDate = "";
        });

        $("#StartDate").datetimepicker({
            format: 'DD-MMM-YYYY'
            ,
            // todayHighlight:true,
            widgetPositioning: {
                horizontal: 'auto',
                vertical: 'bottom'
            }

        }).on('dp.change', function (e) {
            // console.log(e.date);
            // fromDate = $('#FromDatePickerWidget').val();
            var selectedDate = e.date._d;
            console.log(selectedDate.getMonth()+1);
            var lengthOfMonth = ((selectedDate.getMonth() + 1).toString()).length;
            console.log(lengthOfMonth);
            console.log(selectedDate.getMonth() + 1);
            var lengthOfMonth = ((selectedDate.getMonth() + 1).toString()).length;
            console.log(lengthOfMonth);
            var twoDigitMonth = (lengthOfMonth > 1) ? (selectedDate.getMonth() + 1) : '0' + (selectedDate.getMonth() + 1);

            var newFromDate = selectedDate.getDate() + "-" + months[selectedDate.getMonth()] + "-" + selectedDate.getFullYear();
            console.log("newDate", newFromDate);
            FromDate = newFromDate;
            PreviouslySelectedFromPickerDate = newFromDate;
            console.log("FromDate", FromDate);
            ToDate = PreviouslySelectedToPickerDate;
        });
    $("#EndDate").datetimepicker({


        format: 'DD-MMM-YYYY'
        ,
        // todayHighlight:true,
        widgetPositioning: {
            horizontal: 'auto',
            vertical: 'bottom'
        }

    }).on('dp.change', function (e) {

        var selectedDate = e.date._d;

        console.log(selectedDate.getMonth() + 1);
        var lengthOfMonth = ((selectedDate.getMonth() + 1).toString()).length;
        console.log(lengthOfMonth);
        var twoDigitMonth = (lengthOfMonth > 1) ? (selectedDate.getMonth() + 1) : '0' + (selectedDate.getMonth() + 1);

        var newToDate = selectedDate.getDate() + "-" + months[selectedDate.getMonth()] + "-" + selectedDate.getFullYear();
        console.log("newToDate", newToDate);
        ToDate = newToDate;
        PreviouslySelectedToPickerDate = newToDate;
        console.log("ToDate in picker", ToDate);
        FromDate = PreviouslySelectedFromPickerDate;

    });

        $('#CurrentStock').click(function () {
            $(".preloader").show();
            var ProductCode = $("#ProductCode").val();
            var ProductName = $("#ProductName").val();
            var PartyCode = $("#PartyCode").val();
            FromDate = $("#StartDate").val();
            ToDate = $("#EndDate").val();

            var DateError = false;

            if (FromDate != "" && FromDate != null && ToDate != "") {

                var d1 = toDate(FromDate);
                var d2 = toDate(ToDate);

                if (d1 > d2) {
                    DateError = true;
                    $(".preloader").hide();
                    OpenDialog("dialogMessage", "From Date should be less than To Date!", "false");
                }
                else {
                    DateError = false;

                }
            }
            else {
                DateError = false;
                if (IsDateFilter == false) {

                }
               if (FromDate == "" || FromDate == null) {
                    FromDate = "All";                   
                }
                if (ToDate == "" || ToDate == null) {
                    ToDate = "All";                    
                }
            }

            
            if (DateError == false) {
                GetStockDetails(ProductCode, PartyCode, FromDate, ToDate);
            }

        });
        
        $("#PrintProduct").on('click', function () {
            $("#DetailPrintDiv").printElement();
        });

        $("#btnExport").on('click', function () {
           var UserTypeStr = "SampleProductReport";

            var tableString = "<thead><tr>";

                tableString += "<th>S.No.</th>";
                tableString += "<th>Trans No.</th>";
                tableString += "<th>Trans Date</th>";
                tableString += "<th>Issue Date</th>";
                tableString += "<th>Ref no.</th>";
                tableString += "<th>Issued To</th>";                
                tableString += "<th>Qunatity</th>";
                tableString += "<th>Remark</th>";
                tableString += "</tr></thead><tbody>";
                for (var i = 0; i < StockGrid.length; i++) {
                    tableString += "<tr>";
                    tableString += "<td>"+StockGrid[i].SNo+"</td>";
                    tableString += "<td>"+StockGrid[i].TransNo+"</td>";
                    tableString += "<td>" + StockGrid[i].TransDate + "</td>";
                    tableString += "<td>" + StockGrid[i].IssueDate + "</td>";
                    tableString += "<td>"+StockGrid[i].RefNo+"</td>";
                    tableString += "<td>"+StockGrid[i].PartyName+"</td>";                    
                    tableString += "<td>"+StockGrid[i].Qty+"</td>";
                    tableString += "<td>" + StockGrid[i].Remark + "</td>";
                    tableString += "</tr>";
                }

                tableString += "</tbody>";
                $("#gridExport").empty();
                $("#gridExport").append(tableString);
                tableToExcel('gridExport', UserTypeStr + "_Export");

            });

    });
    function toDate(dateStr) {
        var parts = dateStr.split("-");
        return new Date(parts[2], parts[1] - 1, parts[0]);
    }

    function SetSpecificCode(type, label) {
        if (type == "Product") {
            for (var i = 0; i < FullProductList.length; i++) {
                if (FullProductList[i].ProductName == label) {
                    $("#ProductCode").val(parseFloat(FullProductList[i].ProductCodeStr));
                    break;
                }
            }
        }

        if (type == "Party") {
            for (var i = 0; i < FullPartyList.length; i++) {
                if (FullPartyList[i].PartyName == label) {
                    $("#PartyCode").val(FullPartyList[i].PartyCode);
                    break;
                }
            }
        }
    }

    function GetAllProducts(catId) {

        $.ajax({
            url: '/Report/GetAllProduct',
            dataType: "json",
            method: 'POST',
            async: false,
            data: { 'CategoryCode': catId },
            success: function (data) {
                console.log("data:", data);
                //response(data);
                FullProductList = data;
                ProductList = [];
                if (data != null) {
                    var i = 0;
                    for (i = 0; i < data.length; i++) {
                        //console.log("data[i]", data[i]);
                        ProductList.push(data[i].ProductName);
                    }
                }
            },
            error: function (xhr, status, error) {
                console.log("xhr.responseText:", xhr.responseText);
                //var responseText = jQuery.parseJSON(xhr.responseText);
                //console.log("responseText.ExceptionType:", responseText.ExceptionType);
                //console.log("responseText.Message:", responseText.Message);
            }
        });
    }

    function GetAllParty() {
        $.ajax({
            url: '/Report/GetAllPartyListForReports',
            dataType: 'JSON',
            method: 'GET',
            //data: { 'LedgerName': '' },
            success: function (data) {
                console.log("data:", data);
                //response(data);
                FullPartyList = data;
                PartyList = [];
                if (data != null) {
                    var i = 0;
                    for (i = 0; i < data.length; i++) {
                        //console.log("data[i]", data[i]);
                        PartyList.push(data[i].PartyName);
                    }
                }
            },
            error: function (error) {
                console.log(error);
            }
        });
    }

    function OpenDialog(dialogId, Message, isConfirmation) {
        $("#" + dialogId).empty();
        $("#" + dialogId).append('<p>' + Message + '</p>');
        if (isConfirmation == "true") {
            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "Yes",
                    id: "btnYes" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}
                        IsYes = true;
                        $("#" + dialogId).dialog("close");


                    }
                },
                {
                    text: "No",
                    id: "btnNo" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}
                        IsYes = false;
                        $("#" + dialogId).dialog("close");
                    }
                }
                ]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }
        else {


            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "OK",
                    id: "btn" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}

                        $("#" + dialogId).dialog("close");


                    }
                }]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }

    }
    function fillGrid() {
        $("#noRecord").hide();
        if (grid != null) {
            grid.destroy();
            $('#grid').empty();

        }

            grid = $('#grid').grid({
                dataSource: StockGrid,
                uiLibrary: 'bootstrap',
                headerFilter: true,
                columns: [
                    { field: 'SNo', title: 'S.No.', width: 50, sortable: true, hidden: false, filterable: false },
                    { field: 'TransNo', title: 'Trans No.', width: 80, sortable: true, hidden: false, filterable: true, events: { 'click': GetDetail }, tmpl: '<a style="text-decoration:underline;color:blue">{TransNo}</a>', align: 'center' },

                    { field: 'TransDate', width: 80, title: 'Trans Date', sortable: true, hidden: false, filterable: true },
                    { field: 'IssueDate', width: 80, title: 'Issue Date', sortable: true, hidden: false, filterable: true },
                    { field: 'RefNo', width: 80, title: 'Ref no.', sortable: true, hidden: false, filterable: true },
                    { field: 'PartyName', width: 150, title: 'Issued To', sortable: true, hidden: false, filterable: true },                    
                    { field: 'Qty', width: 80, title: 'Qunatity', sortable: true, hidden: false, filterable: true },
                    { field: 'Remark', width: 120, title: 'Remark', sortable: true, hidden: false, filterable: true },

                ],
                pager: { limit: 50, sizes: [15, 20, 35, 50, 65, 80, 95, 100] },
                dataBound: function (e, records, totalRecords) {
                    $("#totalQuantity").html(Math.trunc(parseFloat(TotalQty)));
                    //$("#totalNetAmount").html(Math.trunc(parseFloat(TotalAmount)));

                }
            });

        $(".loader").hide();
    }

    function GetDetail(e) {
        var BillNoToDelete = e.data.record.TransNo;
        $("#TransNo").html("TransNo :-" + e.data.record.TransNo);
        $("#TransDate").html("TransDate :- " + e.data.record.TransDate);
        $("#IssueDate").html("IssueDate :- " + e.data.record.IssueDate);
        $("#RefNo").html("RefNo :- " + e.data.record.RefNo);
        $("#PartyNames").html("PartyName :- " + e.data.record.PartyName);
        $("#Qty").html("Total Qty :- " + e.data.record.Qty);
        $("#Remark").html("Remark :- " + e.data.record.Remark);
        $.ajax({
            url: '/Report/GetSampleProductList',
            dataType: "json",
            method: 'GET',
            async: false,
            data: { 'TransNo': BillNoToDelete },
            success: function (data) {
                $("#DetaildialogDiv").html(data);
            },
            error: function (xhr, status, error) {
                console.log("xhr.responseText:", xhr.responseText);
            }
        });
        openDetailPopup();

    }

    function openDetailPopup() {
        $("#Detaildialog").dialog({
            modal: true,
            width: "60%"
        });

        $("#Detaildialog").dialog("open");
    }

    function GetStockDetails(ProductCode, PartyCode, startDate,endDate) {

        

            $.ajax({
                url: '@Url.Action("GetSampleProductReport", "Report")',
                type: 'POST',
                data: {"ProductCode": ProductCode, "PartyCode": "All", "FromDate": startDate, "ToDate": endDate},
                dataType: "json",
                success: function (objResult) {
                    StockGrid = [{}];
                    if (objResult.length > 0) {
                        StockGrid = StockGrid.splice(1);
                        for (var i = 0; i < objResult.length; i++) {

                            StockGrid.push({
                                "SNo": i + 1,
                                "TransNo": objResult[i].TransNo,
                                "PartyName": objResult[i].partyName,
                                "ProductCode": objResult[i].ProductCode,
                                "ProductName": objResult[i].ProductName,
                                "RefNo": objResult[i].RefNo,
                                "TransDate": objResult[i].TransDateStr,
                                "IssueDate": objResult[i].IssueDateStr,
                                "Barcode": objResult[i].Barcode,
                                "Remark": objResult[i].Remark,
                                "Qty": objResult[i].Qty,


                            });
                            TotalQty += parseFloat(objResult[i].Qty);
                        }
                        tableStockGrid = StockGrid;
                        $("#noRecord").hide();
                    }
                    else {

                        $("#noRecord").show();
                    }
                    fillGrid();
                    $(".preloader").hide();

                },
                error: function (xhr, data) {
                    //  return false;
                    console.log(xhr);
                    console.log("Error:", data);
                }
            });



    }
</script>

<div class="row">

    <div class="clearfix"></div>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>Sample Product Report</h2>
                    <ul class="nav navbar-right panel_toolbox">
                        <li>
                            <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                        </li>
                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <br />
                    <form id="distributorForm" method="post" name="distributorForm" onsubmit="false" data-parsley-validate class="validateForm form-horizontal form-label-left">
                        @Html.HiddenFor(m => m.partyCode, new { id = "PartyCode", name = "PartyCode" })
                       @Html.HiddenFor(m => m.ProductCode, new { id = "ProductCode", name = "ProductCode" })

                        <div class="col-lg-12">
                           
                            <div class="col-lg-8">
                                <div class="form-group">
                                    <label class="control-label col-lg-2 col-md-2 col-sm-3 col-xs-12" for="category-name">
                                        Product @*<span class="required">*</span>*@
                                    </label>
                                    <div class="col-lg-9 col-md-9 col-sm-8 col-xs-12" style="padding-left: 0.5%;">

                                        @Html.TextBoxFor(m => m.ProductName, new { name = "ProductName", id = "ProductName", tabindex = "3", @class = "form-control col-md-7 col-xs-12" })
                                    </div>
                                    
                                    <div id="IsProductDiv" class="col-lg-1 col-md-1 col-sm-1 col-xs-3" style="padding-left: 0.5%;">
                                        <label>
                                            <input type="checkbox" id="IsProduct" name="IsProduct" class="flat" tabindex="7" />
                                        </label>
                                    </div>
                                </div>
                            </div>


                        </div>
                        <div class="col-lg-12">
                            <div class="col-lg-8">

                                <div class="form-group" style="margin-bottom:0px">
                                    <label class="control-label col-lg-2 col-md-2 col-sm-4 col-xs-12" for="category-name">
                                        Issue Date @*<span class="required">*</span>*@
                                    </label>
                                    <div class="col-lg-4 col-md-4 col-sm-8 col-xs-12" style="padding-left: 0.5%;">
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.StartDate, new { name = "StartDate", id = "StartDate", tabindex = "1", @class = "form-control col-md-7 col-xs-12" })
                                        </div>
                                    </div>

                                    <label class="control-label col-lg-1 col-md-2 col-sm-3 col-xs-3" for="category-name">
                                        To  @*<span class="required">*</span>*@
                                    </label>
                                    <div class="col-lg-4 col-md-4 col-sm-8 col-xs-12" style="padding-left: 0.5%;">
                                        @Html.TextBoxFor(m => m.EndDate, new { name = "EndDate", id = "EndDate", tabindex = "2", @class = "form-control col-md-7 col-xs-12" })
                                    </div>
                                    <div id="IsDateFilterDiv" class="col-lg-1 col-md-1 col-sm-1 col-xs-3" style="padding-left: 0.5%;">
                                        <label>
                                            <input type="checkbox" id="IsDateFilter" name="IsDateFilter" class="flat" tabindex="3" />

                                        </label>
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-4">
                                <div class="form-group">
                                    <input type="button" id="CurrentStock" name="CurrentStock" value="Get Report" />
                                    <img src="~/images/ExcelImage.jpg" id="btnExport" style="height: 25px;cursor:pointer" />
                                </div>
                            </div>
                            
                        </div>

                        <div class="col-lg-12">
                            @*@if (IsSoldByHo)
                            {
                                <div class="col-lg-8">
                                    <div class="form-group">
                                        <label class="control-label col-lg-2 col-md-2 col-sm-3 col-xs-12" for="category-name">
                                            Enter Party
                                        </label>
                                        <div class="col-lg-9 col-md-9 col-sm-8 col-xs-9" style="padding-left: 0.5%;">
                                            @Html.TextBoxFor(m => m.partyName, new { name = "PartyName", id = "PartyName", tabindex = "5", @class = "form-control col-md-7 col-xs-12" })
                                        </div>
                                        <div id="IsPartyDiv" class="col-lg-1 col-md-1 col-sm-1 col-xs-3" style="padding-left: 0.5%;">
                                            <label>
                                                <input type="checkbox" id="IsParty" name="IsParty" class="flat" tabindex="6" />
                                            </label>
                                        </div>
                                    </div>
                                </div>

                            }*@                            
                           
                        </div>                       

                        <table id="gridExport" style="display:none"></table>
                        
                    </form>


                </div>
                <div class="col-lg-12">

                    <div class="form-group">
                                                
                        <table class="table bootstrap-datatable" id="grid"></table>
                        <center><span style="display:none" id="noRecord">No Records Found</span></center>


                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="col-lg-5">&nbsp;</div>
                    <div class="col-lg-3">Total Quantity :- <span id="totalQuantity"></span></div>
                    @*<div class="col-lg-4">Total Net Amount :- <span id="totalNetAmount"></span></div>*@
                </div>
            </div>
        </div>
    </div>
    <div id="dialogMessage" title="Message">

    </div>
    <div id="Detaildialog" style="display: none;" title="Sample product detail">
        <div class="col-lg-12">
            <input style="float:right;" type="button" id="PrintProduct" name="PrintProduct" value="Print" />
        </div>
        <div class="col-lg-12">
            &nbsp;
        </div>
        <div id="DetailPrintDiv" class="col-lg-12">
            <div class="col-lg-12">
                <table border="1" width="100%">
                    <tr>
                        <td id='TransNo'></td>
                        <td id='TransDate'></td>
                        <td id='IssueDate'></td>
                    </tr>
                    <tr>
                        <td id='RefNo'></td>
                        <td id='PartyNames'></td>
                        <td id='Qty'></td>
                    </tr>
                    <tr>
                        <td colspan="3" id='Remark'></td>
                    </tr>
                </table>
                </div>
            <div class="col-lg-12">
               &nbsp;
            </div>
                <div id="DetaildialogDiv" class="col-lg-12" >

                </div>
            </div>
       
       
    </div>
</div>
