@model InventoryManagement.Entity.Common.User
@using InventoryManagement.Common
@using InventoryManagement.Entity.Common
@{
    ViewBag.Title = "UserMasterList";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string CurrentPartyCode = (Session["LoginUser"] as User).PartyCode;
    string CurrentPartyName = (Session["LoginUser"] as User).PartyName;
}

<style>
    .ui-widget-header {
        margin-top: -1% !important;
        width: 102% !important;
        margin-left: -1% !important;
    }

    .ui-dialog-titlebar-close {
        margin-right: 1% !important;
    }

    .ui-widget-content {
        background: white !important;
        border-radius: 15px !important;
        -webkit-border-radius: 4px !important;
    }
    /*.ui-widget-header .ui-icon {
        background-color: black!important;
    }*/
    ui-autocomplete-input {
        z-index: 100;
    }

    .input-readonly {
        background-color: #EBEBE4;
    }

    .gj-grid-wrapper {
        min-width: 100% !important;
        overflow-x: scroll !important;
    }
</style>
<script type="text/javascript">
    var grid, dialog;
    var UserGrid = [{}];
    var ActionType = "Add";
    var UserCode = "";
    $(document).ready(function () {


        $(".preloader").hide();

        GetAllUsers();

        $("#btnAdd").click(function () {
            ActionType = "Add";
            UserCode = "";
            var link='@Url.Action("AddUser", "User",new { IsActionName = "-1", UserCode = "-2" })';
            link=link.replace("-1",ActionType);
            link = link.replace("-2", UserCode);
            window.location.href = link;
        });
    });

    function Edit(e){
        ActionType="Edit";
        UserCode = e.data.record.UserId;
        console.log("UserCode", UserCode);
        var link = '@Url.Action("AddUser", "User", new { IsActionName = "-1", UserCode = "-2" })';
        link = link.replace("-1", ActionType);
        link = link.replace("-2", UserCode);
        link = link.replace("&amp;", "&");
        window.location.href = link;
    }

    function Delete(e) {
        ActionType = "Delete";
        UserCode = e.data.record.UserId;
        $("#IsActionName").val(ActionType);
        $("#UserCode").val(UserCode);
        var formdata = new FormData($("#form_user")[0]);
        $.ajax({
            url: '@Url.Action("SaveUserDetails", "User")',
            type: 'POST',
            data: formdata,
            processData: false,
            contentType: false,
            dataType: "json",
            success: function (objResponse) {
                if (objResponse != null) {

                        OpenDialog("dialogMessage", objResponse.ResponseMessage, "false");
                        GetAllUsers();

                }
                fillGrid();
            },
            error: function (xhr, data) {
                //  return false;
                console.log(xhr);
                console.log("Error:", data);
            }
        });
    }

    function GetAllUsers() {
        $.ajax({
            url: '/User/GetAllUserList',
            dataType: 'JSON',
            method: 'GET',
            
            success: function (objResult) {
                console.log("objResult:", objResult);
                UserGrid=[{}];
                if (objResult.length > 0) {

                    var i = 0;

                    for (i = 0; i < objResult.length; i++) {

                        UserGrid.push({ "SNo": i + 1, "UserId": objResult[i].UserId, "FCode": objResult[i].FCode, "PartyName": objResult[i].PartyName, "UserName": objResult[i].UserName, "Password": objResult[i].Password, "Remarks": objResult[i].Remarks, "ActiveStatus": objResult[i].ActiveStatus, "Mobile": objResult[i].Mobile, "Email": objResult[i].Email });
                    }
                    if (UserGrid[0].SNo == null || UserGrid[0].SNo == "") {
                        UserGrid = UserGrid.splice(1);
                    }
                    console.log("UserGrid", UserGrid);
                    fillGrid();
                }
            },
            error: function (error) {
                console.log(error);
            }
        });
    }


    function OpenDialog(dialogId, Message, isConfirmation) {
        $("#" + dialogId).empty();
        $("#" + dialogId).append('<p>' + Message + '</p>');
        if (isConfirmation == "true") {
            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "Yes",
                    id: "btnYes" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}
                        IsYes = true;
                        $("#" + dialogId).dialog("close");


                    }
                },
                {
                    text: "No",
                    id: "btnNo" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}
                        IsYes = false;
                        $("#" + dialogId).dialog("close");
                    }
                }
                ]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }
        else {


            $("#" + dialogId).dialog({
                modal: true,
                buttons: [{
                    text: "OK",
                    id: "btn" + dialogId,
                    click: function () {
                        //var isOpen = $("#dialog").dialog("isOpen");
                        //if (isOpen == true) {
                        //    okCallBack();
                        //}

                        $("#" + dialogId).dialog("close");


                    }
                }]
            });
            $(".ui-dialog-titlebar-close").empty();
            $(".ui-dialog-titlebar-close").append('<i class="fa fa-close"></i>');
        }

    }
    function fillGrid() {
        console.log("UserGrid", UserGrid);

               // StockGrid = StockGrid.splice(1);

        $("#noRecord").hide();
        //console.log("ProductGrid", ProductGrid);
        if (grid != null) {
            grid.destroy();
            $('#grid').empty();

        }
        if (UserGrid.length == 0) {
            $("#noRecord").show();
        }

        var CanEdit = true;
        var UserAccess = '@ViewBag.UserCanAccess';

        if (UserAccess == 'Edit') {
            CanEdit = false;
        }

            grid = $('#grid').grid({
                dataSource: UserGrid,
                uiLibrary: 'bootstrap',
                headerFilter: true,
                columns: [
                    { field: 'SNo', title: 'S.No.', width: 50, sortable: true, hidden: false, filterable: false },
                    { field: 'UserId', title: 'UserId', width: 70, sortable: true, hidden: false, filterable: true },
                        { field: 'FCode', title: 'FCode', width: 70, sortable: true, hidden: false, filterable: true },
                        { field: 'PartyName', title: 'Party Name', width: 100, sortable: true, hidden: false, filterable: true },
                        { field: 'UserName', title: 'UserName', width: 80, sortable: true, hidden: false, filterable: true },
                        { field: 'Password', title: 'Password', width: 80, sortable: true, hidden: false, filterable: true },
                        { field: 'Mobile', title: 'Mobile', width: 80, sortable: true, hidden: false, filterable: true },
                        { field: 'Email', title: 'Email', width: 80, sortable: true, hidden: false, filterable: true },
                        { field: 'Remarks', title: 'Remarks', width: 100, sortable: true, hidden: false, filterable: true },
                        { field: 'ActiveStatus', title: 'Active Status', width: 100, sortable: true, hidden: false, filterable: true },
                        { title: '', field: 'Edit', width: 30, type: 'icon',hidden:CanEdit, icon: 'glyphicon-pencil', tooltip: 'Edit', events: { 'click': Edit }, filterable: false },
                        { title: '', field: 'Delete', width: 30, type: 'icon', hidden: CanEdit, icon: 'glyphicon-remove', tooltip: 'Delete', events: { 'click': Delete }, filterable: false }
                ],
                pager: { limit: 50, sizes: [15, 20, 35, 50, 65, 80, 95, 100] }
            });

    }



</script>

<div class="row">
    <div class="page-title">
        <div class="title_left">
            <h3>User</h3>
        </div>
        <div class="title_right">
            <div class="col-md-5 col-sm-5 col-xs-12 form-group pull-right top_search">

            </div>
        </div>
    </div>

    <div class="clearfix"></div>

    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>User List</h2>
                    <form id="form_user" name="form_user">
                        @Html.HiddenFor(m => m.IsActionName, new { id = "IsActionName", name = "IsActionName" })
                        @Html.HiddenFor(m => m.UserId, new { id = "UserCode", name = "UserCode" })
                    </form>
                    <ul class="nav navbar-right panel_toolbox">
                        <li>
                            <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                        </li>

                    </ul>
                    <div class="clearfix"></div>
                </div>
                <div class="x_content">
                    <br />

                    <div class="row" style="margin-top:1%">
                        <div class="col-lg-12">
@if (ViewBag.UserCanAccess == "Edit")
{
                            <button id="btnAdd" type="button" class="btn btn-default pull-right">Add New User</button>
}
                        </div>
                    </div>


                    <div class="row" style="margin-top:1%">
                        <br />

                        <br />@*<br /><br /><center><div class="loader" style="display:none"></div></center>*@
                        <table class="table bootstrap-datatable" id="grid"></table>
                        <center><span style="display:none" id="noRecord">No User Found</span></center>


                    </div>


                    <table id="gridExport" style="display:none"></table>

                </div>

            </div>
        </div>
    </div>
    <div id="dialogMessage" title="Message">

    </div>

</div>



